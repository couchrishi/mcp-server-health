{
    "21st.dev Magic": {
        "name": "21st.dev Magic",
        "repo_url": "https://github.com/21st-dev/magic-mcp",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.8.0",
                "@types/cors": "^2.8.17",
                "@types/express": "^5.0.0",
                "@types/node-fetch": "^2.6.12",
                "class-variance-authority": "^0.7.1",
                "clsx": "^2.1.1",
                "cors": "^2.8.5",
                "express": "^4.21.2",
                "framer-motion": "^12.6.2",
                "node-fetch": "^2.7.0",
                "open": "^10.1.0",
                "tailwind-merge": "^3.0.2",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@types/axios": "^0.9.36",
                "@types/jest": "^29.5.14",
                "@types/node": "^22.13.4",
                "@types/react": "^19.0.12",
                "jest": "^29.7.0",
                "nodemon": "^3.1.9",
                "shx": "^0.3.4",
                "ts-jest": "^29.1.2",
                "typescript": "^5.8.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.14.0-alpine\n\nWORKDIR /app\n\n# Copy package files\nCOPY package.json package-lock.json ./\n\n# Install pnpm and dependencies\nRUN npm install\n\n# Copy application code\nCOPY . .\n\n# Build TypeScript\nRUN npm run build\n\n# Command will be provided by smithery.yaml\nCMD [\"node\", \"dist/index.js\"] ",
        "base_docker_image": "node:22.14.0-alpine",
        "forks": 57,
        "stars": 886,
        "watchers": 6,
        "last_commit": "2025-03-31T21:09:45Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for 21st-dev/magic-mcp: 403; ClosedIssuesError: API error (closed issues) for 21st-dev/magic-mcp: 403"
    },
    "APIMatic MCP": {
        "name": "APIMatic MCP",
        "repo_url": "https://github.com/apimatic/apimatic-validator-mcp",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@apimatic/authentication-adapters": "^0.5.6",
                "@apimatic/axios-client-adapter": "^0.3.8",
                "@apimatic/core": "^0.10.18",
                "@apimatic/schema": "^0.7.15",
                "@modelcontextprotocol/sdk": "^1.7.0",
                "adm-zip": "^0.5.16",
                "archiver": "^7.0.1",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@types/adm-zip": "^0.5.7",
                "@types/archiver": "^6.0.3",
                "@types/node": "^22.13.10",
                "chmod-cli": "^2.0.1",
                "typescript": "^5.8.2"
            }
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 1,
        "watchers": 1,
        "last_commit": "2025-03-19T11:57:24Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for apimatic/apimatic-validator-mcp: 403; ClosedIssuesError: API error (closed issues) for apimatic/apimatic-validator-mcp: 403"
    },
    "AWS": {
        "name": "AWS",
        "repo_url": "https://github.com/rishikavikondala/mcp-server-aws",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.0.0",
                "python-dotenv>=1.0.1",
                "boto3>=1.35.53"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use an official Python image\nFROM python:3.13-slim\n\n# Set environment variables\nENV PYTHONDONTWRITEBYTECODE=1\nENV PYTHONUNBUFFERED=1\n\n# Create and set working directory\nWORKDIR /app\n\n# Install build system and dependencies\nRUN pip install --upgrade pip && \\\n    pip install hatchling\n\n# Copy the project files into the container\nCOPY . /app\n\n# Install the project in editable mode (if necessary)\nRUN hatch build && pip install .\n\n# Set up environment variables for AWS credentials\nENV AWS_ACCESS_KEY_ID=your_access_key_id\nENV AWS_SECRET_ACCESS_KEY=your_secret_access_key\nENV AWS_REGION=us-east-1\n\n# Run the MCP server\nCMD [\"hatch\", \"run\", \"mcp-server-aws\"]\n",
        "base_docker_image": "python:3.13-slim",
        "forks": 9,
        "stars": 82,
        "watchers": 1,
        "last_commit": "2025-03-13T06:26:26Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for rishikavikondala/mcp-server-aws: 403; ClosedIssuesError: API error (closed issues) for rishikavikondala/mcp-server-aws: 403"
    },
    "AWS Athena": {
        "name": "AWS Athena",
        "repo_url": "https://github.com/lishenxydlgzs/aws-athena-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@aws-sdk/client-athena": "^3.0.0",
                "@aws-sdk/credential-provider-node": "^3.0.0",
                "@modelcontextprotocol/sdk": "^1.6.0"
            },
            "devDependencies": {
                "@types/node": "^20.0.0",
                "typescript": "^5.0.0"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\nFROM node:lts-alpine\nWORKDIR /app\n\n# Copy package files\nCOPY package.json package-lock.json ./\n\n# Install dependencies without running scripts\nRUN npm install --ignore-scripts\n\n# Copy the source code\nCOPY tsconfig.json ./\nCOPY src ./src\n\n# Build the project\nRUN npm run build\n\n# Expose port if needed (not really used for stdio, but optional)\nEXPOSE 8080\n\n# Run the MCP server\nCMD [ \"node\", \"build/index.js\" ]\n",
        "base_docker_image": "node:lts-alpine",
        "forks": 5,
        "stars": 4,
        "watchers": 1,
        "last_commit": "2025-03-14T06:17:46Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for lishenxydlgzs/aws-athena-mcp: 403; ClosedIssuesError: API error (closed issues) for lishenxydlgzs/aws-athena-mcp: 403"
    },
    "AWS Cost Explorer": {
        "name": "AWS Cost Explorer",
        "repo_url": "https://github.com/aarora79/aws-cost-explorer-mcp-server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "boto3>=1.37.9",
                "botocore>=1.37.9",
                "chainlit>=2.4.1",
                "jmespath>=1.0.1",
                "langchain>=0.3.20",
                "langchain-anthropic>=0.3.9",
                "langchain-aws>=0.2.15",
                "langchain-mcp-adapters>=0.0.4",
                "langgraph>=0.3.10",
                "mcp>=1.3.0",
                "pandas>=2.2.3",
                "pydantic>=2.10.6",
                "tabulate>=0.9.0",
                "typing-extensions>=4.12.2"
            ],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM python:3.12-slim\n\nWORKDIR /app\n\n# install astral uv for Python dependencies\nRUN pip install uv\n\n# Copy project files\nCOPY pyproject.toml .\nCOPY server.py .\n\n# Install dependencies using uv\nRUN uv pip install --no-cache --system -e .\n\n# Add AWS configuration directory\nRUN mkdir -p /root/.aws\n\n# Expose port for SSE transport\nEXPOSE 8000\n\n# Run the MCP server\nCMD [\"python\", \"server.py\"]",
        "base_docker_image": "python:3.12-slim",
        "forks": 17,
        "stars": 67,
        "watchers": 3,
        "last_commit": "2025-03-21T00:24:29Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for aarora79/aws-cost-explorer-mcp-server: 403; ClosedIssuesError: API error (closed issues) for aarora79/aws-cost-explorer-mcp-server: 403"
    },
    "AWS KB Retrieval": {
        "name": "AWS KB Retrieval",
        "repo_url": "https://github.com/modelcontextprotocol/servers/tree/main/src/aws-kb-retrieval-server",
        "type": "reference",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.5.0",
                "@aws-sdk/client-bedrock-agent-runtime": "^3.0.0"
            },
            "devDependencies": {
                "@types/node": "^22",
                "shx": "^0.3.4",
                "typescript": "^5.6.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.12-alpine AS builder\n\nCOPY src/aws-kb-retrieval-server /app\nCOPY tsconfig.json /tsconfig.json\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nFROM node:22-alpine AS release\n\nWORKDIR /app\n\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\nENV NODE_ENV=production\n\nRUN npm ci --ignore-scripts --omit-dev\n\nENTRYPOINT [\"node\", \"dist/index.js\"]",
        "base_docker_image": "node:22.12-alpine",
        "forks": 2985,
        "stars": 28753,
        "watchers": 208,
        "last_commit": "2025-03-31T15:41:32Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "AWS Resources Operations": {
        "name": "AWS Resources Operations",
        "repo_url": "https://github.com/baryhuang/mcp-server-aws-resources-python",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "boto3",
                "mcp",
                "pydantic",
                "pytz"
            ],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Use Python base image\nFROM python:3.10-slim-bookworm\n\n# Install the project into `/app`\nWORKDIR /app\n\n# Copy the entire project\nCOPY . /app\n\n# Install dependencies first for better caching\nRUN pip install --no-cache-dir boto3 mcp pydantic\n\n# Install the package in development mode\nRUN pip install -e .\n\n# Run the server\nENTRYPOINT [\"python\", \"-m\", \"mcp_server_aws_resources.server\"] ",
        "base_docker_image": "python:3.10-slim-bookworm",
        "forks": 3,
        "stars": 3,
        "watchers": 1,
        "last_commit": "2025-03-14T22:55:44Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for baryhuang/mcp-server-aws-resources-python: 403; ClosedIssuesError: API error (closed issues) for baryhuang/mcp-server-aws-resources-python: 403"
    },
    "AWS S3": {
        "name": "AWS S3",
        "repo_url": "https://github.com/aws-samples/sample-mcp-server-s3",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "aioboto3>=13.2.0",
                "mcp>=1.0.0",
                "python-dotenv>=1.0.1"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": false,
        "forks": 4,
        "stars": 23,
        "watchers": 2,
        "last_commit": "2025-02-24T23:40:53Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for aws-samples/sample-mcp-server-s3: 403; ClosedIssuesError: API error (closed issues) for aws-samples/sample-mcp-server-s3: 403"
    },
    "Ableton Live": {
        "name": "Ableton Live",
        "repo_url": "https://github.com/Simon-Kansara/ableton-live-mcp-server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "fastmcp>=0.4.1",
                "python-osc>=1.9.3"
            ],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 26,
        "stars": 151,
        "watchers": 8,
        "last_commit": "2025-03-26T16:05:41Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for Simon-Kansara/ableton-live-mcp-server: 403; ClosedIssuesError: API error (closed issues) for Simon-Kansara/ableton-live-mcp-server: 403"
    },
    "Adfin": {
        "name": "Adfin",
        "repo_url": "https://github.com/Adfin-Engineering/mcp-server-adfin",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp[cli]>=1.4.1",
                "requests>=2.32.3"
            ],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 3,
        "watchers": 1,
        "last_commit": "2025-03-20T14:09:47Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for Adfin-Engineering/mcp-server-adfin: 403; ClosedIssuesError: API error (closed issues) for Adfin-Engineering/mcp-server-adfin: 403"
    },
    "AgentQL": {
        "name": "AgentQL",
        "repo_url": "https://github.com/tinyfish-io/agentql-mcp",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.6.1",
                "node-fetch": "^3.3.2"
            },
            "devDependencies": {
                "@trivago/prettier-plugin-sort-imports": "^4.3.0",
                "@types/node": "^20.11.24",
                "@types/node-fetch": "^2.6.12",
                "@typescript-eslint/eslint-plugin": "^8.4.0",
                "eslint": "^8.57.0",
                "eslint-config-prettier": "^9.1.0",
                "prettier": "^3.4.2",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:18-alpine\n\nWORKDIR /app\n\n# Copy package files\nCOPY package*.json ./\n\n# Install dependencies\nRUN npm install\n\n# Copy application code\nCOPY . .\n\n# Build the application\nRUN npm run build\n\n# Environment variables\nENV AGENTQL_API_KEY=your-api-key\n\n# Command will be provided by smithery.yaml\nCMD [\"node\", \"dist/index.js\"]\n",
        "base_docker_image": "node:18-alpine",
        "forks": 2,
        "stars": 28,
        "watchers": 8,
        "last_commit": "2025-04-01T07:46:44Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for tinyfish-io/agentql-mcp: 403; ClosedIssuesError: API error (closed issues) for tinyfish-io/agentql-mcp: 403"
    },
    "AgentRPC": {
        "name": "AgentRPC",
        "repo_url": "https://github.com/agentrpc/agentrpc",
        "type": "official",
        "error": "Analysis Task Exception: expected str, bytes or os.PathLike object, not list"
    },
    "AiMCP": {
        "name": "AiMCP",
        "repo_url": "https://www.aimcp.info",
        "type": "resource",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "error": "Could not parse GitHub URL"
    },
    "Airbnb": {
        "name": "Airbnb",
        "repo_url": "https://github.com/openbnb-org/mcp-server-airbnb",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.0.1",
                "cheerio": "^1.0.0",
                "node-fetch": "^3.3.2",
                "robots-parser": "^3.0.1"
            },
            "devDependencies": {
                "@types/node": "^22.13.9",
                "@types/node-fetch": "^2.6.12",
                "shx": "^0.3.4",
                "typescript": "^5.8.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\nFROM node:lts-alpine\n\nWORKDIR /app\n\n# Copy package files and install dependencies without running prepare scripts\nCOPY package*.json ./\nRUN npm install --ignore-scripts\n\n# Copy rest of the source code\nCOPY . .\n\n# Build the project explicitly\nRUN npm run build\n\n# Expose the MCP server on stdio\nCMD [ \"node\", \"dist/index.js\" ]\n",
        "base_docker_image": "node:lts-alpine",
        "forks": 12,
        "stars": 43,
        "watchers": 0,
        "last_commit": "2025-03-10T03:54:49Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for openbnb-org/mcp-server-airbnb: 403; ClosedIssuesError: API error (closed issues) for openbnb-org/mcp-server-airbnb: 403"
    },
    "Airflow": {
        "name": "Airflow",
        "repo_url": "https://github.com/yangkyeongmo/mcp-server-apache-airflow",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "httpx>=0.24.1",
                "click>=8.1.7",
                "mcp>=0.1.0",
                "apache-airflow-client>=2.7.0"
            ],
            "devDependencies": [
                "build>=1.2.2.post1",
                "twine>=6.1.0",
                "ruff>=0.11.0"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use a Python base image\nFROM python:3.10-slim\n\n# Set the working directory\nWORKDIR /app\n\n# Copy the contents of the repository to the working directory\nCOPY . .\n\n# Install the project dependencies\nRUN pip install uv\nRUN uv sync\n\n# Expose the port that the server will run on\nEXPOSE 8000\n\n# Command to run the server\nCMD [\"uv\", \"run\", \"src\", \"--transport\", \"sse\"]\n",
        "base_docker_image": "python:3.10-slim",
        "forks": 3,
        "stars": 11,
        "watchers": 1,
        "last_commit": "2025-03-20T13:35:07Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for yangkyeongmo/mcp-server-apache-airflow: 403; ClosedIssuesError: API error (closed issues) for yangkyeongmo/mcp-server-apache-airflow: 403"
    },
    "Airtable": {
        "name": "Airtable",
        "repo_url": "https://github.com/felores/airtable-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.6.0",
                "axios": "^1.7.9"
            },
            "devDependencies": {
                "@types/node": "^20.11.24",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 6,
        "stars": 20,
        "watchers": 2,
        "last_commit": "2025-01-27T16:44:10Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for felores/airtable-mcp: 403; ClosedIssuesError: API error (closed issues) for felores/airtable-mcp: 403"
    },
    "Aiven": {
        "name": "Aiven",
        "repo_url": "https://github.com/Aiven-Open/mcp-aiven",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp[cli]>=1.3.0",
                "python-dotenv>=1.0.1",
                "uvicorn>=0.34.0",
                "aiven-client>=4.5.1",
                "pip-system-certs>=4.0"
            ],
            "devDependencies": [
                "ruff",
                "pytest"
            ]
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 2,
        "watchers": 6,
        "last_commit": "2025-03-19T12:21:38Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for Aiven-Open/mcp-aiven: 403; ClosedIssuesError: API error (closed issues) for Aiven-Open/mcp-aiven: 403"
    },
    "Algorand": {
        "name": "Algorand",
        "repo_url": "https://github.com/GoPlausible/algorand-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "algosdk": "2.9.0",
                "qrcode": "^1.5.4"
            },
            "devDependencies": {
                "@types/node": "^20.0.0",
                "@types/qrcode": "^1.5.5",
                "typescript": "^5.0.0"
            }
        },
        "has_dockerfile": false,
        "forks": 2,
        "stars": 21,
        "watchers": 2,
        "last_commit": "2025-03-31T14:56:49Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for GoPlausible/algorand-mcp: 403; ClosedIssuesError: API error (closed issues) for GoPlausible/algorand-mcp: 403"
    },
    "AlphaVantage": {
        "name": "AlphaVantage",
        "repo_url": "https://github.com/calvernaz/alphavantage",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "bump2version>=1.0.1",
                "load-dotenv>=0.1.0",
                "mcp>=1.0.0",
                "toml>=0.10.2"
            ],
            "devDependencies": [
                "ruff>=0.9.9"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use a Python image with uv pre-installed\nFROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv\n\n# Install the project into /app\nWORKDIR /app\n\n# Enable bytecode compilation\nENV UV_COMPILE_BYTECODE=1\n\n# Copy from the cache instead of linking since it's a mounted volume\nENV UV_LINK_MODE=copy\n\n# Install the project's dependencies using the lockfile and settings\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    --mount=type=bind,source=uv.lock,target=uv.lock \\\n    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \\\n    uv sync --frozen --no-install-project --no-dev --no-editable\n\n# Then, add the rest of the project source code and install it\n# Installing separately from its dependencies allows optimal layer caching\nADD . /app\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    uv sync --frozen --no-dev --no-editable\n\nFROM python:3.12-slim-bookworm\n\nWORKDIR /app\n\nCOPY --from=uv /root/.local /root/.local\nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\n\n# Place executables in the environment at the front of the path\nENV PATH=\"/app/.venv/bin:$PATH\"\n\n# Set the API key environment variable (This needs to be provided at runtime)\nENV ALPHAVANTAGE_API_KEY=your_api_key_here\n\n# When running the container, start the MCP server\nENTRYPOINT [\"alphavantage\"]",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
        "forks": 4,
        "stars": 22,
        "watchers": 2,
        "last_commit": "2025-03-27T23:03:38Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for calvernaz/alphavantage: 403; ClosedIssuesError: API error (closed issues) for calvernaz/alphavantage: 403"
    },
    "Anki": {
        "name": "Anki",
        "repo_url": "https://github.com/scorzeth/anki-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.0.3",
                "yanki-connect": "^2.1.8"
            },
            "devDependencies": {
                "@types/node": "^20.17.10",
                "typescript": "^5.7.2"
            }
        },
        "has_dockerfile": false,
        "forks": 4,
        "stars": 55,
        "watchers": 2,
        "last_commit": "2025-01-08T00:38:19Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for scorzeth/anki-mcp-server: 403; ClosedIssuesError: API error (closed issues) for scorzeth/anki-mcp-server: 403"
    },
    "Any Chat Completions": {
        "name": "Any Chat Completions",
        "repo_url": "https://github.com/pyroprompts/any-chat-completions-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.6.0",
                "dotenv": "^16.4.5",
                "openai": "^4.73.1"
            },
            "devDependencies": {
                "@types/node": "^20.11.24",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 15,
        "stars": 91,
        "watchers": 0,
        "last_commit": "2024-12-24T06:45:26Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for pyroprompts/any-chat-completions-mcp: 403; ClosedIssuesError: API error (closed issues) for pyroprompts/any-chat-completions-mcp: 403"
    },
    "Apify": {
        "name": "Apify",
        "repo_url": "https://github.com/apify/actors-mcp-server",
        "type": "official",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 9,
        "stars": 126,
        "watchers": 2,
        "last_commit": "2025-03-27T20:36:01Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for apify/actors-mcp-server: 403; ClosedIssuesError: API error (closed issues) for apify/actors-mcp-server: 403; FileListAnalysisError: Empty file list"
    },
    "Apple Calendar": {
        "name": "Apple Calendar",
        "repo_url": "https://github.com/Omar-v2/mcp-ical",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "loguru>=0.7.3",
                "mcp[cli]>=1.2.1",
                "pyobjc>=11.0"
            ],
            "devDependencies": [
                "pytest>=8.3.4",
                "pytest-mock>=3.14.0",
                "pytest-random-order>=1.1.1"
            ]
        },
        "has_dockerfile": false,
        "forks": 13,
        "stars": 37,
        "watchers": 2,
        "last_commit": "2025-02-11T15:33:48Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for Omar-v2/mcp-ical: 403; ClosedIssuesError: API error (closed issues) for Omar-v2/mcp-ical: 403"
    },
    "ArangoDB": {
        "name": "ArangoDB",
        "repo_url": "https://github.com/ravenwits/mcp-server-arangodb",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.6.0",
                "arangojs": "^9.2.0"
            },
            "devDependencies": {
                "@types/node": "^20.11.24",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use a Node.js image\nFROM node:22.12-alpine AS builder\n\n# Create app directory\nWORKDIR /app\n\n# Install app dependencies\nCOPY package.json package-lock.json ./\nRUN npm install --ignore-scripts\n\n# Copy source code and build the project\nCOPY . .\nRUN npm run build\n\n# Use a smaller base image for the final build\nFROM node:22-alpine AS release\n\n# Create app directory\nWORKDIR /app\n\n# Copy the built files and node_modules from the builder stage\nCOPY --from=builder /app/build /app/build\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\nCOPY --from=builder /app/node_modules /app/node_modules\n\n# Expose the default ArangoDB port\nEXPOSE 8529\n\n# Set environment variables (these should be overridden at runtime)\nENV ARANGO_URL=http://localhost:8529\nENV ARANGO_DATABASE=your_database_name\nENV ARANGO_USERNAME=your_username\nENV ARANGO_PASSWORD=your_password\n\n# Command to run the server\nCMD [\"node\", \"build/index.js\"]\n",
        "base_docker_image": "node:22.12-alpine",
        "forks": 3,
        "stars": 8,
        "watchers": 1,
        "last_commit": "2025-02-16T11:07:04Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for ravenwits/mcp-server-arangodb: 403; ClosedIssuesError: API error (closed issues) for ravenwits/mcp-server-arangodb: 403"
    },
    "Arduino": {
        "name": "Arduino",
        "repo_url": "https://github.com/vishalmysore/choturobo",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.6.1",
                "axios": "^1.8.3",
                "johnny-five": "^2.1.0",
                "zod-to-json-schema": "^3.24.3"
            },
            "devDependencies": {
                "@types/node": "^20.17.24",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 3,
        "stars": 13,
        "watchers": 2,
        "last_commit": "2025-03-17T21:40:52Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for vishalmysore/choturobo: 403; ClosedIssuesError: API error (closed issues) for vishalmysore/choturobo: 403"
    },
    "Atlassian": {
        "name": "Atlassian",
        "repo_url": "https://github.com/sooperset/mcp-atlassian",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "atlassian-python-api>=3.41.16",
                "beautifulsoup4>=4.12.3",
                "httpx>=0.28.0",
                "mcp>=1.3.0",
                "python-dotenv>=1.0.1",
                "markdownify>=0.11.6",
                "markdown>=3.7.0",
                "markdown-to-confluence>=0.3.0",
                "pydantic>=2.10.6",
                "trio>=0.29.0",
                "click>=8.1.7",
                "uvicorn>=0.27.1",
                "starlette>=0.37.1"
            ],
            "devDependencies": [
                "uv>=0.1.0",
                "pytest>=8.0.0",
                "pytest-cov>=4.1.0",
                "pre-commit>=3.6.0",
                "ruff>=0.3.0",
                "black>=24.2.0",
                "mypy>=1.8.0",
                "mcp[cli]>=1.3.0"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Use a Python image with uv pre-installed\nFROM ghcr.io/astral-sh/uv:python3.10-bookworm-slim AS uv\n\n# Install the project into `/app`\nWORKDIR /app\n\n# Enable bytecode compilation\nENV UV_COMPILE_BYTECODE=1\n\n# Copy from the cache instead of linking since it's a mounted volume\nENV UV_LINK_MODE=copy\n\n# Generate proper TOML lockfile first\nRUN --mount=type=bind,source=pyproject.toml,target=pyproject.toml \\\n    uv lock\n\n# Install the project's dependencies using the lockfile\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \\\n    --mount=type=bind,source=uv.lock,target=uv.lock \\\n    uv sync --frozen --no-install-project --no-dev --no-editable\n\n# Then, add the rest of the project source code and install it\nADD . /app\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    --mount=type=bind,source=uv.lock,target=uv.lock \\\n    uv sync --frozen --no-dev --no-editable\n\nFROM python:3.10-slim\n\nWORKDIR /app\n\nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\nCOPY .env.example /app/.env\n\n# Place executables in the environment at the front of the path\nENV PATH=\"/app/.venv/bin:$PATH\"\n\nENTRYPOINT [\"mcp-atlassian\"]\n",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.10-bookworm-slim",
        "forks": 89,
        "stars": 521,
        "watchers": 4,
        "last_commit": "2025-03-27T17:01:48Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for sooperset/mcp-atlassian: 403; ClosedIssuesError: API error (closed issues) for sooperset/mcp-atlassian: 403"
    },
    "Audiense Insights": {
        "name": "Audiense Insights",
        "repo_url": "https://github.com/AudienseCo/mcp-audiense-insights",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.4.1",
                "base-64": "^1.0.0",
                "dotenv": "^16.4.7",
                "node-fetch": "^3.3.2",
                "zod": "^3.24.1"
            },
            "devDependencies": {
                "@types/base-64": "^1.0.2",
                "@types/jest": "^29.5.14",
                "@types/node": "^22.12.0",
                "jest": "^29.7.0",
                "ts-jest": "^29.2.6",
                "typescript": "^5.7.3"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use an official Node.js runtime as the base image\nFROM node:18-alpine AS builder\n\n# Set the working directory\nWORKDIR /app\n\n# Copy package.json and package-lock.json for installing dependencies\nCOPY package.json package-lock.json ./\n\n# Install dependencies (ignoring scripts to avoid running them yet)\nRUN npm install --ignore-scripts\n\n# Copy the rest of the application code\nCOPY src ./src\nCOPY tsconfig.json ./\n\n# Build the TypeScript code\nRUN npm run build\n\n# Use a lighter weight image for running the application\nFROM node:18-alpine\n\n# Set the working directory\nWORKDIR /app\n\n# Copy the built code and node_modules from the builder stage\nCOPY --from=builder /app/build ./build\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY --from=builder /app/package.json ./package.json\n\n# Environment variables (should be replaced with actual credentials in production)\nENV AUDIENSE_CLIENT_ID=your_client_id_here\nENV AUDIENSE_CLIENT_SECRET=your_client_secret_here\nENV TWITTER_BEARER_TOKEN=your_token_here\n\n# Run the application\nCMD [\"node\", \"build/index.js\"]\n",
        "base_docker_image": "node:18-alpine",
        "forks": 2,
        "stars": 6,
        "watchers": 10,
        "last_commit": "2025-03-19T13:17:46Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for AudienseCo/mcp-audiense-insights: 403; ClosedIssuesError: API error (closed issues) for AudienseCo/mcp-audiense-insights: 403"
    },
    "Awesome Crypto MCP Servers by badkk": {
        "name": "Awesome Crypto MCP Servers by badkk",
        "repo_url": "https://github.com/badkk/awesome-crypto-mcp-servers",
        "type": "resource",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 2,
        "stars": 39,
        "watchers": 1,
        "last_commit": "2025-03-27T03:27:16Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for badkk/awesome-crypto-mcp-servers: 403; ClosedIssuesError: API error (closed issues) for badkk/awesome-crypto-mcp-servers: 403"
    },
    "Awesome MCP Servers by appcypher": {
        "name": "Awesome MCP Servers by appcypher",
        "repo_url": "https://github.com/appcypher/awesome-mcp-servers",
        "type": "resource",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 130,
        "stars": 2252,
        "watchers": 32,
        "last_commit": "2025-03-27T19:43:29Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for appcypher/awesome-mcp-servers: 403; ClosedIssuesError: API error (closed issues) for appcypher/awesome-mcp-servers: 403"
    },
    "Awesome MCP Servers by punkpeye": {
        "name": "Awesome MCP Servers by punkpeye",
        "repo_url": "https://github.com/punkpeye/awesome-mcp-servers",
        "type": "resource",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 1674,
        "stars": 25720,
        "watchers": 205,
        "last_commit": "2025-03-31T16:56:39Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for punkpeye/awesome-mcp-servers: 403; ClosedIssuesError: API error (closed issues) for punkpeye/awesome-mcp-servers: 403"
    },
    "Awesome MCP Servers by wong2": {
        "name": "Awesome MCP Servers by wong2",
        "repo_url": "https://github.com/wong2/awesome-mcp-servers",
        "type": "resource",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 119,
        "stars": 755,
        "watchers": 21,
        "last_commit": "2025-03-31T12:06:49Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for wong2/awesome-mcp-servers: 403; ClosedIssuesError: API error (closed issues) for wong2/awesome-mcp-servers: 403"
    },
    "Axiom": {
        "name": "Axiom",
        "repo_url": "https://github.com/axiomhq/mcp-server-axiom",
        "type": "official",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 2,
        "stars": 29,
        "watchers": 6,
        "last_commit": "2024-12-06T20:38:23Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for axiomhq/mcp-server-axiom: 403; ClosedIssuesError: API error (closed issues) for axiomhq/mcp-server-axiom: 403; FileListAnalysisError: Empty file list"
    },
    "Azure ADX": {
        "name": "Azure ADX",
        "repo_url": "https://github.com/pab1it0/adx-mcp-server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp[cli]",
                "azure-kusto-data",
                "azure-identity",
                "python-dotenv",
                "pyproject-toml>=0.1.0"
            ],
            "devDependencies": [
                "pytest>=7.0.0",
                "pytest-cov>=4.0.0",
                "pytest-asyncio>=0.21.0",
                "pytest-mock>=3.10.0"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use a Python image with uv pre-installed\nFROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv\n\n# Install the project into `/app`\nWORKDIR /app\n\n# Enable bytecode compilation\nENV UV_COMPILE_BYTECODE=1\n\n# Copy from the cache instead of linking since it's a mounted volume\nENV UV_LINK_MODE=copy\n\n# Install the project's dependencies using the lockfile and settings\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    --mount=type=bind,source=uv.lock,target=uv.lock \\\n    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \\\n    uv sync --frozen --no-install-project --no-dev --no-editable\n\n# Then, add the rest of the project source code and install it\n# Installing separately from its dependencies allows optimal layer caching\nADD . /app\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    uv sync --frozen --no-dev --no-editable\n\nFROM python:3.12-slim-bookworm\n\nWORKDIR /app\n \nCOPY --from=uv /root/.local /root/.local\nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\n\n# Place executables in the environment at the front of the path\nENV PATH=\"/app/.venv/bin:$PATH\"\n\n# Set environment variables for ADX MCP Server\nENV PYTHONUNBUFFERED=1\n\n# when running the container, add ADX_CLUSTER_URL and ADX_DATABASE environment variables\nENTRYPOINT [\"adx-mcp-server\"]\n\n# Label the image\nLABEL maintainer=\"pab1it0\" \\\n      description=\"Azure Data Explorer MCP Server\" \\\n      version=\"1.0.5\"\n",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
        "forks": 3,
        "stars": 8,
        "watchers": 1,
        "last_commit": "2025-03-27T09:08:40Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for pab1it0/adx-mcp-server: 403; ClosedIssuesError: API error (closed issues) for pab1it0/adx-mcp-server: 403"
    },
    "Azure DevOps": {
        "name": "Azure DevOps",
        "repo_url": "https://github.com/Vortiago/mcp-azure-devops",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "azure-devops>=7.1.0b4",
                "mcp>=0.1.0"
            ],
            "devDependencies": [
                "mcp[cli]>=0.1.0",
                "pytest>=7.0.0",
                "pytest-asyncio>=0.21.0",
                "ruff>=0.0.267",
                "anyio>=3.6.2",
                "pyright>=1.1.350"
            ]
        },
        "has_dockerfile": false,
        "forks": 7,
        "stars": 6,
        "watchers": 3,
        "last_commit": "2025-03-31T21:25:12Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for Vortiago/mcp-azure-devops: 403; ClosedIssuesError: API error (closed issues) for Vortiago/mcp-azure-devops: 403"
    },
    "Bankless Onchain": {
        "name": "Bankless Onchain",
        "repo_url": "https://github.com/bankless/onchain-mcp",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.7.0",
                "@types/node": "^22",
                "@types/node-fetch": "^2.6.12",
                "axios": "^1.8.3",
                "node-fetch": "^3.3.2",
                "universal-user-agent": "^7.0.2",
                "zod": "^3.24.2",
                "zod-to-json-schema": "^3.24.2"
            },
            "devDependencies": {
                "@types/jest": "^29.5.14",
                "shx": "^0.3.4",
                "ts-node": "^10.9.2",
                "typescript": "^5.8.2",
                "vitest": "^3.0.8"
            }
        },
        "has_dockerfile": false,
        "forks": 3,
        "stars": 15,
        "watchers": 1,
        "last_commit": "2025-03-31T18:16:30Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for bankless/onchain-mcp: 403; ClosedIssuesError: API error (closed issues) for bankless/onchain-mcp: 403"
    },
    "Base Free USDC Transfer": {
        "name": "Base Free USDC Transfer",
        "repo_url": "https://github.com/magnetai/mcp-free-usdc-transfer",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@coinbase/coinbase-sdk": "^0.13.0",
                "@ensdomains/ensjs": "^4.0.2",
                "@modelcontextprotocol/sdk": "^1.1.0",
                "@types/global-agent": "^2.1.3",
                "ethers": "^6.13.5",
                "global-agent": "^3.0.0",
                "zod": "^3.24.1"
            },
            "devDependencies": {
                "@types/node": "^22.10.5",
                "ts-node": "^10.9.2",
                "typescript": "^5.7.3"
            }
        },
        "has_dockerfile": false,
        "forks": 3,
        "stars": 11,
        "watchers": 1,
        "last_commit": "2025-01-17T09:25:59Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for magnetai/mcp-free-usdc-transfer: 403; ClosedIssuesError: API error (closed issues) for magnetai/mcp-free-usdc-transfer: 403"
    },
    "Basic Memory": {
        "name": "Basic Memory",
        "repo_url": "https://github.com/basicmachines-co/basic-memory",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "sqlalchemy>=2.0.0",
                "pyyaml>=6.0.1",
                "typer>=0.9.0",
                "aiosqlite>=0.20.0",
                "greenlet>=3.1.1",
                "pydantic[email,timezone]>=2.10.3",
                "icecream>=2.1.3",
                "mcp>=1.2.0",
                "pydantic-settings>=2.6.1",
                "loguru>=0.7.3",
                "pyright>=1.1.390",
                "markdown-it-py>=3.0.0",
                "python-frontmatter>=1.1.0",
                "rich>=13.9.4",
                "unidecode>=1.3.8",
                "dateparser>=1.2.0",
                "watchfiles>=1.0.4",
                "fastapi[standard]>=0.115.8",
                "alembic>=1.14.1",
                "qasync>=0.27.1",
                "pillow>=11.1.0"
            ],
            "devDependencies": [
                "gevent>=24.11.1",
                "icecream>=2.1.3",
                "pytest>=8.3.4",
                "pytest-cov>=4.1.0",
                "pytest-mock>=3.12.0",
                "pytest-asyncio>=0.24.0",
                "ruff>=0.1.6",
                "pytest>=8.3.4",
                "pytest-cov>=4.1.0",
                "pytest-mock>=3.12.0",
                "pytest-asyncio>=0.24.0",
                "ruff>=0.1.6",
                "cx-freeze>=7.2.10",
                "pyqt6>=6.8.1"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\nFROM python:3.12-slim\n\nWORKDIR /app\n\n# Copy the project files\nCOPY . .\n\n# Install pip and build dependencies\nRUN pip install --upgrade pip \\\n&& pip install . --no-cache-dir --ignore-installed\n\n# Expose port if necessary (e.g., uv might use a port, but MCP over stdio so not needed here)\n\n# Use the basic-memory entrypoint to run the MCP server\nCMD [\"basic-memory\", \"mcp\"]",
        "base_docker_image": "python:3.12-slim",
        "forks": 25,
        "stars": 322,
        "watchers": 4,
        "last_commit": "2025-03-29T00:19:47Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": true,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for basicmachines-co/basic-memory: 403; ClosedIssuesError: API error (closed issues) for basicmachines-co/basic-memory: 403"
    },
    "BigQuery": {
        "name": "BigQuery",
        "repo_url": "https://github.com/ergut/mcp-bigquery-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.6.0",
                "@google-cloud/bigquery": "^7.3.0"
            },
            "devDependencies": {
                "shx": "^0.3.4",
                "typescript": "^5.6.2"
            }
        },
        "has_dockerfile": false,
        "forks": 7,
        "stars": 34,
        "watchers": 2,
        "last_commit": "2024-12-25T10:10:05Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for ergut/mcp-bigquery-server: 403; ClosedIssuesError: API error (closed issues) for ergut/mcp-bigquery-server: 403"
    },
    "Bing Web Search API": {
        "name": "Bing Web Search API",
        "repo_url": "https://github.com/leehanchung/bing-search-mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "python-dotenv>=1.0.1",
                "httpx>=0.28.1",
                "mcp[cli]>=1.4.1"
            ],
            "devDependencies": [
                "pyright>=1.1.398",
                "ruff>=0.11.0",
                "mypy>=1.9.0",
                "pytest>=8.0.0",
                "pytest-asyncio>=0.23.5",
                "pytest-cov>=4.1.0"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Use a Python image with uv pre-installed\nFROM ghcr.io/astral-sh/uv:python3.10-bookworm-slim AS uv\n\n# Install the project into /app\nWORKDIR /app\n\n# Enable bytecode compilation\nENV UV_COMPILE_BYTECODE=1\n\n# Copy from the cache instead of linking since it's a mounted volume\nENV UV_LINK_MODE=copy\n\n# Install the project's dependencies using the lockfile and settings\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    --mount=type=bind,source=uv.lock,target=uv.lock \\\n    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \\\n    uv sync --frozen --no-install-project --no-dev --no-editable\n\n# Then, add the rest of the project source code and install it\n# Installing separately from its dependencies allows optimal layer caching\nADD . /app\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    uv sync --frozen --no-dev --no-editable\n\nFROM python:3.10-slim-bookworm\n\nWORKDIR /app\n \n# COPY --from=uv /root/.local /root/.local\nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\n\n# Place executables in the environment at the front of the path\nENV PATH=\"/app/.venv/bin:$PATH\"\n\n\n# Default command to run the Bing Search MCP server\nENTRYPOINT [\"mcp-server-bing\"]\n",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.10-bookworm-slim",
        "forks": 0,
        "stars": 15,
        "watchers": 1,
        "last_commit": "2025-03-31T06:35:43Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Bitable MCP": {
        "name": "Bitable MCP",
        "repo_url": "https://github.com/lloydzhou/bitable-mcp",
        "type": "community",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 2,
        "watchers": 1,
        "last_commit": "2025-03-20T03:38:26Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search; FileListAnalysisError: Empty file list"
    },
    "Blender": {
        "name": "Blender",
        "repo_url": "https://github.com/ahujasid/blender-mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp[cli]>=1.3.0"
            ],
            "devDependencies": [
                "setuptools>=61.0",
                "wheel"
            ]
        },
        "has_dockerfile": false,
        "forks": 779,
        "stars": 9070,
        "watchers": 77,
        "last_commit": "2025-03-27T19:29:29Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Box": {
        "name": "Box",
        "repo_url": "https://github.com/box-community/mcp-server-box",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "box-sdk-gen>=1.12.0",
                "mcp[cli]>=1.3.0",
                "python-dotenv>=1.0.1"
            ],
            "devDependencies": [
                "pytest>=8.3.4",
                "pytest-asyncio>=0.25.3",
                "pytest-cov>=6.0.0"
            ]
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 3,
        "watchers": 3,
        "last_commit": "2025-02-27T22:53:20Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for box-community/mcp-server-box: 403; ClosedIssuesError: API error (closed issues) for box-community/mcp-server-box: 403"
    },
    "Brave Search": {
        "name": "Brave Search",
        "repo_url": "https://github.com/modelcontextprotocol/servers/tree/main/src/brave-search",
        "type": "reference",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.0.1"
            },
            "devDependencies": {
                "@types/node": "^22",
                "shx": "^0.3.4",
                "typescript": "^5.6.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.12-alpine AS builder\n\n# Must be entire project because `prepare` script is run during `npm install` and requires all files.\nCOPY src/brave-search /app\nCOPY tsconfig.json /tsconfig.json\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nFROM node:22-alpine AS release\n\nWORKDIR /app\n\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\nENV NODE_ENV=production\n\nRUN npm ci --ignore-scripts --omit-dev\n\nENTRYPOINT [\"node\", \"dist/index.js\"]",
        "base_docker_image": "node:22.12-alpine",
        "forks": 2985,
        "stars": 28753,
        "watchers": 208,
        "last_commit": "2025-03-31T15:41:32Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Browserbase": {
        "name": "Browserbase",
        "repo_url": "https://github.com/browserbase/mcp-server-browserbase",
        "type": "official",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 69,
        "stars": 616,
        "watchers": 10,
        "last_commit": "2025-03-31T03:24:33Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for browserbase/mcp-server-browserbase: 403; ClosedIssuesError: API error (closed issues) for browserbase/mcp-server-browserbase: 403"
    },
    "Bsc-mcp": {
        "name": "Bsc-mcp",
        "repo_url": "https://github.com/TermiX-official/bsc-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@goplus/sdk-node": "^1.0.12",
                "@modelcontextprotocol/sdk": "^1.4.0",
                "@pancakeswap/sdk": "^5.8.8",
                "@pancakeswap/smart-router": "6.1.6",
                "@pancakeswap/tokens": "^0.6.24",
                "chalk": "^5.4.1",
                "dotenv": "^16.4.7",
                "figlet": "^1.8.0",
                "fs-extra": "^11.3.0",
                "graphql-request": "^7.1.2",
                "moralis": "^2.27.2",
                "ora": "^8.2.0",
                "prompts": "^2.4.2",
                "viem": "^2.23.11"
            },
            "devDependencies": {
                "@types/figlet": "^1.7.0",
                "@types/fs-extra": "^11.0.4",
                "@types/node": "^22.10.0",
                "@types/prompts": "^2.4.9",
                "typescript": "^5.8.2"
            }
        },
        "has_dockerfile": false,
        "forks": 9,
        "stars": 63,
        "watchers": 4,
        "last_commit": "2025-04-01T06:33:25Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "CFBD API": {
        "name": "CFBD API",
        "repo_url": "https://github.com/lenwood/cfbd-mcp-server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.1.2",
                "python-dotenv>=1.0.1"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": false,
        "forks": 4,
        "stars": 9,
        "watchers": 1,
        "last_commit": "2024-12-23T19:08:29Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Calculator": {
        "name": "Calculator",
        "repo_url": "https://github.com/githejie/mcp-server-calculator",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.4.1"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv\n\nWORKDIR /app\n\nENV UV_COMPILE_BYTECODE=1\n\nENV UV_LINK_MODE=copy\n\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    --mount=type=bind,source=uv.lock,target=uv.lock \\\n    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \\\n    uv sync --frozen --no-install-project --no-dev --no-editable\n\nADD . /app\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    uv sync --frozen --no-dev --no-editable\n\nFROM python:3.12-slim-bookworm\n\nWORKDIR /app\n \nCOPY --from=uv /root/.local /root/.local\nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\n\nENV PATH=\"/app/.venv/bin:$PATH\"\n\nENTRYPOINT [\"mcp-server-calculator\"]\n",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
        "forks": 0,
        "stars": 4,
        "watchers": 1,
        "last_commit": "2025-03-29T09:29:45Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Chargebee": {
        "name": "Chargebee",
        "repo_url": "https://github.com/chargebee/agentkit/tree/main/modelcontextprotocol",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.6.1",
                "commander": "^13.1.0",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@types/node": "^22.13.10",
                "cross-env": "^7.0.3",
                "dotenv": "^16.4.7",
                "shx": "^0.3.4",
                "tsup": "^8.4.0",
                "typescript": "^5.8.2"
            }
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 3,
        "watchers": 15,
        "last_commit": "2025-04-01T06:20:17Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for chargebee/agentkit: 403; ClosedIssuesError: API error (closed issues) for chargebee/agentkit: 403"
    },
    "ChatMCP": {
        "name": "ChatMCP",
        "repo_url": "https://github.com/AI-QL/chat-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.8.0"
            },
            "devDependencies": {
                "@types/node-notifier": "^8.0.5",
                "copyfiles": "^2.4.1",
                "electron": "^34.0.0",
                "electron-builder": "^25.1.8",
                "electron-debug": "^4.1.0",
                "node-notifier": "^10.0.1",
                "typescript": "^5.7.3"
            }
        },
        "has_dockerfile": false,
        "forks": 20,
        "stars": 141,
        "watchers": 1,
        "last_commit": "2025-03-28T06:27:39Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "ChatSum": {
        "name": "ChatSum",
        "repo_url": "https://github.com/mcpso/mcp-server-chatsum",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.6.0",
                "dotenv": "^16.4.6",
                "sqlite3": "^5.1.7"
            },
            "devDependencies": {
                "@types/node": "^20.17.9",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 79,
        "stars": 849,
        "watchers": 8,
        "last_commit": "2024-12-04T02:58:20Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Chroma": {
        "name": "Chroma",
        "repo_url": "https://github.com/privetin/chroma",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.1.2",
                "chromadb>=0.4.22",
                "sentence-transformers>=2.2.2"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": false,
        "forks": 6,
        "stars": 23,
        "watchers": 2,
        "last_commit": "2025-01-01T18:51:52Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Chronulus AI": {
        "name": "Chronulus AI",
        "repo_url": "https://github.com/ChronulusAI/chronulus-mcp",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "requirements.txt",
        "packages": {
            "dependencies": [
                "mcp[cli]==1.3.0",
                "chronulus>=0.0.11",
                "chronulus-core>=0.0.19",
                "requests",
                "docutils",
                "pandas"
            ],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Use a Python image with uv pre-installed\nFROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv\n\n# Install the project into `/app`\nWORKDIR /app\n\n# Enable bytecode compilation\nENV UV_COMPILE_BYTECODE=1\n\n# Copy from the cache instead of linking since it's a mounted volume\nENV UV_LINK_MODE=copy\n\n# Install the project's dependencies using the lockfile and settings\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    --mount=type=bind,source=uv.lock,target=uv.lock \\\n    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \\\n    uv sync --frozen --no-install-project --no-dev --no-editable\n\n# Then, add the rest of the project source code and install it\n# Installing separately from its dependencies allows optimal layer caching\nADD . /app\nRUN --mount=type=cache,target=/root/.cache/uv uv sync --frozen --no-dev --no-editable\n\nFROM python:3.12-slim-bookworm\n\nWORKDIR /app\n\nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\n\n# Place executables in the environment at the front of the path\nENV PATH=\"/app/.venv/bin:$PATH\"\n\n# when running the container, add --db-path and a bind mount to the host's db file\nENTRYPOINT [\"chronulus-mcp\"]",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
        "forks": 3,
        "stars": 36,
        "watchers": 1,
        "last_commit": "2025-03-17T15:00:29Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for ChronulusAI/chronulus-mcp: 403; ClosedIssuesError: API error (closed issues) for ChronulusAI/chronulus-mcp: 403"
    },
    "ClaudePost": {
        "name": "ClaudePost",
        "repo_url": "https://github.com/ZilongXue/claude-post",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "httpx>=0.28.1",
                "mcp>=1.1.2",
                "python-dotenv>=1.0.0"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": false,
        "forks": 6,
        "stars": 49,
        "watchers": 1,
        "last_commit": "2025-02-18T02:12:03Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "ClickHouse": {
        "name": "ClickHouse",
        "repo_url": "https://github.com/ClickHouse/mcp-clickhouse",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp[cli]>=1.3.0",
                "python-dotenv>=1.0.1",
                "uvicorn>=0.34.0",
                "clickhouse-connect>=0.8.0",
                "pip-system-certs>=4.0"
            ],
            "devDependencies": [
                "ruff",
                "pytest"
            ]
        },
        "has_dockerfile": false,
        "forks": 21,
        "stars": 120,
        "watchers": 5,
        "last_commit": "2025-03-31T16:36:13Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for ClickHouse/mcp-clickhouse: 403; ClosedIssuesError: API error (closed issues) for ClickHouse/mcp-clickhouse: 403"
    },
    "Cloudflare": {
        "name": "Cloudflare",
        "repo_url": "https://github.com/cloudflare/mcp-server-cloudflare",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "pnpm",
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@iarna/toml": "^2.2.5",
                "@modelcontextprotocol/sdk": "^0.6.0",
                "chalk": "^5.3.0",
                "dotenv": "^16.4.5",
                "undici": "^5.28.4",
                "which": "^5.0.0",
                "xdg-app-paths": "^8.3.0",
                "zod": "^3.23.8"
            },
            "devDependencies": {
                "@cloudflare/workers-types": "^4.20241112.0",
                "@types/node": "^22.10.0",
                "@types/which": "^3.0.4",
                "@vitest/coverage-v8": "^3.0.8",
                "msw": "^2.7.3",
                "prettier": "^3.4.1",
                "shx": "^0.3.4",
                "tsup": "^8.3.5",
                "typescript": "^5.6.2",
                "vitest": "^3.0.8"
            }
        },
        "has_dockerfile": false,
        "forks": 73,
        "stars": 1088,
        "watchers": 20,
        "last_commit": "2025-03-20T09:00:58Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for cloudflare/mcp-server-cloudflare: 403; ClosedIssuesError: API error (closed issues) for cloudflare/mcp-server-cloudflare: 403"
    },
    "Cloudinary": {
        "name": "Cloudinary",
        "repo_url": "https://github.com/felores/cloudinary-mcp-server",
        "type": "community",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 3,
        "stars": 4,
        "watchers": 1,
        "last_commit": "2025-03-13T16:53:36Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search; FileListAnalysisError: Empty file list"
    },
    "Comet Opik": {
        "name": "Comet Opik",
        "repo_url": "https://github.com/comet-ml/opik-mcp",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "dotenv": "^16.4.5",
                "yargs": "^17.7.2",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@jest/globals": "^29.7.0",
                "@modelcontextprotocol/sdk": "^1.6.1",
                "@types/cors": "^2.8.17",
                "@types/express": "^5.0.0",
                "@types/jest": "^29.5.12",
                "@types/node": "^22.13.9",
                "@typescript-eslint/eslint-plugin": "^7.4.0",
                "@typescript-eslint/parser": "^7.4.0",
                "cors": "^2.8.5",
                "eslint": "^8.57.0",
                "eslint-config-prettier": "^9.1.0",
                "eslint-plugin-prettier": "^5.1.3",
                "express": "^5.0.1",
                "jest": "^29.7.0",
                "jest-environment-jsdom": "^29.7.0",
                "node-fetch": "^3.3.2",
                "pre-commit": "^1.2.2",
                "prettier": "^3.2.5",
                "shx": "^0.3.4",
                "ts-jest": "^29.1.2",
                "typescript": "^5.8.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\nFROM node:lts-alpine\n\n# Set working directory\nWORKDIR /app\n\n# Copy package files\nCOPY package*.json ./\n\n# Install dependencies without running any scripts\nRUN npm install --ignore-scripts\n\n# Copy the rest of the source code\nCOPY . .\n\n# Build the project\nRUN npm run build\n\n# Expose port if needed (SSE transport might require it, but here we're using stdio)\n\n# Use index.js as the entrypoint\nCMD [\"node\", \"build/index.js\"]\n",
        "base_docker_image": "node:lts-alpine",
        "forks": 1,
        "stars": 18,
        "watchers": 4,
        "last_commit": "2025-03-25T10:20:45Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for comet-ml/opik-mcp: 403; ClosedIssuesError: API error (closed issues) for comet-ml/opik-mcp: 403"
    },
    "Contentful-mcp": {
        "name": "Contentful-mcp",
        "repo_url": "https://github.com/ivo-toby/contentful-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@contentful/node-apps-toolkit": "^3.10.2",
                "@modelcontextprotocol/sdk": "1.0.1",
                "contentful-management": "^10.46.4",
                "dotenv": "^16.4.7",
                "zod": "^3.22.4",
                "zod-to-json-schema": "^3.22.1"
            },
            "devDependencies": {
                "@eslint/js": "^9.19.0",
                "@semantic-release/commit-analyzer": "^11.1.0",
                "@semantic-release/github": "^9.2.6",
                "@semantic-release/npm": "^11.0.3",
                "@semantic-release/release-notes-generator": "^12.1.0",
                "@types/chai": "^4.3.11",
                "@types/mocha": "^10.0.6",
                "@types/node": "^20.10.0",
                "@types/sinon": "^17.0.3",
                "@typescript-eslint/eslint-plugin": "^6.12.0",
                "@typescript-eslint/parser": "^6.12.0",
                "chai": "^5.0.0",
                "esbuild": "^0.19.9",
                "eslint": "^8.57.1",
                "eslint-plugin-perfectionist": "^4.7.0",
                "mocha": "^10.2.0",
                "msw": "^2.7.0",
                "nodemon": "^3.1.9",
                "prettier": "^3.4.2",
                "semantic-release": "^22.0.12",
                "sinon": "^17.0.1",
                "ts-node": "^10.9.2",
                "typescript": "^5.6.2",
                "typescript-eslint": "^8.22.0",
                "vitest": "^2.1.8"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use an official Node.js image as the base image\nFROM node:22-alpine AS builder\n\n# Set the working directory\nWORKDIR /app\n\n# Copy package files\nCOPY package.json package-lock.json ./\n\n# Install dependencies\nRUN --mount=type=cache,target=/root/.npm npm install\n\n# Copy the rest of the application's source code\nCOPY . .\n\n# Build the application\nRUN npm run build\n\n# Use a smaller Node.js image for the runtime\nFROM node:22-alpine AS runtime\n\n# Set the working directory\nWORKDIR /app\n\n# Copy built files from the builder stage\nCOPY --from=builder /app/bin /app/bin\nCOPY --from=builder /app/node_modules /app/node_modules\n\n# Environment variable for Contentful Management API token\nENV CONTENTFUL_MANAGEMENT_ACCESS_TOKEN=your_contentful_management_api_token\n\n# Expose any required ports (if needed by the application)\n# EXPOSE 3000\n\n# Start the server\nENTRYPOINT [\"node\", \"bin/mcp-server.js\"]",
        "base_docker_image": "node:22-alpine",
        "forks": 2,
        "stars": 14,
        "watchers": 2,
        "last_commit": "2025-03-29T19:27:56Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for ivo-toby/contentful-mcp: 403; ClosedIssuesError: API error (closed issues) for ivo-toby/contentful-mcp: 403"
    },
    "Convex": {
        "name": "Convex",
        "repo_url": "https://stack.convex.dev/convex-mcp-server",
        "type": "official",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "error": "Could not parse GitHub URL"
    },
    "DBHub": {
        "name": "DBHub",
        "repo_url": "https://github.com/bytebase/dbhub/",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.6.1",
                "better-sqlite3": "^11.9.0",
                "dotenv": "^16.4.7",
                "express": "^4.18.2",
                "mssql": "^11.0.1",
                "mysql2": "^3.13.0",
                "pg": "^8.13.3",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@types/better-sqlite3": "^7.6.12",
                "@types/express": "^4.17.21",
                "@types/mssql": "^9.1.7",
                "@types/node": "^22.13.10",
                "@types/pg": "^8.11.11",
                "cross-env": "^7.0.3",
                "ts-node": "^10.9.2",
                "tsup": "^8.4.0",
                "tsx": "^4.19.3",
                "typescript": "^5.8.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22-alpine AS builder\n\nWORKDIR /app\n\n# Copy package.json and pnpm-lock.yaml\nCOPY package.json pnpm-lock.yaml ./\n\n# Install pnpm\nRUN corepack enable && corepack prepare pnpm@latest --activate\n\n# Install dependencies\nRUN pnpm install\n\n# Copy source code\nCOPY . .\n\n# Build the application\nRUN pnpm run build\n\n# Production stage\nFROM node:22-alpine\n\nWORKDIR /app\n\n# Copy only production files\nCOPY --from=builder /app/package.json /app/pnpm-lock.yaml ./\n\n# Install pnpm\nRUN corepack enable && corepack prepare pnpm@latest --activate\n\n# Install production dependencies only\nRUN pnpm install --prod\n\n# Copy built application from builder stage\nCOPY --from=builder /app/dist ./dist\n\n# Expose ports\nEXPOSE 8080\n\n# Set environment variables\nENV NODE_ENV=production\n\n# Run the server\nENTRYPOINT [\"node\", \"dist/index.js\"]",
        "base_docker_image": "node:22-alpine",
        "forks": 12,
        "stars": 117,
        "watchers": 3,
        "last_commit": "2025-03-30T16:34:24Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for bytebase/dbhub: 403; ClosedIssuesError: API error (closed issues) for bytebase/dbhub: 403"
    },
    "Dappier": {
        "name": "Dappier",
        "repo_url": "https://github.com/DappierAI/dappier-mcp",
        "type": "community",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 3,
        "watchers": 1,
        "last_commit": "2025-03-19T21:45:21Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for DappierAI/dappier-mcp: 403; ClosedIssuesError: API error (closed issues) for DappierAI/dappier-mcp: 403; FileListAnalysisError: Empty file list"
    },
    "Dart": {
        "name": "Dart",
        "repo_url": "https://github.com/its-dart/dart-mcp-server",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm",
            "yarn"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "~1.5",
                "axios": "~1.8",
                "dotenv": "~16.4",
                "zod": "~3.24"
            },
            "devDependencies": {
                "@types/node": "22.13.13",
                "prettier": "3.4.2",
                "release-it": "17.11.0",
                "shx": "0.3.4",
                "typescript": "5.7.3"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.12-alpine AS builder\n\nCOPY . /app\nCOPY tsconfig.json /tsconfig.json\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nRUN --mount=type=cache,target=/root/.npm-production npm ci --ignore-scripts --omit-dev\n\nFROM node:22.12-alpine AS release\n\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\nENV NODE_ENV=production\n\nWORKDIR /app\n\nRUN npm ci --ignore-scripts --omit-dev\n\nENTRYPOINT [\"node\", \"dist/index.js\"]\n",
        "base_docker_image": "node:22.12-alpine",
        "forks": 3,
        "stars": 29,
        "watchers": 3,
        "last_commit": "2025-04-01T03:03:00Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for its-dart/dart-mcp-server: 403; ClosedIssuesError: API error (closed issues) for its-dart/dart-mcp-server: 403"
    },
    "Data Exploration": {
        "name": "Data Exploration",
        "repo_url": "https://github.com/reading-plus-ai/mcp-server-data-exploration",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.0.0",
                "numpy>=2.1.3",
                "pandas>=2.2.3",
                "scikit-learn>=1.5.2",
                "scipy>=1.14.1",
                "statsmodels>=0.14.4"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": false,
        "forks": 22,
        "stars": 195,
        "watchers": 2,
        "last_commit": "2025-03-22T17:26:01Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for reading-plus-ai/mcp-server-data-exploration: 403; ClosedIssuesError: API error (closed issues) for reading-plus-ai/mcp-server-data-exploration: 403"
    },
    "Databricks": {
        "name": "Databricks",
        "repo_url": "https://github.com/JordiNeil/mcp-databricks-server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "requirements.txt",
        "packages": {
            "dependencies": [
                "fastapi>=0.95.0",
                "uvicorn>=0.22.0",
                "databricks-sql-connector>=2.4.0",
                "python-dotenv>=1.0.0",
                "pydantic>=2.0.0",
                "mcp>=0.1.0",
                "pyarrow>=14.0.1",
                "requests>=2.31.0"
            ],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 2,
        "stars": 11,
        "watchers": 1,
        "last_commit": "2025-03-21T03:00:28Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for JordiNeil/mcp-databricks-server: 403; ClosedIssuesError: API error (closed issues) for JordiNeil/mcp-databricks-server: 403"
    },
    "Dataset Viewer": {
        "name": "Dataset Viewer",
        "repo_url": "https://github.com/privetin/dataset-viewer",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.1.2",
                "httpx>=0.28.1"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": false,
        "forks": 6,
        "stars": 8,
        "watchers": 1,
        "last_commit": "2025-01-06T04:19:54Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for privetin/dataset-viewer: 403; ClosedIssuesError: API error (closed issues) for privetin/dataset-viewer: 403"
    },
    "DeepSeek MCP Server": {
        "name": "DeepSeek MCP Server",
        "repo_url": "https://github.com/DMontgomery40/deepseek-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "latest",
                "axios": "^1.6.0",
                "dotenv": "^16.3.1"
            },
            "devDependencies": {
                "@types/node": "^20.8.0",
                "typescript": "^5.2.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\nFROM node:18-alpine AS builder\n\nWORKDIR /app\n\n# Copy the necessary files\nCOPY package.json package-lock.json ./\nCOPY tsconfig.json ./\nCOPY src ./src\n\n# Install dependencies and build the project\nRUN npm install && npm run build\n\n# Use a smaller base image for the release\nFROM node:18-alpine AS release\n\nWORKDIR /app\n\n# Copy only the built output and necessary files\nCOPY --from=builder /app/build ./build\nCOPY --from=builder /app/package.json ./package.json\nCOPY --from=builder /app/package-lock.json ./package-lock.json\n\n# Install production dependencies only\nRUN npm install --production\n\n# Set environment variable\nENV NODE_ENV=production\n\n# Entry point\nENTRYPOINT [\"node\", \"build/index.js\"]",
        "base_docker_image": "node:18-alpine",
        "forks": 13,
        "stars": 168,
        "watchers": 1,
        "last_commit": "2025-03-27T06:20:21Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for DMontgomery40/deepseek-mcp-server: 403; ClosedIssuesError: API error (closed issues) for DMontgomery40/deepseek-mcp-server: 403"
    },
    "Deepseek_R1": {
        "name": "Deepseek_R1",
        "repo_url": "https://github.com/66julienmartin/MCP-server-Deepseek_R1",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.6.0",
                "dotenv": "^16.4.7",
                "openai": "^4.80.1"
            },
            "devDependencies": {
                "@types/node": "^20.11.24",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use Node.js 18-alpine as the base image\nFROM node:18-alpine AS builder\n\n# Set the working directory\nWORKDIR /app\n\n# Copy package.json and package-lock.json\nCOPY package.json package-lock.json ./\n\n# Install dependencies\nRUN npm install --ignore-scripts\n\n# Copy the rest of the application\nCOPY . .\n\n# Build the application\nRUN npm run build\n\n# Prepare the runtime image\nFROM node:18-alpine\n\n# Set the working directory\nWORKDIR /app\n\n# Copy built application from the builder stage\nCOPY --from=builder /app/build /app/build\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\n# Install only production dependencies\nRUN npm ci --only=production\n\n# Set environment variables (ensure to replace with your actual API key)\nENV DEEPSEEK_API_KEY=your-api-key-here\n\n# Expose necessary ports (if applicable)\n# EXPOSE 8080  # Example: adjust according to your needs\n\n# Command to run the server\nCMD [\"node\", \"build/index.js\"]\n",
        "base_docker_image": "node:18-alpine",
        "forks": 6,
        "stars": 43,
        "watchers": 2,
        "last_commit": "2025-03-20T01:40:56Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for 66julienmartin/MCP-server-Deepseek_R1: 403; ClosedIssuesError: API error (closed issues) for 66julienmartin/MCP-server-Deepseek_R1: 403"
    },
    "Descope": {
        "name": "Descope",
        "repo_url": "https://github.com/descope-sample-apps/descope-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@descope/node-sdk": "^1.6.13",
                "@modelcontextprotocol/sdk": "^1.6.1",
                "dotenv": "^16.4.7",
                "express": "^4.21.2",
                "node-fetch": "^3.3.2",
                "zod": "^3.24.1"
            },
            "devDependencies": {
                "@types/express": "^5.0.0",
                "@types/node": "^22.10.10",
                "nodemon": "^3.1.9",
                "typescript": "^5.7.3"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# syntax=docker/dockerfile:1\n# Comments are provided throughout this file to help you get started.\n# If you need more help, visit the Dockerfile reference guide at\n# https://docs.docker.com/go/dockerfile-reference/\n# Want to help us make this template better? Share your feedback here: https://forms.gle/ybq9Krt8jtBL3iCk7\nARG NODE_VERSION=18\n################################################################################\n# Use node image for base image for all stages.\nFROM node:${NODE_VERSION}-alpine as base\n# Set working directory for all build stages.\nWORKDIR /usr/src/app\n################################################################################\n# Create a stage for installing production dependecies.\nFROM base as deps\n# Download dependencies as a separate step to take advantage of Docker's caching.\n# Leverage a cache mount to /root/.npm to speed up subsequent builds.\n# Leverage bind mounts to package.json and package-lock.json to avoid having to copy them\n# into this layer.\nRUN --mount=type=bind,source=package.json,target=package.json \\\n    --mount=type=bind,source=package-lock.json,target=package-lock.json \\\n    --mount=type=cache,target=/root/.npm \\\n    npm ci --omit=dev\n################################################################################\n# Create a stage for building the application.\nFROM deps as build\n# Download additional development dependencies before building, as some projects require\n# \"devDependencies\" to be installed to build. If you don't need this, remove this step.\nRUN --mount=type=bind,source=package.json,target=package.json \\\n    --mount=type=bind,source=package-lock.json,target=package-lock.json \\\n    --mount=type=cache,target=/root/.npm \\\n    npm ci\n# Copy the rest of the source files into the image.\nCOPY . .\n# Run the build script.\nRUN npm run build\n################################################################################\n# Create a new stage to run the application with minimal runtime dependencies\n# where the necessary files are copied from the build stage.\nFROM base as final\n# Use production node environment by default.\nENV NODE_ENV production\n# Run the application as a non-root user.\nUSER node\n# Copy package.json so that package manager commands can be used.\nCOPY package.json .\n# Copy the production dependencies from the deps stage and also\n# the built application from the build stage into the image.\nCOPY --from=deps /usr/src/app/node_modules ./node_modules\nCOPY --from=build /usr/src/app/build ./build\n# Set the environment variables\nENV DESCOPE_PROJECT_ID=YOUR_DESCOPE_PROJECT_ID\nENV DESCOPE_MANAGEMENT_KEY=YOUR_DESCOPE_MANAGEMENT_KEY\n# Expose the port that the application listens on.\nEXPOSE 3000\n# Run the application.\nCMD node build/index.js",
        "base_docker_image": "node:${NODE_VERSION}-alpine",
        "forks": 2,
        "stars": 3,
        "watchers": 4,
        "last_commit": "2025-03-17T20:34:08Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for descope-sample-apps/descope-mcp-server: 403; ClosedIssuesError: API error (closed issues) for descope-sample-apps/descope-mcp-server: 403"
    },
    "DevHub": {
        "name": "DevHub",
        "repo_url": "https://github.com/devhub/devhub-cms-mcp",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp[cli]>=1.4.1",
                "requests-oauthlib>=2.0.0"
            ],
            "devDependencies": [
                "pytest>=7.0.0",
                "pytest-mock>=3.10.0",
                "pytest-cov>=4.1.0"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\nFROM python:3.10-alpine\n\n# Set work directory\nWORKDIR /app\n\n# Install build dependencies\nRUN apk add --no-cache gcc musl-dev libffi-dev openssl-dev\n\n# Copy project files\nCOPY pyproject.toml ./\nCOPY main.py ./\nCOPY src/ ./src/\nCOPY README.md ./\nCOPY uv.lock ./\nCOPY tests/ ./tests/\n\n# Install pip and project dependencies\nRUN pip install --upgrade pip \\\n    && pip install .\n\n# Expose port if necessary (not required for stdio transport)\n\n# Default command to run the MCP server\nCMD [\"python\", \"main.py\"]\n",
        "base_docker_image": "python:3.10-alpine",
        "forks": 0,
        "stars": 0,
        "watchers": 2,
        "last_commit": "2025-03-24T13:09:53Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for devhub/devhub-cms-mcp: 403; ClosedIssuesError: API error (closed issues) for devhub/devhub-cms-mcp: 403"
    },
    "DevRev": {
        "name": "DevRev",
        "repo_url": "https://github.com/kpsunil97/devrev-mcp-server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.0.0",
                "requests"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": false,
        "forks": 3,
        "stars": 2,
        "watchers": 1,
        "last_commit": "2024-12-20T21:24:49Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for kpsunil97/devrev-mcp-server: 403; ClosedIssuesError: API error (closed issues) for kpsunil97/devrev-mcp-server: 403"
    },
    "Dicom": {
        "name": "Dicom",
        "repo_url": "https://github.com/ChristianHinge/dicom-mcp",
        "type": "community",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 3,
        "stars": 16,
        "watchers": 3,
        "last_commit": "2025-03-27T06:42:00Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for ChristianHinge/dicom-mcp: 403; ClosedIssuesError: API error (closed issues) for ChristianHinge/dicom-mcp: 403; FileListAnalysisError: Empty file list"
    },
    "Dify": {
        "name": "Dify",
        "repo_url": "https://github.com/YanxingLiu/dify-mcp-server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "httpx>=0.28.1",
                "mcp>=1.1.2",
                "omegaconf>=2.3.0",
                "pip>=24.3.1",
                "python-dotenv>=1.0.1",
                "requests"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use a Python image\nFROM python:3.12-slim\n\n# Set the working directory\nWORKDIR /app\n\n# Copy pyproject.toml and uv.lock to the working directory\nCOPY pyproject.toml uv.lock /app/\n\n# Install the project's dependencies using a package manager that understands pyproject.toml\nRUN pip install --no-cache-dir hatchling && hatch build && pip install --no-cache-dir dist/*.whl\n\n# Copy the source files to the container\nCOPY src/dify_mcp_server /app/src/dify_mcp_server\n\n# Set environment variables, you should provide CONFIG_PATH during container run\nENV CONFIG_PATH=/path/to/config.yaml\n\n# Set the entrypoint\nENTRYPOINT [\"dify_mcp_server\"]\n\n# The command to run the server\nCMD [\"run\"]",
        "base_docker_image": "python:3.12-slim",
        "forks": 19,
        "stars": 158,
        "watchers": 1,
        "last_commit": "2025-03-28T11:43:05Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for YanxingLiu/dify-mcp-server: 403; ClosedIssuesError: API error (closed issues) for YanxingLiu/dify-mcp-server: 403"
    },
    "Discord": {
        "name": "Discord",
        "repo_url": "https://github.com/SaseQ/discord-mcp",
        "type": "community",
        "language_stack": [
            "Java"
        ],
        "package_manager": [
            "maven"
        ],
        "dependencies_file": "pom.xml",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM maven:3.9.6-amazoncorretto-17 AS build\n\nWORKDIR /app\n\nCOPY pom.xml .\nCOPY src ./src\n\nRUN mvn clean package -DskipTests\n\nFROM amazoncorretto:17-alpine\n\nWORKDIR /app\n\nCOPY --from=build /app/target/*.jar app.jar\n\nENV DISCORD_TOKEN=\"\"\n\nEXPOSE 8080\n\nENTRYPOINT [\"java\", \"-jar\", \"app.jar\"]\n",
        "base_docker_image": "maven:3.9.6-amazoncorretto-17",
        "forks": 0,
        "stars": 9,
        "watchers": 1,
        "last_commit": "2025-03-26T09:53:39Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for SaseQ/discord-mcp: 403; ClosedIssuesError: API error (closed issues) for SaseQ/discord-mcp: 403"
    },
    "Discord Server": {
        "name": "Discord Server",
        "repo_url": "https://glama.ai/mcp/discord",
        "type": "resource",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "error": "Could not parse GitHub URL"
    },
    "Discord Server (ModelContextProtocol)": {
        "name": "Discord Server (ModelContextProtocol)",
        "repo_url": "https://discord.gg/jHEGxQu2a5",
        "type": "resource",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "error": "Could not parse GitHub URL"
    },
    "Discourse": {
        "name": "Discourse",
        "repo_url": "https://github.com/AshDevFr/discourse-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.6.1",
                "discourse2": "^1.1.26",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@biomejs/biome": "1.9.4",
                "@types/node": "^22.13.10",
                "typescript": "^5.8.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.14-alpine AS builder\n\nWORKDIR /app\n\nCOPY . /app\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nRUN --mount=type=cache,target=/root/.npm-production npm ci --ignore-scripts --omit-dev\n\nRUN npm run build\n\n\nFROM node:22-alpine AS release\n\nWORKDIR /app\n\nCOPY --from=builder /app/build /app/build\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\nENV NODE_ENV=production\n\nRUN npm ci --ignore-scripts --omit-dev\n\nENTRYPOINT [\"node\", \"/app/build/index.js\"]\n",
        "base_docker_image": "node:22.14-alpine",
        "forks": 0,
        "stars": 2,
        "watchers": 1,
        "last_commit": "2025-03-10T23:36:54Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for AshDevFr/discourse-mcp-server: 403; ClosedIssuesError: API error (closed issues) for AshDevFr/discourse-mcp-server: 403"
    },
    "Docker": {
        "name": "Docker",
        "repo_url": "https://github.com/ckreiling/mcp-server-docker",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "docker>=7.1.0",
                "mcp>=1.1.0",
                "pydantic-settings>=2.6.1"
            ],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv\n\nWORKDIR /app\n\nENV UV_COMPILE_BYTECODE=1\n\n# Copy from the cache instead of linking since it's a mounted volume\nENV UV_LINK_MODE=copy\n\nCOPY uv.lock pyproject.toml /app/\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    uv sync --frozen --no-install-project --no-dev --no-editable\n\nCOPY ./src /app/src\nCOPY README.md ./README.md\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    uv sync --frozen --no-dev --no-editable\n\nFROM python:3.12-slim-bookworm\n\nWORKDIR /app\n \nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\n\n# Ensure executables in the venv take precedence over system executables\nENV PATH=\"/app/.venv/bin:$PATH\"\n\n# when running the container, add --db-path and a bind mount to the host's db file\nENTRYPOINT [\"mcp-server-docker\"]\n",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
        "forks": 24,
        "stars": 225,
        "watchers": 7,
        "last_commit": "2025-03-31T00:29:41Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for ckreiling/mcp-server-docker: 403; ClosedIssuesError: API error (closed issues) for ckreiling/mcp-server-docker: 403"
    },
    "Drupal": {
        "name": "Drupal",
        "repo_url": "https://github.com/Omedia/mcp-server-drupal",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.6.0",
                "@zodios/core": "^10.9.6"
            },
            "devDependencies": {
                "@biomejs/biome": "1.9.4",
                "@types/bun": "^1.1.14",
                "@types/node": "^20.11.24",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 28,
        "watchers": 0,
        "last_commit": "2025-03-22T12:59:31Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for Omedia/mcp-server-drupal: 403; ClosedIssuesError: API error (closed issues) for Omedia/mcp-server-drupal: 403"
    },
    "E2B": {
        "name": "E2B",
        "repo_url": "https://github.com/e2b-dev/mcp-server",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "pnpm",
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {},
            "devDependencies": {
                "@changesets/cli": "^2.27.12",
                "@changesets/read": "^0.6.2",
                "changeset": "^0.2.6"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Dockerfile for E2B MCP Server JavaScript Edition\n\nFROM node:22-alpine AS builder\n\nWORKDIR /app\n\n# Copy the application files\nCOPY packages/js/ .\n\n# Install dependencies\nRUN npm install\n\n# Build the application\nRUN npm run build\n\nENV NODE_ENV=production\n\nENTRYPOINT [\"node\", \"./build/index.js\"]\n",
        "base_docker_image": "node:22-alpine",
        "forks": 27,
        "stars": 178,
        "watchers": 3,
        "last_commit": "2025-03-28T10:26:04Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for e2b-dev/mcp-server: 403; ClosedIssuesError: API error (closed issues) for e2b-dev/mcp-server: 403"
    },
    "EVM MCP Server": {
        "name": "EVM MCP Server",
        "repo_url": "https://github.com/mcpdotdirect/evm-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.7.0",
                "cors": "^2.8.5",
                "express": "^4.21.2",
                "viem": "^2.23.9",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@types/bun": "latest",
                "@types/cors": "^2.8.17",
                "@types/express": "^5.0.0",
                "conventional-changelog-cli": "^5.0.0"
            }
        },
        "has_dockerfile": false,
        "forks": 19,
        "stars": 110,
        "watchers": 0,
        "last_commit": "2025-03-22T20:17:49Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for mcpdotdirect/evm-mcp-server: 403; ClosedIssuesError: API error (closed issues) for mcpdotdirect/evm-mcp-server: 403"
    },
    "EasyMCP": {
        "name": "EasyMCP",
        "repo_url": "https://github.com/zcaceres/easy-mcp/",
        "type": "framework",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.0.4",
                "lodash.camelcase": "^4.3.0",
                "path-to-regexp": "^8.2.0",
                "reflect-metadata": "^0.2.2"
            },
            "devDependencies": {
                "@anatine/zod-mock": "^3.13.4",
                "@faker-js/faker": "^9.3.0",
                "@semantic-release/changelog": "^6.0.3",
                "@semantic-release/git": "^10.0.1",
                "@types/bun": "latest",
                "@types/lodash.camelcase": "^4.3.9",
                "semantic-release": "^24.2.1"
            }
        },
        "has_dockerfile": false,
        "forks": 5,
        "stars": 96,
        "watchers": 2,
        "last_commit": "2025-01-20T01:46:52Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": true,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for zcaceres/easy-mcp: 403; ClosedIssuesError: API error (closed issues) for zcaceres/easy-mcp: 403"
    },
    "EduBase": {
        "name": "EduBase",
        "repo_url": "https://github.com/EduBase/MCP",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.6.1",
                "query-string": "^9.1.1"
            },
            "devDependencies": {
                "@types/node": "^22",
                "shx": "^0.3.4",
                "typescript": "^5.8.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "## Multi-stage builder\nFROM node:22-alpine AS builder\nCOPY . /build\nWORKDIR /build\nRUN --mount=type=cache,target=/root/.npm npm install\n\n## EduBase MCP server image\nFROM node:22-alpine AS server\nWORKDIR /app\nCOPY --from=builder /build/dist /app/dist\nCOPY --from=builder /build/package.json /app/package.json\nCOPY --from=builder /build/package-lock.json /app/package-lock.json\nENV NODE_ENV=production\nRUN npm ci --ignore-scripts --omit-dev\nUSER node\nENTRYPOINT [\"node\", \"dist/index.js\"]\n",
        "base_docker_image": "node:22-alpine",
        "forks": 1,
        "stars": 8,
        "watchers": 2,
        "last_commit": "2025-03-16T07:35:51Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for EduBase/MCP: 403; ClosedIssuesError: API error (closed issues) for EduBase/MCP: 403"
    },
    "Elasticsearch": {
        "name": "Elasticsearch",
        "repo_url": "https://github.com/cr7258/elasticsearch-mcp-server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "elasticsearch>=8.0.0",
                "mcp>=1.0.0",
                "python-dotenv>=1.0.0",
                "fastmcp>=0.4.0"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Start with a Python base image\nFROM python:3.10-slim\n\n# Set working directory\nWORKDIR /app\n\n# Copy necessary files\nCOPY . .\n\n# Install hatch to handle the build\nRUN pip install hatch\n\n# Clean dist directory before build\nRUN rm -rf dist/*\n\n# Use hatch to build the package and install it\nRUN hatch build && pip install dist/*.whl\n\n# Set environment variables required for the MCP server\n# These can be overridden at runtime with docker run --env\nENV ELASTIC_HOST=\"https://localhost:9200\"\nENV ELASTIC_USERNAME=\"elastic\"\nENV ELASTIC_PASSWORD=\"test123\"\n\n# Expose the port the server is running on (if applicable)\nEXPOSE 8000\n\n# Command to run the server\nENTRYPOINT [\"elasticsearch-mcp-server\"]",
        "base_docker_image": "python:3.10-slim",
        "forks": 10,
        "stars": 65,
        "watchers": 1,
        "last_commit": "2025-03-29T03:25:27Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for cr7258/elasticsearch-mcp-server: 403; ClosedIssuesError: API error (closed issues) for cr7258/elasticsearch-mcp-server: 403"
    },
    "ElevenLabs": {
        "name": "ElevenLabs",
        "repo_url": "https://github.com/mamertofabian/elevenlabs-mcp-server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.0.0",
                "requests",
                "pydub",
                "python-dotenv",
                "pytest>=8.3.4",
                "tenacity>=9.0.0",
                "aiosqlite>=0.19.0"
            ],
            "devDependencies": [
                "pytest",
                "pytest-asyncio",
                "pyright>=1.1.389",
                "pytest>=8.3.3",
                "ruff>=0.8.1"
            ]
        },
        "has_dockerfile": false,
        "forks": 6,
        "stars": 51,
        "watchers": 2,
        "last_commit": "2025-01-07T23:12:10Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for mamertofabian/elevenlabs-mcp-server: 403; ClosedIssuesError: API error (closed issues) for mamertofabian/elevenlabs-mcp-server: 403"
    },
    "Ergo Blockchain MCP": {
        "name": "Ergo Blockchain MCP",
        "repo_url": "https://github.com/marctheshark3/ergo-mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "requirements.txt",
        "packages": {
            "dependencies": [
                "mcp>=0.5.0",
                "httpx>=0.23.0",
                "python-dotenv>=0.21.0",
                "asyncio>=3.4.3",
                "setuptools>=65.0.0",
                "fastapi>=0.95.0",
                "uvicorn>=0.22.0",
                "pydantic>=1.10.0",
                "aiohttp>=3.8.4"
            ],
            "devDependencies": [
                "pytest>=7.3.1",
                "pytest-asyncio>=0.21.0",
                "pytest-cov>=4.1.0",
                "pytest-mock>=3.10.0",
                "black>=23.0.0",
                "flake8>=6.0.0",
                "isort>=5.12.0",
                "mypy>=1.3.0"
            ]
        },
        "has_dockerfile": false,
        "forks": 2,
        "stars": 4,
        "watchers": 1,
        "last_commit": "2025-03-20T14:47:58Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for marctheshark3/ergo-mcp: 403; ClosedIssuesError: API error (closed issues) for marctheshark3/ergo-mcp: 403"
    },
    "Eunomia": {
        "name": "Eunomia",
        "repo_url": "https://github.com/whataboutyou-ai/eunomia-MCP-server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "pip",
                "uv",
                "pydantic>=2.8.0",
                "python-dotenv==1.0.0",
                "pydantic-settings>=2.1.0",
                "mcp>=1.1.2",
                "eunomia-ai"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 5,
        "watchers": 1,
        "last_commit": "2025-03-12T11:28:37Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": true,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for whataboutyou-ai/eunomia-MCP-server: 403; ClosedIssuesError: API error (closed issues) for whataboutyou-ai/eunomia-MCP-server: 403"
    },
    "EverArt": {
        "name": "EverArt",
        "repo_url": "https://github.com/modelcontextprotocol/servers/tree/main/src/everart",
        "type": "reference",
        "language_stack": [
            "TypeScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.5.0",
                "everart": "^1.0.0",
                "node-fetch": "^3.3.2",
                "open": "^9.1.0"
            },
            "devDependencies": {
                "@types/node": "^22",
                "shx": "^0.3.4",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.12-alpine AS builder\n\nCOPY src/everart /app\nCOPY tsconfig.json /tsconfig.json\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nFROM node:22-alpine AS release\n\nWORKDIR /app\n\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\nENV NODE_ENV=production\n\nRUN npm ci --ignore-scripts --omit-dev\n\nENTRYPOINT [\"node\", \"dist/index.js\"]\n\nCMD [\"node\", \"dist/index.js\"]",
        "base_docker_image": "node:22.12-alpine",
        "forks": 2985,
        "stars": 28753,
        "watchers": 208,
        "last_commit": "2025-03-31T15:41:32Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Everything": {
        "name": "Everything",
        "repo_url": "https://github.com/modelcontextprotocol/servers/tree/main/src/everything",
        "type": "reference",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.0.1",
                "express": "^4.21.1",
                "zod": "^3.23.8",
                "zod-to-json-schema": "^3.23.5"
            },
            "devDependencies": {
                "@types/express": "^5.0.0",
                "shx": "^0.3.4",
                "typescript": "^5.6.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.12-alpine AS builder\n\nCOPY src/everything /app\nCOPY tsconfig.json /tsconfig.json\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nFROM node:22-alpine AS release\n\nWORKDIR /app\n\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\nENV NODE_ENV=production\n\nRUN npm ci --ignore-scripts --omit-dev\n\nCMD [\"node\", \"dist/index.js\"]",
        "base_docker_image": "node:22.12-alpine",
        "forks": 2985,
        "stars": 28753,
        "watchers": 208,
        "last_commit": "2025-03-31T15:41:32Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Everything Search": {
        "name": "Everything Search",
        "repo_url": "https://github.com/mamertofabian/mcp-everything-search",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.0.0",
                "pydantic>=2.0.0"
            ],
            "devDependencies": [
                "pyright>=1.1.389",
                "pytest>=8.3.3",
                "ruff>=0.8.1"
            ]
        },
        "has_dockerfile": false,
        "forks": 6,
        "stars": 87,
        "watchers": 1,
        "last_commit": "2025-01-07T23:13:29Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for mamertofabian/mcp-everything-search: 403; ClosedIssuesError: API error (closed issues) for mamertofabian/mcp-everything-search: 403"
    },
    "Exa": {
        "name": "Exa",
        "repo_url": "https://github.com/exa-labs/exa-mcp-server",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.7.0",
                "axios": "^1.7.8",
                "dotenv": "^16.4.5",
                "zod": "^3.22.4"
            },
            "devDependencies": {
                "@types/node": "^20.11.24",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Use the official Node.js 18 image as a parent image\nFROM node:18-alpine AS builder\n\n# Set the working directory in the container to /app\nWORKDIR /app\n\n# Copy package.json and package-lock.json into the container\nCOPY package.json package-lock.json ./\n\n# Install dependencies\nRUN npm ci --ignore-scripts\n\n# Copy the rest of the application code into the container\nCOPY src/ ./src/\nCOPY tsconfig.json ./\n\n# Build the project\nRUN npm run build\n\n# Use a minimal node image as the base image for running\nFROM node:18-alpine AS runner\n\nWORKDIR /app\n\n# Copy compiled code from the builder stage\nCOPY --from=builder /app/build ./build\nCOPY package.json package-lock.json ./\n\n# Install only production dependencies\nRUN npm ci --production --ignore-scripts\n\n# Set environment variable for the Exa API key\nENV EXA_API_KEY=your-api-key-here\n\n# Expose the port the app runs on\nEXPOSE 3000\n\n# Run the application\nENTRYPOINT [\"node\", \"build/index.js\"]",
        "base_docker_image": "node:18-alpine",
        "forks": 34,
        "stars": 444,
        "watchers": 4,
        "last_commit": "2025-03-21T16:35:18Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for exa-labs/exa-mcp-server: 403; ClosedIssuesError: API error (closed issues) for exa-labs/exa-mcp-server: 403"
    },
    "Excel": {
        "name": "Excel",
        "repo_url": "https://github.com/haris-musa/excel-mcp-server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp[cli]>=1.2.0",
                "openpyxl>=3.1.2"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": false,
        "forks": 14,
        "stars": 123,
        "watchers": 4,
        "last_commit": "2025-03-20T06:12:11Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for haris-musa/excel-mcp-server: 403; ClosedIssuesError: API error (closed issues) for haris-musa/excel-mcp-server: 403"
    },
    "Fantasy PL": {
        "name": "Fantasy PL",
        "repo_url": "https://github.com/rishijatia/fantasy-pl-mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.2.0",
                "httpx>=0.24.0",
                "python-dotenv",
                "diskcache",
                "jsonschema"
            ],
            "devDependencies": [
                "pytest>=7.0.0",
                "black>=23.0.0",
                "flake8>=6.0.0",
                "isort>=5.10.0",
                "mypy>=1.0.0",
                "build",
                "twine",
                "mcp[cli]>=1.2.0"
            ]
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 7,
        "watchers": 1,
        "last_commit": "2025-04-01T03:20:07Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for rishijatia/fantasy-pl-mcp: 403; ClosedIssuesError: API error (closed issues) for rishijatia/fantasy-pl-mcp: 403"
    },
    "FastAPI to MCP auto generator": {
        "name": "FastAPI to MCP auto generator",
        "repo_url": "https://github.com/tadata-org/fastapi_mcp",
        "type": "framework",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "fastapi>=0.100.0",
                "typer>=0.9.0",
                "rich>=13.0.0",
                "mcp>=1.3.0",
                "pydantic>=2.0.0",
                "pydantic-settings>=2.5.2",
                "uvicorn>=0.20.0",
                "httpx>=0.24.0",
                "requests>=2.25.0",
                "inspect-mate>=0.0.2",
                "tomli>=2.2.1"
            ],
            "devDependencies": [
                "mypy>=1.15.0",
                "ruff>=0.9.10",
                "types-setuptools>=75.8.2.20250305",
                "pytest>=7.4.0",
                "pytest-asyncio>=0.23.0",
                "pytest-cov>=4.1.0"
            ]
        },
        "has_dockerfile": false,
        "forks": 47,
        "stars": 458,
        "watchers": 3,
        "last_commit": "2025-03-31T09:37:38Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": true,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for tadata-org/fastapi_mcp: 403; ClosedIssuesError: API error (closed issues) for tadata-org/fastapi_mcp: 403"
    },
    "FastMCP": {
        "name": "FastMCP",
        "repo_url": "https://github.com/punkpeye/fastmcp",
        "type": "framework",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "pnpm"
        ],
        "dependencies_file": "pnpm-lock.yaml",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 54,
        "stars": 755,
        "watchers": 9,
        "last_commit": "2025-03-27T14:01:54Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for punkpeye/fastmcp: 403; ClosedIssuesError: API error (closed issues) for punkpeye/fastmcp: 403"
    },
    "Fetch": {
        "name": "Fetch",
        "repo_url": "https://github.com/zcaceres/fetch-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.0.4",
                "jsdom": "^25.0.1",
                "turndown": "^7.2.0",
                "zod": "^3.24.1"
            },
            "devDependencies": {
                "@types/jest": "^29.5.14",
                "@types/jsdom": "^21.1.7",
                "@types/node": "^22.10.2",
                "@types/turndown": "^5.0.5",
                "jest": "^29.7.0",
                "ts-jest": "^29.2.5",
                "typescript": "^5.7.2"
            }
        },
        "has_dockerfile": false,
        "forks": 27,
        "stars": 207,
        "watchers": 2,
        "last_commit": "2025-01-18T19:22:23Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for zcaceres/fetch-mcp: 403; ClosedIssuesError: API error (closed issues) for zcaceres/fetch-mcp: 403"
    },
    "Fewsats": {
        "name": "Fewsats",
        "repo_url": "https://github.com/Fewsats/fewsats-mcp",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.4.1",
                "fewsats>=0.0.16"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 8,
        "watchers": 2,
        "last_commit": "2025-03-27T06:39:11Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for Fewsats/fewsats-mcp: 403; ClosedIssuesError: API error (closed issues) for Fewsats/fewsats-mcp: 403"
    },
    "Fibery": {
        "name": "Fibery",
        "repo_url": "https://github.com/Fibery-inc/fibery-mcp-server",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "click>=8.1.8",
                "httpx>=0.28.1",
                "mcp[cli]>=1.4.1",
                "pydantic>=2.10.6",
                "python-dotenv>=1.0.1"
            ],
            "devDependencies": [
                "build>=1.2.2.post1",
                "pytest>=8.3.5",
                "pytest-asyncio>=0.25.3",
                "ruff>=0.11.0",
                "twine>=6.1.0"
            ]
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 8,
        "watchers": 4,
        "last_commit": "2025-03-17T19:59:18Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for Fibery-inc/fibery-mcp-server: 403; ClosedIssuesError: API error (closed issues) for Fibery-inc/fibery-mcp-server: 403"
    },
    "Figma": {
        "name": "Figma",
        "repo_url": "https://github.com/GLips/Figma-Context-MCP",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript",
            "Node.js"
        ],
        "package_manager": [
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.6.1",
                "@types/yargs": "^17.0.33",
                "cross-env": "^7.0.3",
                "dotenv": "^16.4.7",
                "express": "^4.21.2",
                "remeda": "^2.20.1",
                "yargs": "^17.7.2",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@figma/rest-api-spec": "^0.24.0",
                "@types/express": "^5.0.0",
                "@types/jest": "^29.5.11",
                "@types/node": "^20.17.0",
                "@typescript-eslint/eslint-plugin": "^8.24.0",
                "@typescript-eslint/parser": "^8.24.0",
                "eslint": "^9.20.1",
                "eslint-config-prettier": "^10.0.1",
                "jest": "^29.7.0",
                "prettier": "^3.5.0",
                "ts-jest": "^29.2.5",
                "tsup": "^8.4.0",
                "tsx": "^4.19.2",
                "typescript": "^5.7.3"
            }
        },
        "has_dockerfile": false,
        "forks": 292,
        "stars": 3856,
        "watchers": 23,
        "last_commit": "2025-03-31T01:06:01Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for GLips/Figma-Context-MCP: 403; ClosedIssuesError: API error (closed issues) for GLips/Figma-Context-MCP: 403"
    },
    "Filesystem": {
        "name": "Filesystem",
        "repo_url": "https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem",
        "type": "reference",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.5.0",
                "diff": "^5.1.0",
                "glob": "^10.3.10",
                "minimatch": "^10.0.1",
                "zod-to-json-schema": "^3.23.5"
            },
            "devDependencies": {
                "@types/diff": "^5.0.9",
                "@types/minimatch": "^5.1.2",
                "@types/node": "^22",
                "shx": "^0.3.4",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.12-alpine AS builder\n\nWORKDIR /app\n\nCOPY src/filesystem /app\nCOPY tsconfig.json /tsconfig.json\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nRUN --mount=type=cache,target=/root/.npm-production npm ci --ignore-scripts --omit-dev\n\n\nFROM node:22-alpine AS release\n\nWORKDIR /app\n\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\nENV NODE_ENV=production\n\nRUN npm ci --ignore-scripts --omit-dev\n\nENTRYPOINT [\"node\", \"/app/dist/index.js\"]",
        "base_docker_image": "node:22.12-alpine",
        "forks": 2985,
        "stars": 28753,
        "watchers": 208,
        "last_commit": "2025-03-31T15:41:32Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Financial Datasets": {
        "name": "Financial Datasets",
        "repo_url": "https://github.com/financial-datasets/mcp-server",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "httpx>=0.28.1",
                "mcp[cli]>=1.3.0"
            ],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 23,
        "stars": 166,
        "watchers": 1,
        "last_commit": "2025-03-28T22:05:43Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for financial-datasets/mcp-server: 403; ClosedIssuesError: API error (closed issues) for financial-datasets/mcp-server: 403"
    },
    "Fingertip": {
        "name": "Fingertip",
        "repo_url": "https://github.com/fingertip-com/fingertip-mcp",
        "type": "community",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "RepoInfoError: API error (repo info) for fingertip-com/fingertip-mcp: 404; OpenIssuesError: API error (open issues) for fingertip-com/fingertip-mcp: 403; ClosedIssuesError: API error (closed issues) for fingertip-com/fingertip-mcp: 403; FileListAnalysisError: Empty file list"
    },
    "FireCrawl": {
        "name": "FireCrawl",
        "repo_url": "https://github.com/vrknetha/mcp-server-firecrawl",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm",
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@mendable/firecrawl-js": "^1.19.0",
                "@modelcontextprotocol/sdk": "^1.4.1",
                "dotenv": "^16.4.7",
                "p-queue": "^8.0.1",
                "shx": "^0.3.4"
            },
            "devDependencies": {
                "@jest/globals": "^29.7.0",
                "@types/jest": "^29.5.14",
                "@types/node": "^20.10.5",
                "@typescript-eslint/eslint-plugin": "^7.0.0",
                "@typescript-eslint/parser": "^7.0.0",
                "eslint": "^8.56.0",
                "eslint-config-prettier": "^9.1.0",
                "jest": "^29.7.0",
                "jest-mock-extended": "^4.0.0-beta1",
                "prettier": "^3.1.1",
                "ts-jest": "^29.1.1",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use a Node.js image as the base for building the application\nFROM node:18-alpine AS builder\n\n# Set the working directory inside the container\nWORKDIR /app\n\n# Copy package.json and package-lock.json to install dependencies\nCOPY package.json package-lock.json ./\n\n# Install dependencies (ignoring scripts to prevent running the prepare script)\nRUN npm install --ignore-scripts\n\n# Copy the rest of the application source code\nCOPY . .\n\n# Build the application using TypeScript\nRUN npm run build\n\n# Use a smaller Node.js image for the final image\nFROM node:18-slim AS release\n\n# Set the working directory inside the container\nWORKDIR /app\n\n# Copy the built application from the builder stage\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\n# Install only production dependencies\nRUN npm ci --omit=dev\n\n# Set environment variables for API key and custom API URL if needed\nENV FIRECRAWL_API_KEY=your-api-key\nENV FIRECRAWL_API_URL=https://firecrawl.your-domain.com\n\n# Specify the command to run the application\nENTRYPOINT [\"node\", \"dist/src/index.js\"]\n",
        "base_docker_image": "node:18-alpine",
        "forks": 181,
        "stars": 2028,
        "watchers": 18,
        "last_commit": "2025-03-27T07:39:13Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for vrknetha/mcp-server-firecrawl: 403; ClosedIssuesError: API error (closed issues) for vrknetha/mcp-server-firecrawl: 403"
    },
    "Firebase": {
        "name": "Firebase",
        "repo_url": "https://github.com/gannonh/firebase-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.6.1",
                "firebase-admin": "^13.2.0"
            },
            "devDependencies": {
                "@types/express": "^5.0.0",
                "@types/jest": "^29.5.14",
                "@types/node": "^22.13.10",
                "jest": "^29.0.0",
                "ts-jest": "^29.2.6",
                "typescript": "^5.8.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\nFROM node:lts-alpine\n\n# Stage 1: Build the project\nFROM node:lts-alpine AS builder\nWORKDIR /app\n\n# Copy dependency definitions\nCOPY package.json package-lock.json ./\n\n# Install dependencies without running scripts\nRUN npm install --ignore-scripts\n\n# Copy all project files\nCOPY . .\n\n# Build the project\nRUN npm run build\n\n# Stage 2: Package the build\nFROM node:lts-alpine\nWORKDIR /app\n\n# Copy only the production build and necessary files\nCOPY --from=builder /app/dist ./dist\nCOPY package.json ./\n\n# Install only production dependencies\nRUN npm install --production --ignore-scripts\n\n# Expose port if needed (for example 8080) - adjust as necessary\n# EXPOSE 8080\n\n# Run the MCP server\nCMD [\"node\", \"dist/index.js\"]\n",
        "base_docker_image": "node:lts-alpine",
        "forks": 9,
        "stars": 43,
        "watchers": 2,
        "last_commit": "2025-03-19T18:58:48Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for gannonh/firebase-mcp: 403; ClosedIssuesError: API error (closed issues) for gannonh/firebase-mcp: 403"
    },
    "Firecrawl": {
        "name": "Firecrawl",
        "repo_url": "https://github.com/mendableai/firecrawl-mcp-server",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm",
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@mendable/firecrawl-js": "^1.19.0",
                "@modelcontextprotocol/sdk": "^1.4.1",
                "dotenv": "^16.4.7",
                "p-queue": "^8.0.1",
                "shx": "^0.3.4"
            },
            "devDependencies": {
                "@jest/globals": "^29.7.0",
                "@types/jest": "^29.5.14",
                "@types/node": "^20.10.5",
                "@typescript-eslint/eslint-plugin": "^7.0.0",
                "@typescript-eslint/parser": "^7.0.0",
                "eslint": "^8.56.0",
                "eslint-config-prettier": "^9.1.0",
                "jest": "^29.7.0",
                "jest-mock-extended": "^4.0.0-beta1",
                "prettier": "^3.1.1",
                "ts-jest": "^29.1.1",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use a Node.js image as the base for building the application\nFROM node:18-alpine AS builder\n\n# Set the working directory inside the container\nWORKDIR /app\n\n# Copy package.json and package-lock.json to install dependencies\nCOPY package.json package-lock.json ./\n\n# Install dependencies (ignoring scripts to prevent running the prepare script)\nRUN npm install --ignore-scripts\n\n# Copy the rest of the application source code\nCOPY . .\n\n# Build the application using TypeScript\nRUN npm run build\n\n# Use a smaller Node.js image for the final image\nFROM node:18-slim AS release\n\n# Set the working directory inside the container\nWORKDIR /app\n\n# Copy the built application from the builder stage\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\n# Install only production dependencies\nRUN npm ci --omit=dev\n\n# Set environment variables for API key and custom API URL if needed\nENV FIRECRAWL_API_KEY=your-api-key\nENV FIRECRAWL_API_URL=https://firecrawl.your-domain.com\n\n# Specify the command to run the application\nENTRYPOINT [\"node\", \"dist/src/index.js\"]\n",
        "base_docker_image": "node:18-alpine",
        "forks": 181,
        "stars": 2028,
        "watchers": 18,
        "last_commit": "2025-03-27T07:39:13Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for mendableai/firecrawl-mcp-server: 403; ClosedIssuesError: API error (closed issues) for mendableai/firecrawl-mcp-server: 403"
    },
    "Fireproof": {
        "name": "Fireproof",
        "repo_url": "https://github.com/fireproof-storage/mcp-database-server",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@fireproof/cloud": "^0.19.118",
                "@modelcontextprotocol/sdk": "0.6.0",
                "use-fireproof": "^0.19.118"
            },
            "devDependencies": {
                "@types/node": "^20.11.24",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 4,
        "stars": 13,
        "watchers": 2,
        "last_commit": "2024-12-19T23:12:00Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for fireproof-storage/mcp-database-server: 403; ClosedIssuesError: API error (closed issues) for fireproof-storage/mcp-database-server: 403"
    },
    "FlightRadar24": {
        "name": "FlightRadar24",
        "repo_url": "https://github.com/sunsetcoder/flightradar24-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "latest",
                "axios": "^1.6.0",
                "dotenv": "^16.4.7",
                "zod": "^3.22.4"
            },
            "devDependencies": {
                "@types/express": "^4.17.21",
                "@types/node": "^20.10.4",
                "tsc-watch": "^6.0.4",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 3,
        "stars": 14,
        "watchers": 2,
        "last_commit": "2025-01-29T15:17:02Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for sunsetcoder/flightradar24-mcp-server: 403; ClosedIssuesError: API error (closed issues) for sunsetcoder/flightradar24-mcp-server: 403"
    },
    "ForeverVM": {
        "name": "ForeverVM",
        "repo_url": "https://github.com/jamsocket/forevervm/tree/main/javascript/mcp-server",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@forevervm/sdk": "^0.1.22",
                "@modelcontextprotocol/sdk": "^1.3.1",
                "commander": "^13.1.0",
                "prettier": "^3.4.2",
                "shx": "^0.3.4",
                "yaml": "^2.7.0",
                "zod": "^3.24.1"
            },
            "devDependencies": {
                "@types/node": "^22.10.7",
                "tsx": "^4.19.2",
                "typescript": "^5.7.3"
            }
        },
        "has_dockerfile": false,
        "forks": 8,
        "stars": 164,
        "watchers": 4,
        "last_commit": "2025-03-25T00:02:38Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for jamsocket/forevervm: 403; ClosedIssuesError: API error (closed issues) for jamsocket/forevervm: 403"
    },
    "Foxy Contexts": {
        "name": "Foxy Contexts",
        "repo_url": "https://github.com/strowk/foxy-contexts",
        "type": "framework",
        "language_stack": [
            "Go"
        ],
        "package_manager": [
            "go modules"
        ],
        "dependencies_file": "go.mod",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 3,
        "stars": 75,
        "watchers": 1,
        "last_commit": "2025-03-31T22:47:40Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": true,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for strowk/foxy-contexts: 403; ClosedIssuesError: API error (closed issues) for strowk/foxy-contexts: 403"
    },
    "GOAT": {
        "name": "GOAT",
        "repo_url": "https://github.com/goat-sdk/goat/tree/main/typescript/examples/by-framework/model-context-protocol",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@goat-sdk/adapter-model-context-protocol": "0.2.11",
                "@goat-sdk/core": "0.4.9",
                "@goat-sdk/plugin-erc20": "0.2.14",
                "@goat-sdk/plugin-spl-token": "0.2.18",
                "@goat-sdk/wallet-evm": "0.2.11",
                "@goat-sdk/wallet-solana": "0.2.16",
                "@goat-sdk/wallet-viem": "0.2.12",
                "@modelcontextprotocol/sdk": "1.0.4",
                "@solana/web3.js": "1.98.0",
                "bip39": "^3.1.0",
                "bs58": "^6.0.0",
                "dotenv": "^16.4.5",
                "viem": "2.23.4",
                "zod": "3.23.8"
            },
            "devDependencies": {
                "@types/node": "22.7.4"
            }
        },
        "has_dockerfile": false,
        "forks": 189,
        "stars": 552,
        "watchers": 14,
        "last_commit": "2025-03-29T10:26:24Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": true,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for goat-sdk/goat: 403; ClosedIssuesError: API error (closed issues) for goat-sdk/goat: 403"
    },
    "Ghost": {
        "name": "Ghost",
        "repo_url": "https://github.com/MFYDev/ghost-mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "httpx",
                "pyjwt",
                "mcp[cli]>=1.2.1",
                "pytz"
            ],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use a Python image with uv pre-installed\nFROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv\n\n# Install the project into /app\nWORKDIR /app\n\n# Enable bytecode compilation\nENV UV_COMPILE_BYTECODE=1\n\n# Copy from the cache instead of linking since it's a mounted volume\nENV UV_LINK_MODE=copy\n\n# Install the project's dependencies using the lockfile and settings\nRUN --mount=type=cache,target=/root/.cache/uv     --mount=type=bind,source=uv.lock,target=uv.lock     --mount=type=bind,source=pyproject.toml,target=pyproject.toml     uv sync --frozen --no-install-project --no-dev --no-editable\n\n# Then, add the rest of the project source code and install it\n# Installing separately from its dependencies allows optimal layer caching\nADD . /app\nRUN --mount=type=cache,target=/root/.cache/uv     uv sync --frozen --no-dev --no-editable\n\nFROM python:3.12-slim-bookworm\n\n# Create non-root user for security\nRUN useradd --create-home app \\\n    && mkdir -p /app \\\n    && chown app:app /app\n\nWORKDIR /app\n \nCOPY --from=uv /app/.venv /app/.venv\nRUN chown -R app:app /app/.venv\n\nUSER app\n\n# Place executables in the environment at the front of the path\nENV PATH=\"/app/.venv/bin:$PATH\"\n\n# Environment variables for Ghost CMS connection\nENV GHOST_API_URL=<YOUR_GHOST_API_URL>\nENV GHOST_STAFF_API_KEY=<YOUR_STAFF_API_KEY>\n\n# when running the container, add --db-path and a bind mount to the host's db file\nENTRYPOINT [\"uv\", \"--directory\", \"/app\", \"run\", \"src/main.py\"]\n",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
        "forks": 9,
        "stars": 30,
        "watchers": 1,
        "last_commit": "2025-03-12T14:46:13Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for MFYDev/ghost-mcp: 403; ClosedIssuesError: API error (closed issues) for MFYDev/ghost-mcp: 403"
    },
    "Git": {
        "name": "Git",
        "repo_url": "https://github.com/modelcontextprotocol/servers/tree/main/src/git",
        "type": "reference",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "click>=8.1.7",
                "gitpython>=3.1.43",
                "mcp>=1.0.0",
                "pydantic>=2.0.0"
            ],
            "devDependencies": [
                "pyright>=1.1.389",
                "ruff>=0.7.3",
                "pytest>=8.0.0"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Use a Python image with uv pre-installed\nFROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv\n\n# Install the project into `/app`\nWORKDIR /app\n\n# Enable bytecode compilation\nENV UV_COMPILE_BYTECODE=1\n\n# Copy from the cache instead of linking since it's a mounted volume\nENV UV_LINK_MODE=copy\n\n# Install the project's dependencies using the lockfile and settings\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    --mount=type=bind,source=uv.lock,target=uv.lock \\\n    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \\\n    uv sync --frozen --no-install-project --no-dev --no-editable\n\n# Then, add the rest of the project source code and install it\n# Installing separately from its dependencies allows optimal layer caching\nADD . /app\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    uv sync --frozen --no-dev --no-editable\n\nFROM python:3.12-slim-bookworm\n\nRUN apt-get update && apt-get install -y git && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /app\n \nCOPY --from=uv /root/.local /root/.local\nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\n\n# Place executables in the environment at the front of the path\nENV PATH=\"/app/.venv/bin:$PATH\"\n\n# when running the container, add --db-path and a bind mount to the host's db file\nENTRYPOINT [\"mcp-server-git\"]\n",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
        "forks": 2985,
        "stars": 28753,
        "watchers": 208,
        "last_commit": "2025-03-31T15:41:32Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "GitHub": {
        "name": "GitHub",
        "repo_url": "https://github.com/modelcontextprotocol/servers/tree/main/src/github",
        "type": "reference",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.0.1",
                "@types/node": "^22",
                "@types/node-fetch": "^2.6.12",
                "node-fetch": "^3.3.2",
                "universal-user-agent": "^7.0.2",
                "zod": "^3.22.4",
                "zod-to-json-schema": "^3.23.5"
            },
            "devDependencies": {
                "shx": "^0.3.4",
                "typescript": "^5.6.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.12-alpine AS builder\n\n# Must be entire project because `prepare` script is run during `npm install` and requires all files.\nCOPY src/github /app\nCOPY tsconfig.json /tsconfig.json\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nFROM node:22.12-alpine AS release\n\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\nENV NODE_ENV=production\n\nWORKDIR /app\n\nRUN npm ci --ignore-scripts --omit-dev\n\nENTRYPOINT [\"node\", \"dist/index.js\"]",
        "base_docker_image": "node:22.12-alpine",
        "forks": 2985,
        "stars": 28753,
        "watchers": 208,
        "last_commit": "2025-03-31T15:41:32Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "GitLab": {
        "name": "GitLab",
        "repo_url": "https://github.com/modelcontextprotocol/servers/tree/main/src/gitlab",
        "type": "reference",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.0.1",
                "@types/node-fetch": "^2.6.12",
                "node-fetch": "^3.3.2",
                "zod-to-json-schema": "^3.23.5"
            },
            "devDependencies": {
                "shx": "^0.3.4",
                "typescript": "^5.6.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.12-alpine AS builder\n\nCOPY src/gitlab /app\nCOPY tsconfig.json /tsconfig.json\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nRUN --mount=type=cache,target=/root/.npm-production npm ci --ignore-scripts --omit-dev\n\nFROM node:22.12-alpine AS release\n\nWORKDIR /app\n\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\nENV NODE_ENV=production\n\nRUN npm ci --ignore-scripts --omit-dev\n\nENTRYPOINT [\"node\", \"dist/index.js\"]",
        "base_docker_image": "node:22.12-alpine",
        "forks": 2985,
        "stars": 28753,
        "watchers": 208,
        "last_commit": "2025-03-31T15:41:32Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Gitee": {
        "name": "Gitee",
        "repo_url": "https://github.com/oschina/mcp-gitee",
        "type": "official",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 17,
        "watchers": 3,
        "last_commit": "2025-03-31T13:25:55Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for oschina/mcp-gitee: 403; ClosedIssuesError: API error (closed issues) for oschina/mcp-gitee: 403; FileListAnalysisError: Empty file list"
    },
    "Github Actions": {
        "name": "Github Actions",
        "repo_url": "https://github.com/ko1ynnky/github-actions-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.7.0",
                "node-fetch": "^3.3.2",
                "universal-user-agent": "^7.0.2",
                "zod": "^3.22.4",
                "zod-to-json-schema": "^3.24.5"
            },
            "devDependencies": {
                "typescript": "^5.6.2"
            }
        },
        "has_dockerfile": false,
        "forks": 2,
        "stars": 7,
        "watchers": 1,
        "last_commit": "2025-03-31T23:33:18Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for ko1ynnky/github-actions-mcp-server: 403; ClosedIssuesError: API error (closed issues) for ko1ynnky/github-actions-mcp-server: 403"
    },
    "Glean": {
        "name": "Glean",
        "repo_url": "https://github.com/longyi1207/glean-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.5.0",
                "node-fetch": "^3.3.2",
                "zod": "^3.24.1"
            },
            "devDependencies": {
                "@types/node": "^22",
                "@types/node-fetch": "^2.6.12",
                "shx": "^0.3.4",
                "ts-node": "^10.9.2",
                "typescript": "^5.6.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.12-alpine as builder\n\nCOPY src/glean/ /app\nCOPY tsconfig.json /tsconfig.json\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nFROM node:22-alpine AS release\n\nWORKDIR /app\n\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\nENV NODE_ENV=production\n\nRUN npm ci --ignore-scripts --omit-dev\n\nENTRYPOINT [\"node\", \"dist/index.js\"]",
        "base_docker_image": "node:22.12-alpine",
        "forks": 2,
        "stars": 5,
        "watchers": 2,
        "last_commit": "2025-01-08T06:15:37Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for longyi1207/glean-mcp-server: 403; ClosedIssuesError: API error (closed issues) for longyi1207/glean-mcp-server: 403"
    },
    "Gmail": {
        "name": "Gmail",
        "repo_url": "https://github.com/GongRzhe/Gmail-MCP-Server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^0.4.0",
                "googleapis": "^129.0.0",
                "google-auth-library": "^9.4.1",
                "open": "^10.0.0",
                "zod": "^3.22.4",
                "zod-to-json-schema": "^3.22.1"
            },
            "devDependencies": {
                "@types/node": "^20.10.5",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:20-alpine\n\nWORKDIR /app\n\n# Copy package files\nCOPY package*.json ./\n\n# Install dependencies\nRUN npm install\n\n# Copy source code\nCOPY . .\n\n# Build the application\nRUN npm run build\n\n# Create data directory\nRUN mkdir -p /app/calendar-data\n\n# Set permissions for the data directory\nRUN chown -R node:node /app/calendar-data\n\n# Switch to non-root user\nUSER node\n\n# Start the server\nCMD [\"node\", \"build/index.js\"]",
        "base_docker_image": "node:20-alpine",
        "forks": 24,
        "stars": 109,
        "watchers": 5,
        "last_commit": "2025-03-31T10:09:02Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for GongRzhe/Gmail-MCP-Server: 403; ClosedIssuesError: API error (closed issues) for GongRzhe/Gmail-MCP-Server: 403"
    },
    "Gmail Headless": {
        "name": "Gmail Headless",
        "repo_url": "https://github.com/baryhuang/mcp-headless-gmail",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.4.1",
                "python-dotenv>=1.0.1",
                "google-api-python-client>=2.127.0",
                "google-auth>=2.34.0",
                "google-auth-oauthlib>=1.2.0",
                "google-auth-httplib2>=0.2.0",
                "python-dateutil>=2.8.2"
            ],
            "devDependencies": [
                "pyright>=1.1.389"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Use Python base image\nFROM python:3.11-slim\n\n# Install the project into `/app`\nWORKDIR /app\n\n# Copy the entire project\nCOPY . /app\n\n# Install the package\nRUN pip install --no-cache-dir -e .\n\n# Run the server\nENTRYPOINT [\"mcp-server-headless-gmail\"] ",
        "base_docker_image": "python:3.11-slim",
        "forks": 4,
        "stars": 11,
        "watchers": 1,
        "last_commit": "2025-03-24T04:48:06Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for baryhuang/mcp-headless-gmail: 403; ClosedIssuesError: API error (closed issues) for baryhuang/mcp-headless-gmail: 403"
    },
    "Goal Story": {
        "name": "Goal Story",
        "repo_url": "https://github.com/hichana/goalstory-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.7.0",
                "axios": "^1.7.9",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@types/node": "^22.13.11",
                "concurrently": "^9.1.2",
                "shx": "^0.3.4",
                "typescript": "^5.8.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use a Node.js image\nFROM node:20-alpine AS builder\n\n# Set working directory\nWORKDIR /app\n\n# Copy package files\nCOPY package.json package-lock.json* ./\n\n# Install dependencies and build the project\nRUN npm install --ignore-scripts && \\\n    npm run build\n\n# Copy the source code and tsconfig\nCOPY tsconfig.json tsconfig.json\nCOPY src/ src/\n\n# Build the project\nRUN npm run build\n\n# Use a minimal image to run the app\nFROM node:20-alpine\n\n# Set working directory\nWORKDIR /app\n\n# Copy only the necessary files from the builder\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\n# Install only production dependencies\nRUN npm install --omit=dev --ignore-scripts\n\n# Define environment variables\nENV NODE_ENV=production\n\n# Entry point for the container\nENTRYPOINT [\"node\", \"dist/index.js\"]\n",
        "base_docker_image": "node:20-alpine",
        "forks": 0,
        "stars": 7,
        "watchers": 1,
        "last_commit": "2025-03-23T03:12:13Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for hichana/goalstory-mcp: 403; ClosedIssuesError: API error (closed issues) for hichana/goalstory-mcp: 403"
    },
    "Godot": {
        "name": "Godot",
        "repo_url": "https://github.com/Coding-Solo/godot-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.6.0",
                "axios": "^1.7.9",
                "fs-extra": "^11.2.0"
            },
            "devDependencies": {
                "@types/node": "^20.11.24",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 14,
        "stars": 170,
        "watchers": 6,
        "last_commit": "2025-03-23T06:08:44Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for Coding-Solo/godot-mcp: 403; ClosedIssuesError: API error (closed issues) for Coding-Solo/godot-mcp: 403"
    },
    "Golang Filesystem Server": {
        "name": "Golang Filesystem Server",
        "repo_url": "https://github.com/mark3labs/mcp-filesystem-server",
        "type": "community",
        "language_stack": [
            "Go"
        ],
        "package_manager": [
            "go"
        ],
        "dependencies_file": "go.mod",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\nFROM golang:1.23-alpine AS builder\n\nWORKDIR /app\n\n# Copy go.mod and go.sum first for caching dependencies\nCOPY go.mod go.sum ./\n\n# Download dependencies\nRUN go mod download\n\n# Copy the source code\nCOPY . .\n\n# Build the application\nRUN go build -ldflags=\"-s -w\" -o server .\n\nFROM alpine:latest\n\nWORKDIR /app\n\n# Copy the built binary from the builder stage\nCOPY --from=builder /app/server ./\n\n# The container will by default pass '/app' as the allowed directory if no other command line arguments are provided\nENTRYPOINT [\"./server\"]\nCMD [\"/app\"]\n",
        "base_docker_image": "golang:1.23-alpine",
        "forks": 21,
        "stars": 143,
        "watchers": 4,
        "last_commit": "2025-03-06T09:06:28Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for mark3labs/mcp-filesystem-server: 403; ClosedIssuesError: API error (closed issues) for mark3labs/mcp-filesystem-server: 403"
    },
    "Goodnews": {
        "name": "Goodnews",
        "repo_url": "https://github.com/VectorInstitute/mcp-goodnews",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "asyncio>=3.4.3",
                "cohere>=5.14.0",
                "mcp[cli]>=1.4.1",
                "pydantic>=2.10.6"
            ],
            "devDependencies": [
                "black>=24.10.0",
                "codespell>=2.3.0",
                "fire>=0.7.0",
                "ipykernel>=6.29.5",
                "isort>=5.13.2",
                "mypy>=1.14.1",
                "pre-commit>=4.1.0",
                "pylint>=3.3.3",
                "pytest>=8.3.4",
                "pytest-asyncio>=0.25.2",
                "pytest-cov>=6.0.0",
                "pytest-mock>=3.14.0",
                "ruff>=0.9.2"
            ]
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 30,
        "watchers": 0,
        "last_commit": "2025-03-25T13:23:49Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for VectorInstitute/mcp-goodnews: 403; ClosedIssuesError: API error (closed issues) for VectorInstitute/mcp-goodnews: 403"
    },
    "Google Calendar": {
        "name": "Google Calendar",
        "repo_url": "https://github.com/nspady/google-calendar-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@google-cloud/local-auth": "^3.0.1",
                "@modelcontextprotocol/sdk": "^1.0.3",
                "@types/express": "^4.17.21",
                "esbuild": "^0.25.0",
                "express": "^4.18.2",
                "google-auth-library": "^9.15.0",
                "googleapis": "^144.0.0",
                "install": "^0.13.0",
                "zod": "^3.22.4"
            },
            "devDependencies": {
                "@types/node": "^20.10.4",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 31,
        "stars": 65,
        "watchers": 1,
        "last_commit": "2025-03-27T03:42:18Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Google Custom Search": {
        "name": "Google Custom Search",
        "repo_url": "https://github.com/adenot/mcp-google-search",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.6.0",
                "axios": "^1.7.9",
                "cheerio": "^1.0.0"
            },
            "devDependencies": {
                "@types/node": "^20.11.24",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use an official Node.js image as a parent image\nFROM node:18-alpine AS builder\n\n# Set the working directory\nWORKDIR /app\n\n# Copy package.json and package-lock.json\nCOPY package.json package-lock.json ./\n\n# Install dependencies\nRUN npm install --ignore-scripts\n\n# Copy the TypeScript source code\nCOPY src ./src\nCOPY tsconfig.json ./\n\n# Build the TypeScript code\nRUN npm run build\n\n# Use a lightweight image for the final build\nFROM node:18-alpine\n\n# Set the working directory\nWORKDIR /app\n\n# Copy the build files from the builder stage\nCOPY --from=builder /app/build ./build\nCOPY package.json ./\n\n# Install only production dependencies\nRUN npm ci --omit=dev\n\n# Expose the port on which the server will run (if required)\n# EXPOSE 8080\n\n# Define environment variables\nENV GOOGLE_API_KEY=your-api-key-here\nENV GOOGLE_SEARCH_ENGINE_ID=your-search-engine-id-here\n\n# Run the application\nENTRYPOINT [\"node\", \"build/index.js\"]\n",
        "base_docker_image": "node:18-alpine",
        "forks": 4,
        "stars": 9,
        "watchers": 1,
        "last_commit": "2025-02-08T03:57:22Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Google Drive": {
        "name": "Google Drive",
        "repo_url": "https://github.com/modelcontextprotocol/servers/tree/main/src/gdrive",
        "type": "reference",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@google-cloud/local-auth": "^3.0.1",
                "@modelcontextprotocol/sdk": "1.0.1",
                "googleapis": "^144.0.0"
            },
            "devDependencies": {
                "@types/node": "^22",
                "shx": "^0.3.4",
                "typescript": "^5.6.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.12-alpine AS builder\n\nCOPY src/gdrive /app\nCOPY tsconfig.json /tsconfig.json\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nRUN --mount=type=cache,target=/root/.npm-production npm ci --ignore-scripts --omit-dev\n\nFROM node:22-alpine AS release\n\nWORKDIR /app\n\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\nCOPY src/gdrive/replace_open.sh /replace_open.sh\n\nENV NODE_ENV=production\n\nRUN npm ci --ignore-scripts --omit-dev\n\nRUN sh /replace_open.sh\n\nRUN rm /replace_open.sh\n\nENTRYPOINT [\"node\", \"dist/index.js\"]",
        "base_docker_image": "node:22.12-alpine",
        "forks": 2985,
        "stars": 28753,
        "watchers": 208,
        "last_commit": "2025-03-31T15:41:32Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Google Maps": {
        "name": "Google Maps",
        "repo_url": "https://github.com/modelcontextprotocol/servers/tree/main/src/google-maps",
        "type": "reference",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.0.1",
                "@types/node-fetch": "^2.6.12",
                "node-fetch": "^3.3.2"
            },
            "devDependencies": {
                "shx": "^0.3.4",
                "typescript": "^5.6.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.12-alpine AS builder\n\n# Must be entire project because `prepare` script is run during `npm install` and requires all files.\nCOPY src/google-maps /app\nCOPY tsconfig.json /tsconfig.json\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nRUN --mount=type=cache,target=/root/.npm-production npm ci --ignore-scripts --omit-dev\n\nFROM node:22-alpine AS release\n\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\nENV NODE_ENV=production\n\nWORKDIR /app\n\nRUN npm ci --ignore-scripts --omit-dev\n\nENTRYPOINT [\"node\", \"dist/index.js\"]",
        "base_docker_image": "node:22.12-alpine",
        "forks": 2985,
        "stars": 28753,
        "watchers": 208,
        "last_commit": "2025-03-31T15:41:32Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Google Tasks": {
        "name": "Google Tasks",
        "repo_url": "https://github.com/zcaceres/gtasks-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@google-cloud/local-auth": "^3.0.1",
                "@modelcontextprotocol/sdk": "1.0.1",
                "googleapis": "^144.0.0"
            },
            "devDependencies": {
                "@types/node": "^22.9.3",
                "shx": "^0.3.4",
                "typescript": "^5.6.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Stage 1: Build the TypeScript project\nFROM node:18-alpine AS builder\n\n# Set the working directory\nWORKDIR /app\n\n# Copy package.json and package-lock.json\nCOPY package.json package-lock.json ./\n\n# Install dependencies\nRUN npm install --ignore-scripts\n\n# Copy the rest of the application code\nCOPY . .\n\n# Build the application\nRUN npm run build\n\n# Stage 2: Create the final image for running the app\nFROM node:18-alpine\n\n# Set the working directory\nWORKDIR /app\n\n# Copy built files from the builder stage\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package-lock.json /app\n\n# Install only production dependencies\nRUN npm ci --omit=dev\n\n# Set the command to run the app\nCMD [\"node\", \"dist/index.js\"]\n",
        "base_docker_image": "node:18-alpine",
        "forks": 9,
        "stars": 29,
        "watchers": 2,
        "last_commit": "2025-02-02T19:25:00Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Grafana": {
        "name": "Grafana",
        "repo_url": "https://github.com/grafana/mcp-grafana",
        "type": "official",
        "language_stack": [
            "Go"
        ],
        "package_manager": [
            "go modules"
        ],
        "dependencies_file": "go.mod",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Build stage\nFROM golang:1.24-bullseye AS builder\n\n# Set the working directory\nWORKDIR /app\n\n# Copy go.mod and go.sum files\nCOPY go.mod go.sum ./\n\n# Download dependencies\nRUN go mod download\n\n# Copy the source code\nCOPY . .\n\n# Build the application\nRUN go build -o mcp-grafana ./cmd/mcp-grafana\n\n# Final stage\nFROM debian:bullseye-slim\n\n# Install ca-certificates for HTTPS requests\nRUN apt-get update && apt-get install -y ca-certificates && rm -rf /var/lib/apt/lists/*\n\n# Create a non-root user\nRUN useradd -r -u 1000 -m mcp-grafana\n\n# Set the working directory\nWORKDIR /app\n\n# Copy the binary from the builder stage\nCOPY --from=builder --chown=1000:1000 /app/mcp-grafana /app/\n\n# Use the non-root user\nUSER mcp-grafana\n\n# Expose the port the app runs on\nEXPOSE 8000\n\n# Run the application\nENTRYPOINT [\"/app/mcp-grafana\", \"--transport\", \"sse\", \"--sse-address\", \"0.0.0.0:8000\"]\n",
        "base_docker_image": "golang:1.24-bullseye",
        "forks": 18,
        "stars": 250,
        "watchers": 109,
        "last_commit": "2025-03-26T20:31:16Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for grafana/mcp-grafana: 403; ClosedIssuesError: API error (closed issues) for grafana/mcp-grafana: 403"
    },
    "GraphQL Schema": {
        "name": "GraphQL Schema",
        "repo_url": "https://github.com/hannesj/mcp-graphql-schema",
        "type": "community",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 6,
        "watchers": 1,
        "last_commit": "2025-03-13T10:08:02Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search; FileListAnalysisError: Empty file list"
    },
    "Graphlit": {
        "name": "Graphlit",
        "repo_url": "https://github.com/graphlit/graphlit-mcp-server",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.6.0",
                "graphlit-client": "^1.0.20250327001"
            },
            "devDependencies": {
                "@types/mime-types": "^2.1.4",
                "typescript": "^5.4.5"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\nFROM node:lts-alpine\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Install app dependencies\nCOPY package*.json ./\nRUN npm install --production --ignore-scripts\n\n# Copy app source code\nCOPY . .\n\n# Build the project\nRUN npm run build\n\n# Expose port if needed (adjust if your server listens on a port)\n# EXPOSE 3000\n\n# Start the server\nCMD [\"node\", \"build/index.js\"]\n",
        "base_docker_image": "node:lts-alpine",
        "forks": 15,
        "stars": 119,
        "watchers": 1,
        "last_commit": "2025-03-31T19:56:20Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for graphlit/graphlit-mcp-server: 403; ClosedIssuesError: API error (closed issues) for graphlit/graphlit-mcp-server: 403"
    },
    "GreptimeDB": {
        "name": "GreptimeDB",
        "repo_url": "https://github.com/GreptimeTeam/greptimedb-mcp-server",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.0.0",
                "mysql-connector-python>=9.1.0",
                "pyyaml>=6.0.2"
            ],
            "devDependencies": [
                "pyright",
                "black",
                "flake8",
                "pytest",
                "pytest-asyncio",
                "pytest-cov"
            ]
        },
        "has_dockerfile": false,
        "forks": 2,
        "stars": 12,
        "watchers": 6,
        "last_commit": "2025-03-28T01:42:40Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for GreptimeTeam/greptimedb-mcp-server: 403; ClosedIssuesError: API error (closed issues) for GreptimeTeam/greptimedb-mcp-server: 403"
    },
    "HDW LinkedIn": {
        "name": "HDW LinkedIn",
        "repo_url": "https://github.com/horizondatawave/hdw-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^0.6.0",
                "dotenv": "^16.4.7",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@types/node": "^20.17.23",
                "typescript": "^5.8.2"
            }
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 9,
        "watchers": 0,
        "last_commit": "2025-03-23T12:21:13Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Heurist Mesh Agent": {
        "name": "Heurist Mesh Agent",
        "repo_url": "https://github.com/heurist-network/heurist-mesh-mcp-server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "anyio>=4.5",
                "click>=8.1.0",
                "httpx>=0.27",
                "mcp",
                "fastapi>=0.104.0",
                "uvicorn>=0.24.0",
                "pydantic>=2.0.0",
                "aiohttp>=3.9.0",
                "python-dotenv>=1.0.0",
                "requests>=2.28.0",
                "colorlog>=6.7.0"
            ],
            "devDependencies": [
                "pyright>=1.1.378",
                "pytest>=8.3.3",
                "ruff>=0.6.9",
                "pytest-asyncio>=0.23.0"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Use a Python image with uv pre-installed\nFROM ghcr.io/astral-sh/uv:python3.10-bookworm-slim\n\n# Set the working directory\nWORKDIR /app\n\n# Copy dependency files first (for better caching)\nCOPY uv.lock pyproject.toml README.md ./\n\n# Install dependencies with caching\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    uv pip install --system .\n\n# Copy the rest of the application files\nCOPY . .\n\n# Set the link mode to copy and compile bytecode\nENV UV_LINK_MODE=copy\nENV UV_COMPILE_BYTECODE=1\n\n# Default environment variables\nENV PORT=8000\nENV TRANSPORT=sse\n\n# Use ENTRYPOINT with sh -c to allow variable expansion\nENTRYPOINT [\"sh\", \"-c\", \"uv run mesh-tool-server --transport ${TRANSPORT} --port ${PORT}\"]",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.10-bookworm-slim",
        "forks": 6,
        "stars": 24,
        "watchers": 1,
        "last_commit": "2025-03-23T20:27:39Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Higress MCP Server Hosting": {
        "name": "Higress MCP Server Hosting",
        "repo_url": "https://github.com/alibaba/higress/tree/main/plugins/wasm-go/mcp-servers",
        "type": "framework",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Single stage build using pre-built WASM binary\nFROM scratch\n\nARG SERVER_NAME=quark-search\n\nWORKDIR /\n\n# Copy the pre-built WASM binary from local build\nCOPY ${SERVER_NAME}/main.wasm /plugin.wasm\n\n# Metadata\nLABEL org.opencontainers.image.title=\"${SERVER_NAME}\"\nLABEL org.opencontainers.image.description=\"Higress MCP Server - ${SERVER_NAME}\"\nLABEL org.opencontainers.image.source=\"https://github.com/alibaba/higress\"\n\n# The WASM binary is the only artifact in the image\n",
        "base_docker_image": "scratch",
        "forks": 598,
        "stars": 4241,
        "watchers": 50,
        "last_commit": "2025-04-01T07:33:30Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for alibaba/higress: 403; ClosedIssuesError: API error (closed issues) for alibaba/higress: 403"
    },
    "Holaspirit": {
        "name": "Holaspirit",
        "repo_url": "https://github.com/syucream/holaspirit-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.0.4",
                "@types/node": "^20.10.3",
                "dotenv": "^16.4.7",
                "holaspirit-client-typescript-fetch": "^0.0.2-202503270130",
                "typescript": "^5.3.2",
                "zod": "^3.22.4",
                "zod-to-json-schema": "^3.22.4"
            },
            "devDependencies": {
                "@typescript-eslint/eslint-plugin": "^6.19.0",
                "@typescript-eslint/parser": "^6.19.0",
                "eslint": "^8.17.0",
                "eslint-config-prettier": "^9.1.0",
                "prettier": "^3.2.2",
                "shx": "^0.3.4",
                "ts-node": "^10.9.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:20-slim AS builder\n\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nRUN npm run build\n\nFROM node:20-slim AS runner\n\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install --production\nCOPY --from=builder /app/dist ./dist\n\nEXPOSE 3000\nCMD [\"npm\", \"start\"] ",
        "base_docker_image": "node:20-slim",
        "forks": 2,
        "stars": 1,
        "watchers": 1,
        "last_commit": "2025-03-30T08:55:40Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": true,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Hologres": {
        "name": "Hologres",
        "repo_url": "https://github.com/aliyun/alibabacloud-hologres-mcp-server",
        "type": "official",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 11,
        "watchers": 2,
        "last_commit": "2025-03-24T04:23:28Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for aliyun/alibabacloud-hologres-mcp-server: 403; ClosedIssuesError: API error (closed issues) for aliyun/alibabacloud-hologres-mcp-server: 403; FileListAnalysisError: Empty file list"
    },
    "Home Assistant": {
        "name": "Home Assistant",
        "repo_url": "https://github.com/voska/hass-mcp",
        "type": "community",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 24,
        "watchers": 1,
        "last_commit": "2025-03-22T15:15:45Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search; FileListAnalysisError: Empty file list"
    },
    "HubSpot": {
        "name": "HubSpot",
        "repo_url": "https://github.com/buryhuang/mcp-hubspot",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.4.1",
                "hubspot-api-client>=11.1.0",
                "python-dotenv>=1.0.1"
            ],
            "devDependencies": [
                "pyright>=1.1.389"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Use Python base image\nFROM python:3.10-slim-bookworm\n\n# Install the project into `/app`\nWORKDIR /app\n\n# Copy the entire project\nCOPY . /app\n\n# Install the package\nRUN pip install --no-cache-dir .\n\n# Run the server\nENTRYPOINT [\"mcp-server-hubspot\"] ",
        "base_docker_image": "python:3.10-slim-bookworm",
        "forks": 15,
        "stars": 31,
        "watchers": 2,
        "last_commit": "2025-03-24T04:48:55Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "HuggingFace Spaces": {
        "name": "HuggingFace Spaces",
        "repo_url": "https://github.com/evalstate/mcp-hfspace",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@gradio/client": "^1.8.0",
                "@modelcontextprotocol/sdk": "0.6.0",
                "mime": "^4.0.6",
                "minimist": "^1.2.8"
            },
            "devDependencies": {
                "@eslint/js": "9.19.0",
                "@types/minimist": "^1.2.5",
                "@types/node": "^20.11.24",
                "@typescript-eslint/eslint-plugin": "latest",
                "@typescript-eslint/parser": "latest",
                "eslint": "9.19.0",
                "globals": "15.14.0",
                "prettier": "latest",
                "rimraf": "^5.0.1",
                "typescript": "^5.3.3",
                "typescript-eslint": "8.21.0",
                "vitest": "^2.1.8"
            }
        },
        "has_dockerfile": false,
        "forks": 22,
        "stars": 170,
        "watchers": 3,
        "last_commit": "2025-03-25T14:29:46Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Hyperbrowser": {
        "name": "Hyperbrowser",
        "repo_url": "https://github.com/hyperbrowserai/mcp",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@hyperbrowser/sdk": "^0.39.0",
                "@modelcontextprotocol/sdk": "^1.6.0",
                "ajv": "^8.17.1",
                "axios": "^1.8.3",
                "dotenv": "^16.4.7",
                "express": "^4.21.2"
            },
            "devDependencies": {
                "@types/express": "^5.0.0",
                "@types/node": "^16.11.7",
                "openai": "^4.87.3",
                "ts-node": "^10.9.2",
                "typescript": "^4.5.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\nFROM node:lts-alpine\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Install app dependencies\nCOPY package*.json ./\n\n# Use npm ci if package-lock.json exists\nRUN npm install --ignore-scripts\n\n# Bundle app source\nCOPY . .\n\n# Build the project\nRUN npm run build\n\n# Expose port if necessary (assuming the server listens on a port, if not, remove it)\n# EXPOSE 3000\n\n# Run the server\nCMD [\"node\", \"dist/server.js\"]\n",
        "base_docker_image": "node:lts-alpine",
        "forks": 7,
        "stars": 172,
        "watchers": 2,
        "last_commit": "2025-03-21T22:29:28Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for hyperbrowserai/mcp: 403; ClosedIssuesError: API error (closed issues) for hyperbrowserai/mcp: 403"
    },
    "Hyperliquid": {
        "name": "Hyperliquid",
        "repo_url": "https://github.com/mektigboy/server-hyperliquid",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm",
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.6.1",
                "@nktkas/hyperliquid": "^0.16.0",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@types/node": "^22.13.9",
                "shx": "^0.3.4",
                "typescript": "^5.8.2"
            }
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 10,
        "watchers": 1,
        "last_commit": "2025-03-06T16:29:54Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "IBM wxflows": {
        "name": "IBM wxflows",
        "repo_url": "https://github.com/IBM/wxflows/tree/main/examples/mcp/javascript",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.6.0",
                "@wxflows/sdk": "^0.2.0-beta.6",
                "dotenv": "^16.4.5"
            },
            "devDependencies": {
                "@types/node": "^20.11.24",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 20,
        "stars": 68,
        "watchers": 9,
        "last_commit": "2025-03-27T12:19:39Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for IBM/wxflows: 403; ClosedIssuesError: API error (closed issues) for IBM/wxflows: 403"
    },
    "Image Generation": {
        "name": "Image Generation",
        "repo_url": "https://github.com/GongRzhe/Image-Generation-MCP-Server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.5.0",
                "axios": "^1.7.9",
                "typescript": "^5.7.3",
                "@types/node": "^22.13.5"
            },
            "devDependencies": {}
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 12,
        "watchers": 1,
        "last_commit": "2025-03-25T07:03:51Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Inbox Zero": {
        "name": "Inbox Zero",
        "repo_url": "https://github.com/elie222/inbox-zero/tree/main/apps/mcp-server",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript",
            "Node.js"
        ],
        "package_manager": [
            "npm",
            "yarn"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.8.0",
                "zod": "3.24.2"
            },
            "devDependencies": {
                "@types/node": "22.13.14",
                "typescript": "5.8.2"
            }
        },
        "has_dockerfile": false,
        "forks": 417,
        "stars": 3777,
        "watchers": 11,
        "last_commit": "2025-03-31T22:30:49Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for elie222/inbox-zero: 403; ClosedIssuesError: API error (closed issues) for elie222/inbox-zero: 403"
    },
    "InfluxDB": {
        "name": "InfluxDB",
        "repo_url": "https://github.com/idoru/influxdb-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.6.1",
                "node-fetch": "^3.3.2",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@jest/globals": "^29.7.0",
                "@types/dockerode": "^3.3.23",
                "@types/jest": "^29.5.5",
                "@types/node": "^22.13.10",
                "dockerode": "^4.0.0",
                "jest": "^29.7.0",
                "ts-jest": "^29.1.1",
                "typescript": "^5.8.2",
                "wait-for-expect": "^3.0.2"
            }
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 3,
        "watchers": 1,
        "last_commit": "2025-03-11T19:11:08Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for idoru/influxdb-mcp-server: 403; ClosedIssuesError: API error (closed issues) for idoru/influxdb-mcp-server: 403"
    },
    "Inkeep": {
        "name": "Inkeep",
        "repo_url": "https://github.com/inkeep/mcp-server-python",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp[cli]>=1.3.0",
                "openai>=1.66.3",
                "pydantic-settings>=2.8.1"
            ],
            "devDependencies": [
                "black>=25.1.0",
                "ipython>=8.34.0",
                "isort>=6.0.1"
            ]
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 4,
        "watchers": 2,
        "last_commit": "2025-03-26T20:35:03Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for inkeep/mcp-server-python: 403; ClosedIssuesError: API error (closed issues) for inkeep/mcp-server-python: 403"
    },
    "Inoyu": {
        "name": "Inoyu",
        "repo_url": "https://github.com/sergehuber/inoyu-mcp-unomi-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.6.0",
                "axios": "^1.7.8",
                "dotenv": "^16.4.5"
            },
            "devDependencies": {
                "@types/node": "^20.11.24",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 2,
        "stars": 4,
        "watchers": 1,
        "last_commit": "2024-12-03T09:11:26Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for sergehuber/inoyu-mcp-unomi-server: 403; ClosedIssuesError: API error (closed issues) for sergehuber/inoyu-mcp-unomi-server: 403"
    },
    "Integration App": {
        "name": "Integration App",
        "repo_url": "https://github.com/integration-app/mcp-server",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@integration-app/sdk": "^1.5.1",
                "@modelcontextprotocol/sdk": "^1.1.1"
            },
            "devDependencies": {
                "@types/eslint": "^8.56.12",
                "@types/node": "^22.10.1",
                "@typescript-eslint/eslint-plugin": "^7.18.0",
                "@typescript-eslint/parser": "^7.18.0",
                "eslint": "^8.57.1",
                "eslint-config-prettier": "^9.1.0",
                "eslint-plugin-prettier": "^5.2.1",
                "eslint-plugin-unused-imports": "^3.0.0",
                "prettier": "^3.3.3",
                "tsx": "^4.19.2",
                "typescript": "^5.7.2"
            }
        },
        "has_dockerfile": false,
        "forks": 2,
        "stars": 14,
        "watchers": 2,
        "last_commit": "2025-01-15T22:51:56Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for integration-app/mcp-server: 403; ClosedIssuesError: API error (closed issues) for integration-app/mcp-server: 403"
    },
    "Intercom": {
        "name": "Intercom",
        "repo_url": "https://github.com/raoulbia-ai/mcp-server-for-intercom",
        "type": "community",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 1,
        "watchers": 1,
        "last_commit": "2025-03-14T11:29:27Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for raoulbia-ai/mcp-server-for-intercom: 403; ClosedIssuesError: API error (closed issues) for raoulbia-ai/mcp-server-for-intercom: 403; FileListAnalysisError: Empty file list"
    },
    "JDBC": {
        "name": "JDBC",
        "repo_url": "https://github.com/quarkiverse/quarkus-mcp-servers/tree/main/jdbc",
        "type": "community",
        "language_stack": [
            "Java"
        ],
        "package_manager": [
            "maven"
        ],
        "dependencies_file": "pom.xml",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 17,
        "stars": 61,
        "watchers": 2,
        "last_commit": "2025-03-29T07:06:44Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for quarkiverse/quarkus-mcp-servers: 403; ClosedIssuesError: API error (closed issues) for quarkiverse/quarkus-mcp-servers: 403"
    },
    "JSON": {
        "name": "JSON",
        "repo_url": "https://github.com/GongRzhe/JSON-MCP-Server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.0.4",
                "jsonpath": "^1.1.1",
                "node-fetch": "^3.3.0",
                "zod": "^3.21.4"
            },
            "devDependencies": {
                "@types/jsonpath": "^0.2.0",
                "@types/node": "^18.0.0",
                "typescript": "^5.0.0"
            }
        },
        "has_dockerfile": false,
        "forks": 5,
        "stars": 25,
        "watchers": 1,
        "last_commit": "2025-03-13T00:03:33Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for GongRzhe/JSON-MCP-Server: 403; ClosedIssuesError: API error (closed issues) for GongRzhe/JSON-MCP-Server: 403"
    },
    "JavaFX": {
        "name": "JavaFX",
        "repo_url": "https://github.com/mcpso/mcp-server-javafx",
        "type": "community",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "RepoInfoError: API error (repo info) for mcpso/mcp-server-javafx: 404; OpenIssuesError: API error (open issues) for mcpso/mcp-server-javafx: 403; ClosedIssuesError: API error (closed issues) for mcpso/mcp-server-javafx: 403; FileListAnalysisError: Empty file list"
    },
    "JetBrains": {
        "name": "JetBrains",
        "repo_url": "https://github.com/JetBrains/mcp-jetbrains",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.7.0",
                "node-fetch": "^3.3.2"
            },
            "devDependencies": {
                "@types/node": "^22.13.13",
                "shx": "^0.4.0",
                "typescript": "^5.8.2"
            }
        },
        "has_dockerfile": false,
        "forks": 32,
        "stars": 358,
        "watchers": 5,
        "last_commit": "2025-03-26T13:31:11Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for JetBrains/mcp-jetbrains: 403; ClosedIssuesError: API error (closed issues) for JetBrains/mcp-jetbrains: 403"
    },
    "Kagi Search": {
        "name": "Kagi Search",
        "repo_url": "https://github.com/kagisearch/kagimcp",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "kagiapi~=0.2.1",
                "mcp[cli]~=1.6.0",
                "pydantic~=2.10.3"
            ],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use a Python image with uv pre-installed\nFROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv\n\n# Install the project into /app\nWORKDIR /app\n\n# Enable bytecode compilation\nENV UV_COMPILE_BYTECODE=1\n\n# Copy the lock file and pyproject.toml for dependency management\nCOPY uv.lock pyproject.toml /app/\n\n# Install the project's dependencies using the lockfile and settings\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    uv sync --frozen --no-install-project --no-dev --no-editable\n\n# Then, add the rest of the project source code and install it\nADD . /app\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    uv sync --frozen --no-dev --no-editable\n\n# Create the final image\nFROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim\n\nWORKDIR /app\n\n# Copy the virtual environment directly\nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\n\n# Create app user\nRUN useradd -m app\n\n# Place executables in the environment at the front of the path\nENV PATH=\"/app/.venv/bin:$PATH\"\n\n# Environment variable for the Kagi API key\nENV KAGI_API_KEY=YOUR_API_KEY_HERE\n\n# Switch to non-root user\nUSER app\n\n# Run the MCP server\nENTRYPOINT [\"uv\", \"run\", \"kagimcp\"]\n",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
        "forks": 9,
        "stars": 48,
        "watchers": 7,
        "last_commit": "2025-03-29T23:20:11Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for kagisearch/kagimcp: 403; ClosedIssuesError: API error (closed issues) for kagisearch/kagimcp: 403"
    },
    "Keboola": {
        "name": "Keboola",
        "repo_url": "https://github.com/keboola/keboola-mcp-server",
        "type": "official",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 3,
        "stars": 9,
        "watchers": 19,
        "last_commit": "2025-04-01T07:54:30Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for keboola/keboola-mcp-server: 403; ClosedIssuesError: API error (closed issues) for keboola/keboola-mcp-server: 403; FileListAnalysisError: Empty file list"
    },
    "Keycloak MCP": {
        "name": "Keycloak MCP",
        "repo_url": "https://github.com/ChristophEnglisch/keycloak-model-context-protocol",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.5.0",
                "@keycloak/keycloak-admin-client": "^22.0.5",
                "zod": "^3.22.4"
            },
            "devDependencies": {
                "@types/node": "^22",
                "shx": "^0.3.4",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 4,
        "stars": 15,
        "watchers": 1,
        "last_commit": "2025-02-09T21:21:14Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for ChristophEnglisch/keycloak-model-context-protocol: 403; ClosedIssuesError: API error (closed issues) for ChristophEnglisch/keycloak-model-context-protocol: 403"
    },
    "KiCad MCP": {
        "name": "KiCad MCP",
        "repo_url": "https://github.com/lamaalrajih/kicad-mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "requirements.txt",
        "packages": {
            "dependencies": [
                "mcp",
                "httpx",
                "pytest",
                "pandas",
                "kicad-python"
            ],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 3,
        "stars": 21,
        "watchers": 1,
        "last_commit": "2025-03-22T13:41:13Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for lamaalrajih/kicad-mcp: 403; ClosedIssuesError: API error (closed issues) for lamaalrajih/kicad-mcp: 403"
    },
    "Kibela": {
        "name": "Kibela",
        "repo_url": "https://github.com/kiwamizamurai/mcp-kibela-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.0.1",
                "graphql-request": "^6.1.0",
                "express": "^4.18.2",
                "cors": "^2.8.5"
            },
            "devDependencies": {
                "@types/node": "^22",
                "@types/express": "^4.17.21",
                "@types/cors": "^2.8.17",
                "shx": "^0.3.4",
                "typescript": "^5.6.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use a node image with version 22.x for building\nFROM node:22-alpine AS builder\n\n# Create app directory\nWORKDIR /app\n\n# Copy source code and package.json into the app directory\nCOPY package.json tsconfig.json ./\nCOPY src ./src\n\n# Install dependencies and build the application\nRUN --mount=type=cache,target=/root/.npm npm install --ignore-scripts\nRUN npm run build\n\n# Use a smaller node image for running the app\nFROM node:22-alpine\n\n# Set working directory\nWORKDIR /app\n\n# Copy built application from the builder stage\nCOPY --from=builder /app/dist ./dist\nCOPY package.json ./\n\n# Install only production dependencies\nRUN npm install --production\n\n# Set environment variables\nENV KIBELA_TEAM=your-team\nENV KIBELA_TOKEN=your-token\n\n# Expose the port the app runs on\nEXPOSE 3000\n\n# Command to run the executable\nENTRYPOINT [\"node\", \"dist/src/index.js\"]\n",
        "base_docker_image": "node:22-alpine",
        "forks": 2,
        "stars": 1,
        "watchers": 1,
        "last_commit": "2025-02-11T10:26:37Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for kiwamizamurai/mcp-kibela-server: 403; ClosedIssuesError: API error (closed issues) for kiwamizamurai/mcp-kibela-server: 403"
    },
    "Kubernetes": {
        "name": "Kubernetes",
        "repo_url": "https://github.com/Flux159/mcp-server-kubernetes",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@kubernetes/client-node": "0.20.0",
                "@modelcontextprotocol/sdk": "1.7.0",
                "js-yaml": "4.1.0",
                "yaml": "2.7.0",
                "zod": "3.23.8",
                "express": "4.21.2"
            },
            "devDependencies": {
                "@types/express": "5.0.1",
                "@types/js-yaml": "4.0.9",
                "@types/node": "22.9.3",
                "shx": "0.3.4",
                "typescript": "5.6.2",
                "vitest": "2.1.9"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22-bookworm-slim AS base\nWORKDIR /usr/local/app\nCOPY package.json .\n\n# Installing kubectl and gcloud with gke-gcloud-auth-plugin for accessing GKE\nRUN apt-get update && apt-get install -y curl\nRUN apt-get install -y apt-transport-https ca-certificates curl gnupg\n# Add k8s apt repository\nRUN curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg\nRUN chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg\nRUN echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list\nRUN chmod 644 /etc/apt/sources.list.d/kubernetes.list\n# Add gcloud apt repository\nRUN curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg\nRUN echo \"deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list\nRUN apt-get update\nRUN apt-get install -y kubectl google-cloud-cli google-cloud-cli-gke-gcloud-auth-plugin\n\n# Build the typescript code\nFROM base AS dependencies\nRUN npm install\nCOPY tsconfig.json .\nCOPY src ./src\nRUN npm run build\n\n# Create the final production-ready image\nFROM base AS release\nRUN useradd -m appuser && chown -R appuser /usr/local/app\nENV NODE_ENV=production\nRUN npm install --only=production\nCOPY --from=dependencies /usr/local/app/dist ./dist\nUSER appuser\nCMD [\"node\", \"dist/index.js\"]\n",
        "base_docker_image": "node:22-bookworm-slim",
        "forks": 29,
        "stars": 265,
        "watchers": 6,
        "last_commit": "2025-03-28T18:09:05Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for Flux159/mcp-server-kubernetes: 403; ClosedIssuesError: API error (closed issues) for Flux159/mcp-server-kubernetes: 403"
    },
    "Kubernetes and OpenShift": {
        "name": "Kubernetes and OpenShift",
        "repo_url": "https://github.com/manusa/kubernetes-mcp-server",
        "type": "community",
        "language_stack": [
            "Go"
        ],
        "package_manager": [
            "go"
        ],
        "dependencies_file": "go.mod",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM golang:latest AS builder\n\nWORKDIR /app\n\nCOPY ./ ./\nRUN make build\n\nFROM registry.access.redhat.com/ubi9/ubi-minimal:latest\nWORKDIR /app\nCOPY --from=builder /app/kubernetes-mcp-server /app/kubernetes-mcp-server\nENTRYPOINT [\"/app/kubernetes-mcp-server\", \"--sse-port\", \"8080\"]\n\nEXPOSE 8080\n",
        "base_docker_image": "golang:latest",
        "forks": 13,
        "stars": 51,
        "watchers": 3,
        "last_commit": "2025-04-01T07:11:56Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for manusa/kubernetes-mcp-server: 403; ClosedIssuesError: API error (closed issues) for manusa/kubernetes-mcp-server: 403"
    },
    "LINE": {
        "name": "LINE",
        "repo_url": "https://github.com/amornpan/py-mcp-line",
        "type": "community",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 7,
        "watchers": 1,
        "last_commit": "2025-03-01T04:23:05Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for amornpan/py-mcp-line: 403; ClosedIssuesError: API error (closed issues) for amornpan/py-mcp-line: 403; FileListAnalysisError: Empty file list"
    },
    "Langflow-DOC-QA-SERVER": {
        "name": "Langflow-DOC-QA-SERVER",
        "repo_url": "https://github.com/GongRzhe/Langflow-DOC-QA-SERVER",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.6.0",
                "axios": "^1.7.9"
            },
            "devDependencies": {
                "@types/node": "^20.11.24",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 4,
        "watchers": 1,
        "last_commit": "2025-03-11T07:10:11Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for GongRzhe/Langflow-DOC-QA-SERVER: 403; ClosedIssuesError: API error (closed issues) for GongRzhe/Langflow-DOC-QA-SERVER: 403"
    },
    "Langfuse Prompt Management": {
        "name": "Langfuse Prompt Management",
        "repo_url": "https://github.com/langfuse/mcp-server-langfuse",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.5.0",
                "langfuse": "^3.35.2",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@types/node": "^22.13.4",
                "typescript": "^5.7.3"
            }
        },
        "has_dockerfile": false,
        "forks": 6,
        "stars": 38,
        "watchers": 2,
        "last_commit": "2025-02-16T14:03:25Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Lightdash": {
        "name": "Lightdash",
        "repo_url": "https://github.com/syucream/lightdash-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.0.4",
                "@types/express": "^5.0.0",
                "@types/node": "^22.10.3",
                "dotenv": "^16.4.7",
                "express": "^4.21.2",
                "lightdash-client-typescript-fetch": "^0.0.4-202503270130",
                "typescript": "^5.7.2",
                "typescript-eslint": "^8.19.0",
                "zod": "^3.24.1",
                "zod-to-json-schema": "^3.24.1"
            },
            "devDependencies": {
                "@typescript-eslint/eslint-plugin": "^8.19.0",
                "@typescript-eslint/parser": "^8.19.0",
                "eslint": "^9.17.0",
                "eslint-config-prettier": "^9.1.0",
                "prettier": "^3.4.2",
                "shx": "^0.3.4",
                "ts-node": "^10.9.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:20-slim AS builder\n\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nRUN npm run build\n\nFROM node:20-slim AS runner\n\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install --production\nCOPY --from=builder /app/dist ./dist\n\nEXPOSE 3000\nCMD [\"npm\", \"start\"] ",
        "base_docker_image": "node:20-slim",
        "forks": 2,
        "stars": 11,
        "watchers": 1,
        "last_commit": "2025-03-26T16:47:29Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": true,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for syucream/lightdash-mcp-server: 403; ClosedIssuesError: API error (closed issues) for syucream/lightdash-mcp-server: 403"
    },
    "Linear": {
        "name": "Linear",
        "repo_url": "https://github.com/geropl/linear-mcp-go",
        "type": "community",
        "language_stack": [
            "Go"
        ],
        "package_manager": [
            "go modules"
        ],
        "dependencies_file": "go.mod",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 3,
        "watchers": 1,
        "last_commit": "2025-03-30T14:40:09Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for geropl/linear-mcp-go: 403; ClosedIssuesError: API error (closed issues) for geropl/linear-mcp-go: 403"
    },
    "Lingo.dev": {
        "name": "Lingo.dev",
        "repo_url": "https://github.com/lingodotdev/lingo.dev/blob/main/mcp.md",
        "type": "official",
        "language_stack": [
            "JavaScript",
            "TypeScript"
        ],
        "package_manager": [
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@changesets/changelog-github": "0.5.0",
                "@changesets/cli": "2.27.10"
            },
            "devDependencies": {
                "@commitlint/cli": "19.6.1",
                "@commitlint/config-conventional": "19.6.0",
                "commitlint": "19.7.1",
                "husky": "9.1.7",
                "turbo": "2.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 69,
        "stars": 1435,
        "watchers": 3,
        "last_commit": "2025-03-31T20:48:48Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "LlamaCloud": {
        "name": "LlamaCloud",
        "repo_url": "https://github.com/run-llama/mcp-server-llamacloud",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.7.0",
                "llamaindex": "^0.9.11"
            },
            "devDependencies": {
                "@changesets/cli": "^2.28.1",
                "@eslint/js": "^9.22.0",
                "@types/node": "^22.9.3",
                "eslint": "^9.22.0",
                "eslint-config-prettier": "^9.1.0",
                "globals": "^15.12.0",
                "prettier": "^3.4.2",
                "prettier-plugin-organize-imports": "^4.1.0",
                "typescript": "^5.6.2",
                "typescript-eslint": "^8.18.0"
            }
        },
        "has_dockerfile": false,
        "forks": 10,
        "stars": 60,
        "watchers": 5,
        "last_commit": "2025-03-24T14:47:40Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for run-llama/mcp-server-llamacloud: 403; ClosedIssuesError: API error (closed issues) for run-llama/mcp-server-llamacloud: 403"
    },
    "Logfire": {
        "name": "Logfire",
        "repo_url": "https://github.com/pydantic/logfire-mcp",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "logfire>=3.7.1",
                "mcp[cli]>=1.4.1"
            ],
            "devDependencies": [
                "ruff"
            ]
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 35,
        "watchers": 3,
        "last_commit": "2025-03-26T16:58:57Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "MCP Badges": {
        "name": "MCP Badges",
        "repo_url": "https://github.com/mcpx-dev/mcp-badges",
        "type": "resource",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 12,
        "watchers": 2,
        "last_commit": "2025-01-03T00:31:26Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for mcpx-dev/mcp-badges: 403; ClosedIssuesError: API error (closed issues) for mcpx-dev/mcp-badges: 403"
    },
    "MCP Compass": {
        "name": "MCP Compass",
        "repo_url": "https://github.com/liuyoshio/mcp-compass",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@liuyoshio/mcp-compass": "^1.0.7",
                "@modelcontextprotocol/sdk": "^1.0.3",
                "zod": "^3.24.1"
            },
            "devDependencies": {
                "@types/node": "^22.10.2",
                "typescript": "^5.7.2"
            }
        },
        "has_dockerfile": false,
        "forks": 5,
        "stars": 47,
        "watchers": 3,
        "last_commit": "2025-01-07T08:07:40Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for liuyoshio/mcp-compass: 403; ClosedIssuesError: API error (closed issues) for liuyoshio/mcp-compass: 403"
    },
    "MCP Create": {
        "name": "MCP Create",
        "repo_url": "https://github.com/tesla0225/mcp-create",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.0.0",
                "uuid": "^9.0.1",
                "zod": "^3.22.4"
            },
            "devDependencies": {
                "@types/node": "^20.10.0",
                "@types/uuid": "^9.0.8",
                "typescript": "^5.3.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# ビルドステージ\nFROM node:20-slim AS builder\n\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nRUN npm run build\n\n# 実行ステージ\nFROM node:20-slim\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    python3-minimal \\\n    python3-pip \\\n    curl \\\n    which && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    ln -sf /usr/bin/python3 /usr/bin/python && \\\n    npm install -g ts-node typescript\n\nENV PATH=\"/usr/local/bin:/usr/bin:/bin:${PATH}\"\nENV NODE_PATH=\"/app/node_modules\"\nENV PYTHONUNBUFFERED=1\n\nWORKDIR /app\nCOPY --from=builder /app/build ./build\nCOPY --from=builder /app/node_modules ./node_modules\n# package.jsonをコピーして\"type\": \"module\"設定を確実に継承\nCOPY --from=builder /app/package*.json ./\n\nRUN chmod +x build/index.js && \\\n    mkdir -p /tmp/mcp-create-servers && \\\n    chmod 777 /tmp/mcp-create-servers\n\nCMD [\"node\", \"build/index.js\"]",
        "base_docker_image": "node:20-slim",
        "forks": 6,
        "stars": 35,
        "watchers": 3,
        "last_commit": "2025-03-11T04:44:57Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for tesla0225/mcp-create: 403; ClosedIssuesError: API error (closed issues) for tesla0225/mcp-create: 403"
    },
    "MCP Installer": {
        "name": "MCP Installer",
        "repo_url": "https://github.com/anaisbetts/mcp-installer",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.0.1",
                "rimraf": "^6.0.1",
                "spawn-rx": "^4.0.0"
            },
            "devDependencies": {
                "shx": "^0.3.4",
                "ts-node": "^10.9.2",
                "typescript": "^5.6.3"
            }
        },
        "has_dockerfile": false,
        "forks": 97,
        "stars": 811,
        "watchers": 7,
        "last_commit": "2024-11-26T20:05:09Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for anaisbetts/mcp-installer: 403; ClosedIssuesError: API error (closed issues) for anaisbetts/mcp-installer: 403"
    },
    "MCP Servers Hub": {
        "name": "MCP Servers Hub",
        "repo_url": "https://github.com/apappascs/mcp-servers-hub",
        "type": "resource",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 14,
        "stars": 132,
        "watchers": 8,
        "last_commit": "2025-03-31T14:28:43Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for apappascs/mcp-servers-hub: 403; ClosedIssuesError: API error (closed issues) for apappascs/mcp-servers-hub: 403"
    },
    "MCP X Community": {
        "name": "MCP X Community",
        "repo_url": "https://x.com/i/communities/1861891349609603310",
        "type": "resource",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "error": "Could not parse GitHub URL"
    },
    "MCP-Framework": {
        "name": "MCP-Framework",
        "repo_url": "https://mcp-framework.com",
        "type": "framework",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "error": "Could not parse GitHub URL"
    },
    "MCPHub": {
        "name": "MCPHub",
        "repo_url": "https://github.com/Jeamee/MCPHub-Desktop",
        "type": "resource",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 15,
        "stars": 92,
        "watchers": 6,
        "last_commit": "2024-12-29T06:07:02Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for Jeamee/MCPHub-Desktop: 403; ClosedIssuesError: API error (closed issues) for Jeamee/MCPHub-Desktop: 403; FileListAnalysisError: Empty file list"
    },
    "MSSQL": {
        "name": "MSSQL",
        "repo_url": "https://github.com/JexinSam/mssql_mcp_server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "httpx>=0.28.1",
                "mcp[cli]>=1.0.0",
                "pyodbc>=5.2.0"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": false,
        "forks": 4,
        "stars": 9,
        "watchers": 1,
        "last_commit": "2025-01-31T06:39:51Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for JexinSam/mssql_mcp_server: 403; ClosedIssuesError: API error (closed issues) for JexinSam/mssql_mcp_server: 403"
    },
    "MSSQL-MCP": {
        "name": "MSSQL-MCP",
        "repo_url": "https://github.com/daobataotie/mssql-mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "requirements.txt",
        "packages": {
            "dependencies": [
                "pyodbc>=4.0.39",
                "pydantic>=2.0.0",
                "mcp>=0.1.0"
            ],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 13,
        "watchers": 1,
        "last_commit": "2025-03-18T03:36:52Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for daobataotie/mssql-mcp: 403; ClosedIssuesError: API error (closed issues) for daobataotie/mssql-mcp: 403"
    },
    "MSSQL-Python": {
        "name": "MSSQL-Python",
        "repo_url": "https://github.com/amornpan/py-mcp-mssql",
        "type": "community",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 2,
        "stars": 11,
        "watchers": 1,
        "last_commit": "2025-02-06T03:18:11Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for amornpan/py-mcp-mssql: 403; ClosedIssuesError: API error (closed issues) for amornpan/py-mcp-mssql: 403; FileListAnalysisError: Empty file list"
    },
    "Mailgun": {
        "name": "Mailgun",
        "repo_url": "https://github.com/mailgun/mailgun-mcp-server",
        "type": "official",
        "language_stack": [
            "JavaScript",
            "TypeScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.7.0",
                "js-yaml": "^4.1.0",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@jest/globals": "^29.0.0",
                "jest": "^29.0.0"
            }
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 8,
        "watchers": 11,
        "last_commit": "2025-03-20T14:48:57Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Make": {
        "name": "Make",
        "repo_url": "https://github.com/integromat/make-mcp-server",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.6.1"
            },
            "devDependencies": {
                "@jest/globals": "^29.7.0",
                "@types/node": "^22.13.10",
                "jest": "^29.7.0",
                "jest-fetch-mock": "^3.0.3",
                "ts-jest": "^29.2.6",
                "ts-node": "^10.9.2",
                "typescript": "^5.8.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22-alpine AS builder\n\nCOPY . /app\nCOPY tsconfig.json /tsconfig.json\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nFROM node:22-alpine AS release\n\nWORKDIR /app\n\nCOPY --from=builder /app/build /app/build\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\nENV NODE_ENV=production\n\nRUN npm ci --ignore-scripts --omit-dev\n\nENTRYPOINT [\"node\", \"build/index.js\"]",
        "base_docker_image": "node:22-alpine",
        "forks": 8,
        "stars": 48,
        "watchers": 7,
        "last_commit": "2025-03-16T05:04:30Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "MariaDB": {
        "name": "MariaDB",
        "repo_url": "https://github.com/abel9851/mcp-server-mariadb",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mariadb>=1.1.12",
                "mcp[cli]>=1.3.0",
                "mysql-connector-python>=9.2.0",
                "python-dotenv>=1.0.1"
            ],
            "devDependencies": [
                "pytest>=8.3.4"
            ]
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 5,
        "watchers": 1,
        "last_commit": "2025-03-26T17:34:21Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for abel9851/mcp-server-mariadb: 403; ClosedIssuesError: API error (closed issues) for abel9851/mcp-server-mariadb: 403"
    },
    "Markdownify": {
        "name": "Markdownify",
        "repo_url": "https://github.com/zcaceres/mcp-markdownify-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.0.1",
                "zod": "^3.24.1"
            },
            "devDependencies": {
                "@types/node": "^22.9.3",
                "bun": "^1.1.41",
                "sdk": "link:@types/modelcontextprotocol/sdk",
                "shx": "^0.3.4",
                "ts-jest": "^29.2.5",
                "typescript": "^5.6.2"
            }
        },
        "has_dockerfile": false,
        "forks": 90,
        "stars": 1148,
        "watchers": 6,
        "last_commit": "2025-01-24T14:22:44Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for zcaceres/mcp-markdownify-server: 403; ClosedIssuesError: API error (closed issues) for zcaceres/mcp-markdownify-server: 403"
    },
    "Maton": {
        "name": "Maton",
        "repo_url": "https://github.com/maton-ai/agent-toolkit/tree/main/modelcontextprotocol",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.4.1",
                "@maton/agent-toolkit": "latest",
                "colors": "^1.4.0"
            },
            "devDependencies": {
                "@eslint/compat": "^1.2.6",
                "@types/jest": "^29.5.14",
                "@types/node": "^22.13.4",
                "@typescript-eslint/eslint-plugin": "^8.24.1",
                "eslint-config-prettier": "^10.0.1",
                "eslint-plugin-import": "^2.31.0",
                "eslint-plugin-jest": "^28.11.0",
                "eslint-plugin-prettier": "^5.2.3",
                "globals": "^15.15.0",
                "jest": "^29.7.0",
                "prettier": "^3.5.1",
                "ts-jest": "^29.2.5",
                "ts-node": "^10.9.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.12-alpine AS builder\n\nCOPY modelcontextprotocol /app\nCOPY modelcontextprotocol/tsconfig.json /tsconfig.json\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nRUN --mount=type=cache,target=/root/.npm-production npm ci --ignore-scripts --omit-dev\n\nFROM node:22-alpine AS release\n\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\nENV NODE_ENV=production\n\nWORKDIR /app\n\nRUN npm ci --ignore-scripts --omit-dev\n\nENTRYPOINT [\"node\", \"dist/index.js\"]",
        "base_docker_image": "node:22.12-alpine",
        "forks": 0,
        "stars": 9,
        "watchers": 3,
        "last_commit": "2025-03-30T04:44:23Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for maton-ai/agent-toolkit: 403; ClosedIssuesError: API error (closed issues) for maton-ai/agent-toolkit: 403"
    },
    "Meilisearch": {
        "name": "Meilisearch",
        "repo_url": "https://github.com/meilisearch/meilisearch-mcp",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "meilisearch>=0.33.0",
                "mcp>=0.1.0",
                "httpx>=0.24.0",
                "pydantic>=2.0.0"
            ],
            "devDependencies": [
                "setuptools>=42",
                "pytest",
                "black"
            ]
        },
        "has_dockerfile": false,
        "forks": 6,
        "stars": 62,
        "watchers": 2,
        "last_commit": "2025-02-27T13:38:26Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Memory": {
        "name": "Memory",
        "repo_url": "https://github.com/modelcontextprotocol/servers/tree/main/src/memory",
        "type": "reference",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.0.1"
            },
            "devDependencies": {
                "@types/node": "^22",
                "shx": "^0.3.4",
                "typescript": "^5.6.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.12-alpine AS builder\n\nCOPY src/memory /app\nCOPY tsconfig.json /tsconfig.json\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nRUN --mount=type=cache,target=/root/.npm-production npm ci --ignore-scripts --omit-dev\n\nFROM node:22-alpine AS release\n\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\nENV NODE_ENV=production\n\nWORKDIR /app\n\nRUN npm ci --ignore-scripts --omit-dev\n\nENTRYPOINT [\"node\", \"dist/index.js\"]",
        "base_docker_image": "node:22.12-alpine",
        "forks": 2985,
        "stars": 28753,
        "watchers": 208,
        "last_commit": "2025-03-31T15:41:32Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Metoro": {
        "name": "Metoro",
        "repo_url": "https://github.com/metoro-io/metoro-mcp-server",
        "type": "official",
        "language_stack": [
            "Go"
        ],
        "package_manager": [
            "go modules"
        ],
        "dependencies_file": "go.mod",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 5,
        "stars": 30,
        "watchers": 2,
        "last_commit": "2025-03-31T16:23:30Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Milvus": {
        "name": "Milvus",
        "repo_url": "https://github.com/zilliztech/mcp-server-milvus",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp[cli]>=1.1.2",
                "pymilvus>=2.5.1",
                "click>=8.0.0",
                "ruff>=0.11.0",
                "dotenv>=0.9.9"
            ],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 9,
        "stars": 48,
        "watchers": 4,
        "last_commit": "2025-03-28T10:15:29Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Mindmap": {
        "name": "Mindmap",
        "repo_url": "https://github.com/YuChenSSR/mindmap-mcp-server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.2.0"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 34,
        "watchers": 1,
        "last_commit": "2025-03-31T07:44:11Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for YuChenSSR/mindmap-mcp-server: 403; ClosedIssuesError: API error (closed issues) for YuChenSSR/mindmap-mcp-server: 403"
    },
    "Minima": {
        "name": "Minima",
        "repo_url": "https://github.com/dmayboroda/minima",
        "type": "community",
        "language_stack": [
            "JavaScript",
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm",
            "yarn"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 65,
        "stars": 676,
        "watchers": 12,
        "last_commit": "2025-03-02T20:16:04Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for dmayboroda/minima: 403; ClosedIssuesError: API error (closed issues) for dmayboroda/minima: 403"
    },
    "Monday.com": {
        "name": "Monday.com",
        "repo_url": "https://github.com/sakce/mcp-server-monday",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.2.1",
                "monday>=2.0.1",
                "requests>=2.32.3",
                "ruff>=0.9.6"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM ghcr.io/astral-sh/uv:python3.10-bookworm AS uv\n\nWORKDIR /app\n\nENV UV_COMPILE_BYTECODE=1\n\nENV UV_LINK_MODE=copy\n\nRUN --mount=type=cache,target=/root/.cache/uv     --mount=type=bind,source=uv.lock,target=uv.lock     --mount=type=bind,source=pyproject.toml,target=pyproject.toml     uv sync --frozen --no-install-project --no-dev --no-editable\n\nADD . /app\nRUN --mount=type=cache,target=/root/.cache/uv     uv sync --frozen --no-dev --no-editable\n\nFROM python:3.10-slim-bookworm\n\nWORKDIR /app\n \nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\n\nENV PATH=\"/app/.venv/bin:$PATH\"\n\nENTRYPOINT [\"mcp-server-monday\"]\n",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.10-bookworm",
        "forks": 4,
        "stars": 16,
        "watchers": 1,
        "last_commit": "2025-03-31T22:57:06Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for sakce/mcp-server-monday: 403; ClosedIssuesError: API error (closed issues) for sakce/mcp-server-monday: 403"
    },
    "MongoDB": {
        "name": "MongoDB",
        "repo_url": "https://github.com/kiliczsh/mcp-mongo-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.6.0",
                "mongodb": "^6.11.0",
                "@types/mongodb": "^4.0.6",
                "zod": "^3.23.8"
            },
            "devDependencies": {
                "typescript": "^5.3.3",
                "@types/node": "^20.11.24"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use a Node.js image for building the project\nFROM node:20-alpine AS builder\n\n# Set the working directory inside the container\nWORKDIR /app\n\n# Copy package files\nCOPY package.json package-lock.json ./\n\n# Install dependencies\nRUN --mount=type=cache,target=/root/.npm npm install\n\n# Copy the rest of the project files\nCOPY src ./src\nCOPY tsconfig.json ./\n\n# Build the project\nRUN npm run build\n\n# Use a smaller Node.js image for the runtime\nFROM node:20-alpine\n\n# Set the working directory inside the container\nWORKDIR /app\n\n# Copy only the necessary files for running the application\nCOPY --from=builder /app/build ./build\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY --from=builder /app/package.json ./package.json\n\n# Copy an entrypoint script to handle environment variable logic\nCOPY ./docker-entrypoint.sh /app/docker-entrypoint.sh\nRUN chmod +x /app/docker-entrypoint.sh\n\n# Define the entrypoint script\nENTRYPOINT [\"/app/docker-entrypoint.sh\"]\n",
        "base_docker_image": "node:20-alpine",
        "forks": 8,
        "stars": 86,
        "watchers": 2,
        "last_commit": "2025-03-22T15:20:16Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for kiliczsh/mcp-mongo-server: 403; ClosedIssuesError: API error (closed issues) for kiliczsh/mcp-mongo-server: 403"
    },
    "MongoDB Lens": {
        "name": "MongoDB Lens",
        "repo_url": "https://github.com/furey/mongodb-lens",
        "type": "community",
        "language_stack": [
            "JavaScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.1.0",
                "cross-env": "^7.0.3",
                "lodash": "^4.17.21",
                "mongodb": "^3.7.4",
                "strip-json-comments": "^5.0.1",
                "zod": "^3.24.2"
            },
            "devDependencies": {}
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22-alpine\n\nWORKDIR /app\n\nCOPY package*.json ./\n\nRUN npm ci --no-fund --no-audit\n\nCOPY . .\n\nENTRYPOINT [\"node\", \"mongodb-lens.js\"]\n",
        "base_docker_image": "node:22-alpine",
        "forks": 3,
        "stars": 35,
        "watchers": 3,
        "last_commit": "2025-04-01T00:49:02Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for furey/mongodb-lens: 403; ClosedIssuesError: API error (closed issues) for furey/mongodb-lens: 403"
    },
    "MotherDuck": {
        "name": "MotherDuck",
        "repo_url": "https://github.com/motherduckdb/mcp-server-motherduck",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.3.0",
                "duckdb>=1.2.1",
                "pandas>=2.0.0",
                "tabulate>=0.9.0"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": false,
        "forks": 7,
        "stars": 57,
        "watchers": 8,
        "last_commit": "2025-03-26T20:06:13Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Multicluster-MCP-Sever": {
        "name": "Multicluster-MCP-Sever",
        "repo_url": "https://github.com/yanmxa/multicluster-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@kubernetes/client-node": "^1.0.0",
                "@modelcontextprotocol/sdk": "0.6.0"
            },
            "devDependencies": {
                "@babel/core": "^7.26.9",
                "@babel/preset-env": "^7.26.9",
                "@babel/preset-typescript": "^7.26.0",
                "@types/jest": "^29.5.14",
                "@types/node": "^20.11.24",
                "babel-jest": "^29.7.0",
                "jest": "^29.7.0",
                "ts-jest": "^29.2.6",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 0,
        "watchers": 1,
        "last_commit": "2025-03-13T02:35:59Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for yanmxa/multicluster-mcp-server: 403; ClosedIssuesError: API error (closed issues) for yanmxa/multicluster-mcp-server: 403"
    },
    "MySQL": {
        "name": "MySQL",
        "repo_url": "https://github.com/designcomputer/mysql_mcp_server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.0.0",
                "mysql-connector-python>=9.1.0"
            ],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use the official Python image from the Docker Hub\nFROM python:3.11-slim\n\n# Set the working directory in the container\nWORKDIR /app\n\n# Copy the requirements file into the container\nCOPY requirements.txt .\n\n# Install the dependencies specified in the requirements file\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Copy the current directory contents into the container at /app\nCOPY src/ /app/src\n\n# Set environment variables for MySQL (these can be overwritten with `docker run -e`)\nENV MYSQL_HOST=host.docker.internal\nENV MYSQL_PORT=3306\nENV MYSQL_USER=your_username\nENV MYSQL_PASSWORD=your_password\nENV MYSQL_DATABASE=your_database\nENV PYTHONPATH=/app/src\n\n# Command to run the server\nCMD [\"python\", \"-m\", \"mysql_mcp_server.server\"]",
        "base_docker_image": "python:3.11-slim",
        "forks": 59,
        "stars": 212,
        "watchers": 3,
        "last_commit": "2025-03-29T17:01:52Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for designcomputer/mysql_mcp_server: 403; ClosedIssuesError: API error (closed issues) for designcomputer/mysql_mcp_server: 403"
    },
    "NASA": {
        "name": "NASA",
        "repo_url": "https://github.com/ProgramComputer/NASA-MCP-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@anthropic-ai/sdk": "",
                "@modelcontextprotocol/sdk": "^1.7.0",
                "axios": "",
                "cors": "",
                "dotenv": "",
                "express": "",
                "zod": ""
            },
            "devDependencies": {
                "@types/cors": "",
                "@types/express": "",
                "@types/jest": "",
                "@types/node": "",
                "@typescript-eslint/eslint-plugin": "^7.18.0",
                "@typescript-eslint/parser": "^7.18.0",
                "cross-env": "^7.0.3",
                "eslint": "^8.57.1",
                "jest": "",
                "shx": "^0.4.0",
                "ts-jest": "",
                "ts-node": "",
                "typed-rpc": "^6.1.1",
                "typescript": ""
            }
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 7,
        "watchers": 1,
        "last_commit": "2025-03-21T22:07:40Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for ProgramComputer/NASA-MCP-server: 403; ClosedIssuesError: API error (closed issues) for ProgramComputer/NASA-MCP-server: 403"
    },
    "NAVER": {
        "name": "NAVER",
        "repo_url": "https://github.com/pfldy2850/py-mcp-naver",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "fastmcp>=0.4.1",
                "httpx>=0.28.1",
                "pydantic>=2.10.6",
                "xmltodict>=0.14.2"
            ],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 6,
        "stars": 49,
        "watchers": 1,
        "last_commit": "2025-03-20T13:49:08Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for pfldy2850/py-mcp-naver: 403; ClosedIssuesError: API error (closed issues) for pfldy2850/py-mcp-naver: 403"
    },
    "NS Travel Information": {
        "name": "NS Travel Information",
        "repo_url": "https://github.com/r-huijts/ns-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^0.6.0",
                "dotenv": "^16.4.7",
                "axios": "^1.7.9",
                "typescript": "^5.7.2"
            },
            "devDependencies": {
                "@types/dotenv": "^6.1.1",
                "@types/node": "^20.11.24",
                "axios": "^1.7.9",
                "dotenv": "^16.4.7",
                "typescript": "^5.7.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Stage 1: Build the application\nFROM node:20-alpine AS builder\n\n# Set working directory\nWORKDIR /app\n\n# Copy source files\nCOPY package.json package-lock.json tsconfig.json ./\nCOPY src ./src\n\n# Install dependencies and build the project\nRUN npm install --ignore-scripts && npm run build\n\n# Stage 2: Create the production image\nFROM node:20-alpine\n\n# Set working directory\nWORKDIR /app\n\n# Copy built files from the builder stage\nCOPY --from=builder /app/build /app/build\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\n# Install only production dependencies\nRUN npm ci --omit=dev\n\n# Environment variables\nENV NS_API_KEY=your_api_key_here\n\n# Define the command to run the application\nENTRYPOINT [\"node\", \"build/index.js\"]\n",
        "base_docker_image": "node:20-alpine",
        "forks": 2,
        "stars": 22,
        "watchers": 2,
        "last_commit": "2025-02-04T15:28:47Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "National Parks": {
        "name": "National Parks",
        "repo_url": "https://github.com/KyrieTangSheng/mcp-server-nationalparks",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.7.0",
                "axios": "^1.8.4",
                "dotenv": "^16.4.7",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@types/node": "^22.13.10",
                "ts-node": "^10.9.2",
                "typescript": "^5.8.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\nFROM node:lts-alpine\n\nWORKDIR /app\n\n# Copy package files and install dependencies\nCOPY package*.json ./\n\nRUN npm install --ignore-scripts\n\n# Copy all files\nCOPY . .\n\n# Build the project\nRUN npm run build\n\nCMD [ \"node\", \"build/index.js\" ]\n",
        "base_docker_image": "node:lts-alpine",
        "forks": 0,
        "stars": 3,
        "watchers": 1,
        "last_commit": "2025-03-21T03:42:21Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for KyrieTangSheng/mcp-server-nationalparks: 403; ClosedIssuesError: API error (closed issues) for KyrieTangSheng/mcp-server-nationalparks: 403"
    },
    "Needle": {
        "name": "Needle",
        "repo_url": "https://github.com/needle-ai/needle-mcp",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "needle-python>=0.4.0",
                "mcp>=1.1.0",
                "python-dotenv>=1.0.1"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": false,
        "forks": 15,
        "stars": 30,
        "watchers": 3,
        "last_commit": "2025-01-02T11:55:27Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Neo4j": {
        "name": "Neo4j",
        "repo_url": "https://github.com/da-okazaki/mcp-neo4j-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.6.0",
                "neo4j-driver": "^5.27.0"
            },
            "devDependencies": {
                "@types/node": "^20.11.24",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use a Node.js image as the base\nFROM node:22.12-alpine AS builder\n\n# Set the working directory inside the container\nWORKDIR /app\n\n# Copy package.json and package-lock.json to the container\nCOPY package.json package-lock.json ./\n\n# Install dependencies\nRUN --mount=type=cache,target=/root/.npm npm install\n\n# Copy the rest of the application code\nCOPY src ./src\nCOPY tsconfig.json ./\n\n# Build the application\nRUN npm run build\n\n# Use a lightweight Node.js image for the final build\nFROM node:22-alpine\n\n# Set the working directory inside the container\nWORKDIR /app\n\n# Copy the build output and node_modules from the builder stage\nCOPY --from=builder /app/build ./build\nCOPY --from=builder /app/node_modules ./node_modules\n\n# Set environment variables\nENV NEO4J_URI=bolt://localhost:7687\nENV NEO4J_USERNAME=neo4j\n# NEO4J_PASSWORD should be set at runtime\n\n# Specify the command to run the application\nENTRYPOINT [\"node\", \"build/index.js\"]",
        "base_docker_image": "node:22.12-alpine",
        "forks": 4,
        "stars": 28,
        "watchers": 1,
        "last_commit": "2025-02-10T03:00:13Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for da-okazaki/mcp-neo4j-server: 403; ClosedIssuesError: API error (closed issues) for da-okazaki/mcp-neo4j-server: 403"
    },
    "Neon": {
        "name": "Neon",
        "repo_url": "https://github.com/neondatabase/mcp-server-neon",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.6.0",
                "@neondatabase/api-client": "2.0.0",
                "@neondatabase/serverless": "0.10.4",
                "chalk": "5.3.0",
                "node-fetch": "2.7.0",
                "zod": "3.24.1"
            },
            "devDependencies": {
                "@eslint/js": "9.21.0",
                "@types/node": "20.17.9",
                "@types/node-fetch": "2.6.12",
                "autoevals": "0.0.111",
                "braintrust": "0.0.177",
                "bun": "1.1.40",
                "eslint": "9.21.0",
                "eslint-config-prettier": "10.0.2",
                "prettier": "3.4.1",
                "tsc-watch": "6.2.1",
                "typescript": "5.7.2",
                "typescript-eslint": "v8.25.0"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use the imbios/bun-node image as the base image with Node and Bun\n# Keep bun and node version in sync with package.json\nFROM imbios/bun-node:1.1.38-18-alpine AS builder\n\n# Set the working directory in the container\nWORKDIR /app\n\n# Copy package.json and package-lock.json\nCOPY package.json package-lock.json ./\n\n# Copy the entire project to the working directory\nCOPY . .\n\n# Install the dependencies and devDependencies\nRUN npm install\n\n# Build the project\nRUN npm run build\n\n# Use a smaller base image for the final image\nFROM node:18-alpine AS release\n\n# Set the working directory\nWORKDIR /app\n\n# Copy only the necessary files from the builder stage\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\n# Install only production dependencies\nRUN npm ci --omit=dev\n\n# Define environment variables\nENV NODE_ENV=production\n\n# Specify the command to run the MCP server\nENTRYPOINT [\"node\", \"dist/index.js\", \"start\", \"$NEON_API_KEY\"]\n",
        "base_docker_image": "imbios/bun-node:1.1.38-18-alpine",
        "forks": 18,
        "stars": 145,
        "watchers": 6,
        "last_commit": "2025-03-26T08:56:04Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Neovim": {
        "name": "Neovim",
        "repo_url": "https://github.com/bigcodegen/mcp-neovim-server",
        "type": "community",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 7,
        "stars": 88,
        "watchers": 2,
        "last_commit": "2025-03-31T17:15:06Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search; FileListAnalysisError: Empty file list"
    },
    "Notion": {
        "name": "Notion",
        "repo_url": "https://github.com/v-3/notion-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.0.3",
                "@notionhq/client": "^2.2.15",
                "body-parser": "^1.20.3",
                "dotenv": "^16.4.7",
                "express": "^4.21.2"
            },
            "devDependencies": {
                "@types/node": "^22.10.2",
                "typescript": "^5.7.2"
            }
        },
        "has_dockerfile": false,
        "forks": 12,
        "stars": 50,
        "watchers": 2,
        "last_commit": "2025-02-01T02:13:16Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Obsidian Markdown Notes": {
        "name": "Obsidian Markdown Notes",
        "repo_url": "https://github.com/calclavia/mcp-obsidian",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.5.0",
                "glob": "^10.3.10",
                "zod-to-json-schema": "^3.23.5"
            },
            "devDependencies": {
                "@types/node": "^20.11.0",
                "shx": "^0.3.4",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 34,
        "stars": 540,
        "watchers": 6,
        "last_commit": "2024-12-22T03:39:08Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "OceanBase": {
        "name": "OceanBase",
        "repo_url": "https://github.com/yuanoOo/oceanbase_mcp_server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.0.0",
                "mysql-connector-python>=9.1.0"
            ],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 2,
        "watchers": 1,
        "last_commit": "2025-03-26T01:45:18Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Octagon": {
        "name": "Octagon",
        "repo_url": "https://github.com/OctagonAI/octagon-mcp-server",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.0.0",
                "dotenv": "^16.3.1",
                "openai": "^4.20.1",
                "zod": "^3.22.4"
            },
            "devDependencies": {
                "@types/node": "^20.10.0",
                "ts-node": "^10.9.2",
                "typescript": "^5.3.2"
            }
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 5,
        "watchers": 1,
        "last_commit": "2025-04-01T02:12:24Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": true,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Okta": {
        "name": "Okta",
        "repo_url": "https://github.com/kapilduraphe/okta-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm",
            "yarn"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@okta/okta-sdk-nodejs": "^7.0.1",
                "@modelcontextprotocol/sdk": "^1.0.4",
                "dotenv": "^16.4.1",
                "zod": "^3.22.4"
            },
            "devDependencies": {
                "@types/node": "^20.11.5",
                "prettier": "^3.2.4",
                "ts-node": "^10.9.2",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 4,
        "watchers": 3,
        "last_commit": "2025-03-20T22:15:33Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "OneNote": {
        "name": "OneNote",
        "repo_url": "https://github.com/rajvirtual/MCP-Servers/tree/master/onenote",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@azure/identity": "^3.3.2",
                "@microsoft/microsoft-graph-client": "3.0.7",
                "html-to-text": "^9.0.5"
            },
            "devDependencies": {
                "@microsoft/microsoft-graph-types": "^2.38.0",
                "@modelcontextprotocol/sdk": "^0.4.0",
                "@types/html-to-text": "^9.0.4",
                "@types/node": "^20.11.19",
                "ts-node": "^10.9.2",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:20-alpine\n\nWORKDIR /app\n\n# Install dependencies\nCOPY package*.json ./\nRUN npm install\n\n# Copy source code\nCOPY . .\n\n# Build TypeScript code\nRUN npm run build\n\n# Create a directory for token cache and device code\nRUN mkdir -p /app/dist\n\n\n# Set environment variables\nENV NODE_ENV=production\n\n# Run the application\nCMD [\"node\", \"dist/index.js\"] ",
        "base_docker_image": "node:20-alpine",
        "forks": 2,
        "stars": 0,
        "watchers": 1,
        "last_commit": "2025-03-12T22:33:34Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Open Strategy Partners Marketing Tools": {
        "name": "Open Strategy Partners Marketing Tools",
        "repo_url": "https://github.com/open-strategy-partners/osp_marketing_tools",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp[cli]",
                "aiohttp==3.11.11"
            ],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Start with a base image that has Python and uv pre-installed\nFROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv\n\n# Set the working directory\nWORKDIR /app\n\n# Enable bytecode compilation\nENV UV_COMPILE_BYTECODE=1\n\n# Specify the UV link mode\nENV UV_LINK_MODE=copy\n\n# Copy the pyproject.toml file to the working directory\nCOPY pyproject.toml /app/\n\n# Use uv to install dependencies\nRUN --mount=type=cache,target=/root/.cache/uv uv sync --frozen --no-install-project --no-dev --no-editable\n\n# Copy the entire project into the working directory\nADD . /app\n\n# Use uv to finalize the installation\nRUN --mount=type=cache,target=/root/.cache/uv uv sync --frozen --no-dev --no-editable\n\n# Start a new stage to keep the final image small\nFROM python:3.12-slim-bookworm\n\n# Set the working directory\nWORKDIR /app\n\n# Copy the necessary files from the uv stage\nCOPY --from=uv /root/.local /root/.local\nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\n\n# Update the PATH environment variable to include the virtual environment binaries\nENV PATH=\"/app/.venv/bin:$PATH\"\n\n# Set the entry point to run the MCP server\nENTRYPOINT [\"python\", \"src/osp_marketing_tools/server.py\"]",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
        "forks": 10,
        "stars": 105,
        "watchers": 3,
        "last_commit": "2025-02-11T13:50:25Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Open-Sourced MCP Servers Directory": {
        "name": "Open-Sourced MCP Servers Directory",
        "repo_url": "https://github.com/chatmcp/mcp-directory",
        "type": "resource",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "pnpm",
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@headlessui/react": "^2.2.0",
                "@heroicons/react": "^2.2.0",
                "@supabase/supabase-js": "^2.46.2",
                "framer-motion": "^11.13.1",
                "highlight.js": "^11.10.0",
                "markdown-it": "^14.1.0",
                "moment": "^2.30.1",
                "next": "15.0.4",
                "next-themes": "^0.4.4",
                "openai": "^4.76.0",
                "react": "19.0.0",
                "react-dom": "19.0.0",
                "react-icons": "^5.4.0",
                "react-lazy-load-image-component": "^1.6.2",
                "uuid": "^11.0.3",
                "xmlbuilder": "^15.1.1"
            },
            "devDependencies": {
                "@cloudflare/next-on-pages": "^1.13.6",
                "@types/markdown-it": "^14.1.2",
                "@types/node": "^20",
                "@types/react": "^18",
                "@types/react-dom": "^18",
                "@types/react-lazy-load-image-component": "^1.6.4",
                "@types/uuid": "^10.0.0",
                "next-dev": "link:@cloudflare/next-on-pages/next-dev",
                "postcss": "^8",
                "tailwindcss": "^3.4.1",
                "typescript": "^5",
                "vercel": "39.1.1"
            }
        },
        "has_dockerfile": false,
        "forks": 96,
        "stars": 873,
        "watchers": 8,
        "last_commit": "2025-03-26T16:29:02Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for chatmcp/mcp-directory: 403; ClosedIssuesError: API error (closed issues) for chatmcp/mcp-directory: 403"
    },
    "OpenAI WebSearch MCP": {
        "name": "OpenAI WebSearch MCP",
        "repo_url": "https://github.com/ConechoAI/openai-websearch-mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "pydantic_extra_types==2.10.3",
                "pydantic==2.10.6",
                "mcp==1.3.0",
                "tzdata==2025.1",
                "openai==1.66.2",
                "typer==0.15.2"
            ],
            "devDependencies": [
                "pydantic_extra_types==2.10.3",
                "pydantic==2.10.6",
                "mcp==1.3.0",
                "tzdata==2025.1",
                "openai==1.66.2",
                "typer==0.15.2"
            ]
        },
        "has_dockerfile": false,
        "forks": 2,
        "stars": 20,
        "watchers": 2,
        "last_commit": "2025-03-14T14:23:04Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "OpenAPI": {
        "name": "OpenAPI",
        "repo_url": "https://github.com/snaggle-ai/openapi-mcp-server",
        "type": "community",
        "language_stack": [
            "JavaScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^0.6.0",
                "chalk": "^5.3.0",
                "dotenv": "^16.4.5",
                "undici": "^5.28.4"
            },
            "devDependencies": {}
        },
        "has_dockerfile": false,
        "forks": 52,
        "stars": 392,
        "watchers": 8,
        "last_commit": "2025-03-31T18:38:52Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "OpenAPI AnyApi": {
        "name": "OpenAPI AnyApi",
        "repo_url": "https://github.com/baryhuang/mcp-server-any-openapi",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp",
                "pydantic",
                "requests",
                "pytz",
                "pyyaml",
                "faiss-cpu",
                "numpy",
                "sentence-transformers",
                "fastapi",
                "uvicorn",
                "huggingface-hub"
            ],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "# --------\n# Builder stage\n# --------\nFROM python:3.11-slim AS builder\n\n# Install build tools and dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    gcc \\\n    g++ \\\n    libc6-dev \\\n    libffi-dev \\\n    libpq-dev \\\n    make \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Set working directory for builder\nWORKDIR /app\n\n# Copy the entire project first\nCOPY . /app/\n\n# Upgrade pip and build wheels for all dependencies\nRUN pip install --upgrade pip \\\n    && mkdir /wheels \\\n    && pip wheel --wheel-dir=/wheels -r requirements.txt\n\n# --------\n# Final runtime stage\n# --------\nFROM python:3.11-slim\n\n# Install runtime dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    libffi-dev \\\n    libpq-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /app\n\n# Copy the entire project\nCOPY . /app/\n\n# Copy the wheels built in the builder stage\nCOPY --from=builder /wheels /wheels\n\n# Install Python dependencies from the local wheel cache\nRUN pip install --upgrade pip \\\n    && pip install --no-cache-dir --no-index --find-links=/wheels -r requirements.txt\n\n# Create models directory\nRUN mkdir -p /app/models\n\n# Pre-download models\nRUN python -c \"from sentence_transformers import SentenceTransformer; \\\n    model = SentenceTransformer('all-MiniLM-L6-v2'); \\\n    model.save('/app/models/all-MiniLM-L6-v2')\"\n\n# Set environment variables\nENV SENTENCE_TRANSFORMERS_HOME=/app/models\nENV PYTHONPATH=/app/src\n\n# Expose port\nEXPOSE 8000\n\n# Run the server directly\nENTRYPOINT [\"python\", \"src/mcp_server_any_openapi/server.py\"]\n",
        "base_docker_image": "python:3.11-slim",
        "forks": 3,
        "stars": 20,
        "watchers": 1,
        "last_commit": "2025-03-24T04:47:42Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "OpenAPI Schema": {
        "name": "OpenAPI Schema",
        "repo_url": "https://github.com/hannesj/mcp-openapi-schema",
        "type": "community",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 2,
        "stars": 11,
        "watchers": 1,
        "last_commit": "2025-03-13T13:50:01Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for hannesj/mcp-openapi-schema: 403; ClosedIssuesError: API error (closed issues) for hannesj/mcp-openapi-schema: 403; FileListAnalysisError: Empty file list"
    },
    "OpenCTI": {
        "name": "OpenCTI",
        "repo_url": "https://github.com/Spathodea-Network/opencti-mcp",
        "type": "community",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 5,
        "stars": 7,
        "watchers": 1,
        "last_commit": "2025-01-30T15:28:18Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for Spathodea-Network/opencti-mcp: 403; ClosedIssuesError: API error (closed issues) for Spathodea-Network/opencti-mcp: 403; FileListAnalysisError: Empty file list"
    },
    "OpenDota": {
        "name": "OpenDota",
        "repo_url": "https://github.com/asusevski/opendota-mcp-server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "aiohttp>=3.11.12",
                "anthropic>=0.46.0",
                "black>=24.10.0",
                "dnspython>=2.7.0",
                "fastapi>=0.115.8",
                "httpx>=0.28.1",
                "huggingface-hub>=0.28.1",
                "isort>=5.13.2",
                "itsdangerous>=2.2.0",
                "jinja2>=3.1.5",
                "mcp[cli]>=1.2.1",
                "motor>=3.7.0",
                "pydantic-settings>=2.7.1",
                "pymongo>=4.11.1",
                "pyproject-toml>=0.1.0",
                "pytest",
                "python-dotenv>=1.0.1",
                "streamlit",
                "uuid>=1.30"
            ],
            "devDependencies": [
                "black==24.10.0",
                "ruff==0.8.0",
                "isort==5.13.2",
                "pyright==1.1.389"
            ]
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 4,
        "watchers": 1,
        "last_commit": "2025-03-12T22:32:02Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for asusevski/opendota-mcp-server: 403; ClosedIssuesError: API error (closed issues) for asusevski/opendota-mcp-server: 403"
    },
    "OpenRPC": {
        "name": "OpenRPC",
        "repo_url": "https://github.com/shanejonas/openrpc-mpc-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.6.0",
                "@open-rpc/client-js": "^1.8.1"
            },
            "devDependencies": {
                "@types/node": "^20.11.24",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 6,
        "stars": 29,
        "watchers": 1,
        "last_commit": "2025-02-02T22:35:59Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for shanejonas/openrpc-mpc-server: 403; ClosedIssuesError: API error (closed issues) for shanejonas/openrpc-mpc-server: 403"
    },
    "OpenTools": {
        "name": "OpenTools",
        "repo_url": "https://opentools.com",
        "type": "resource",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "error": "Could not parse GitHub URL"
    },
    "Oxylabs": {
        "name": "Oxylabs",
        "repo_url": "https://github.com/oxylabs/oxylabs-mcp",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "httpx>=0.28.1",
                "lxml>=5.3.0",
                "lxml-html-clean>=0.4.1",
                "markdownify>=0.14.1",
                "mcp[cli]>=1.2.0",
                "pydantic>=2.10.5"
            ],
            "devDependencies": [
                "mypy>=1.14.1",
                "pytest>=8.3.4",
                "pytest-asyncio>=0.25.2",
                "pytest-mock>=3.14.0",
                "ruff>=0.9.1"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim\n\nENV UV_COMPILE_BYTECODE=1\nENV UV_LINK_MODE=copy\nENV UV_CACHE_DIR=/opt/uv-cache/\n\nRUN apt-get update && apt-get install -y --no-install-recommends git\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=UV_CACHE_DIR \\\n    --mount=type=bind,source=uv.lock,target=uv.lock \\\n    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \\\n    uv sync --frozen --no-install-project --no-dev --no-editable\n\nADD . /app\n\nRUN --mount=type=cache,target=UV_CACHE_DIR \\\n    uv sync --frozen --no-dev --no-editable\n\n# Add virtual environment to PATH\nENV PATH=\"/app/.venv/bin:$PATH\"\n\nENTRYPOINT [\"oxylabs-mcp\"]\n",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
        "forks": 2,
        "stars": 8,
        "watchers": 2,
        "last_commit": "2025-03-31T12:35:36Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "PIF": {
        "name": "PIF",
        "repo_url": "https://github.com/hungryrobot1/MCP-PIF",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.3.2",
                "simple-git": "^3.27.0",
                "zod": "^3.24.1"
            },
            "devDependencies": {
                "@types/node": "^22.10.7",
                "@types/vscode": "^1.85.0",
                "typescript": "^5.7.3"
            }
        },
        "has_dockerfile": false,
        "forks": 5,
        "stars": 18,
        "watchers": 3,
        "last_commit": "2025-03-19T01:29:50Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for hungryrobot1/MCP-PIF: 403; ClosedIssuesError: API error (closed issues) for hungryrobot1/MCP-PIF: 403"
    },
    "Pandoc": {
        "name": "Pandoc",
        "repo_url": "https://github.com/vivekVells/mcp-pandoc",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.1.0",
                "pandoc>=2.4",
                "pypandoc>=1.14"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": false,
        "forks": 18,
        "stars": 112,
        "watchers": 3,
        "last_commit": "2024-12-29T20:50:57Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": true,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for vivekVells/mcp-pandoc: 403; ClosedIssuesError: API error (closed issues) for vivekVells/mcp-pandoc: 403"
    },
    "Perplexity": {
        "name": "Perplexity",
        "repo_url": "https://github.com/ppl-ai/modelcontextprotocol",
        "type": "official",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 76,
        "stars": 779,
        "watchers": 8,
        "last_commit": "2025-03-29T23:13:27Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for ppl-ai/modelcontextprotocol: 403; ClosedIssuesError: API error (closed issues) for ppl-ai/modelcontextprotocol: 403"
    },
    "Pinecone": {
        "name": "Pinecone",
        "repo_url": "https://github.com/sirmews/mcp-pinecone",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "httpx>=0.28.0",
                "jsonschema>=4.23.0",
                "mcp>=1.0.0",
                "pinecone>=5.4.1",
                "python-dotenv>=1.0.1",
                "tiktoken>=0.8.0"
            ],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use a Python image with uv pre-installed\nFROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv\n\n# Set the working directory\nWORKDIR /app\n\n# Copy the project files to the working directory\nADD . /app\n\n# Enable bytecode compilation\nENV UV_COMPILE_BYTECODE=1\n\n# Copy from the cache instead of linking since it's a mounted volume\nENV UV_LINK_MODE=copy\n\n# Sync the dependencies and lockfile\nRUN --mount=type=cache,target=/root/.cache/uv     --mount=type=bind,source=uv.lock,target=uv.lock     --mount=type=bind,source=pyproject.toml,target=pyproject.toml     uv sync --frozen --no-install-project --no-dev --no-editable\n\n# Install the project\nRUN --mount=type=cache,target=/root/.cache/uv     uv sync --frozen --no-dev --no-editable\n\nFROM python:3.12-slim-bookworm\n\nWORKDIR /app\n \nCOPY --from=uv /root/.local /root/.local\nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\n\n# Place executables in the environment at the front of the path\nENV PATH=\"/app/.venv/bin:$PATH\"\n\n# Entry point for running the MCP server\nENTRYPOINT [\"uv\", \"run\", \"mcp-pinecone\"]\n",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
        "forks": 14,
        "stars": 95,
        "watchers": 1,
        "last_commit": "2025-01-31T08:20:22Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for sirmews/mcp-pinecone: 403; ClosedIssuesError: API error (closed issues) for sirmews/mcp-pinecone: 403"
    },
    "Placid.app": {
        "name": "Placid.app",
        "repo_url": "https://github.com/felores/placid-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.7.0",
                "dotenv": "^16.4.7"
            },
            "devDependencies": {
                "@types/jest": "^29.0.0",
                "@types/node": "^20.17.28",
                "jest": "^29.0.0",
                "ts-jest": "^29.3.0",
                "ts-node-dev": "^2.0.0",
                "typescript": "^5.0.0"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Use the official Node.js 16 image as the base image\nFROM node:16-alpine AS builder\n\n# Set the working directory\nWORKDIR /app\n\n# Copy the package.json and package-lock.json files\nCOPY package.json package-lock.json ./\n\n# Install the dependencies\nRUN npm install\n\n# Copy the rest of the application source code\nCOPY . .\n\n# Build the application\nRUN npm run build\n\n# Use a lighter base image for the runtime\nFROM node:16-alpine AS release\n\n# Set the working directory\nWORKDIR /app\n\n# Copy only the necessary files from the builder stage\nCOPY --from=builder /app/build /app/build\nCOPY --from=builder /app/node_modules /app/node_modules\nCOPY --from=builder /app/package.json /app/package.json\n\n# Set environment variables\nENV NODE_ENV=production\n\n# Define the command to run the application\nENTRYPOINT [\"node\", \"build/index.js\"]",
        "base_docker_image": "node:16-alpine",
        "forks": 0,
        "stars": 5,
        "watchers": 1,
        "last_commit": "2025-03-28T23:13:52Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for felores/placid-mcp-server: 403; ClosedIssuesError: API error (closed issues) for felores/placid-mcp-server: 403"
    },
    "Playwright": {
        "name": "Playwright",
        "repo_url": "https://github.com/executeautomation/mcp-playwright",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.6.1",
                "@playwright/browser-chromium": "1.51.1",
                "@playwright/browser-firefox": "1.51.1",
                "@playwright/browser-webkit": "1.51.1",
                "playwright": "1.51.1",
                "@playwright/test": "^1.51.1",
                "uuid": "^9.0.1"
            },
            "devDependencies": {
                "@types/jest": "^29.5.14",
                "@types/node": "^20.10.5",
                "jest": "^29.7.0",
                "jest-playwright-preset": "^4.0.0",
                "shx": "^0.3.4",
                "ts-jest": "^29.2.6",
                "typescript": "^5.8.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use Node.js image for building the project\nFROM node:20-alpine AS builder\n\n# Set the working directory\nWORKDIR /app\n\n# Copy package.json and package-lock.json\nCOPY package.json package-lock.json ./\n\n# Install dependencies without running scripts to prevent automatic build\nRUN npm install --ignore-scripts\n\n# Copy the entire source directory\nCOPY src ./src\nCOPY tsconfig.json ./\n\n# Build the project\nRUN npm run build\n\n# Use a minimal Node.js image for running the project\nFROM node:20-alpine AS release\n\n# Set the working directory\nWORKDIR /app\n\n# Copy the built files from the builder stage\nCOPY --from=builder /app/dist ./dist\nCOPY --from=builder /app/package.json ./package.json\nCOPY --from=builder /app/package-lock.json ./package-lock.json\n\n# Install production dependencies\nRUN npm ci --ignore-scripts --omit=dev\n\n# Set the command to run the server\nENTRYPOINT [\"node\", \"dist/index.js\"]",
        "base_docker_image": "node:20-alpine",
        "forks": 163,
        "stars": 2145,
        "watchers": 23,
        "last_commit": "2025-03-30T18:51:49Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for executeautomation/mcp-playwright: 403; ClosedIssuesError: API error (closed issues) for executeautomation/mcp-playwright: 403"
    },
    "PostgreSQL": {
        "name": "PostgreSQL",
        "repo_url": "https://github.com/modelcontextprotocol/servers/tree/main/src/postgres",
        "type": "reference",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.0.1",
                "pg": "^8.13.0"
            },
            "devDependencies": {
                "@types/pg": "^8.11.10",
                "shx": "^0.3.4",
                "typescript": "^5.6.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.12-alpine AS builder\n\nCOPY src/postgres /app\nCOPY tsconfig.json /tsconfig.json\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nRUN --mount=type=cache,target=/root/.npm-production npm ci --ignore-scripts --omit-dev\n\nFROM node:22-alpine AS release\n\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\nENV NODE_ENV=production\n\nWORKDIR /app\n\nRUN npm ci --ignore-scripts --omit-dev\n\nENTRYPOINT [\"node\", \"dist/index.js\"]",
        "base_docker_image": "node:22.12-alpine",
        "forks": 2985,
        "stars": 28753,
        "watchers": 208,
        "last_commit": "2025-03-31T15:41:32Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Postman": {
        "name": "Postman",
        "repo_url": "https://github.com/shannonlal/mcp-postman",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm",
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "latest",
                "newman": "^6.0.0",
                "zod": "^3.22.4"
            },
            "devDependencies": {
                "@types/express": "^4.17.21",
                "@types/newman": "^5.3.0",
                "@types/node": "^20.0.0",
                "@typescript-eslint/eslint-plugin": "^6.0.0",
                "@typescript-eslint/parser": "^6.0.0",
                "@vitest/coverage-v8": "^1.0.0",
                "axios": "^1.7.9",
                "cross-env": "^7.0.3",
                "eslint": "^8.0.0",
                "eslint-config-prettier": "^9.0.0",
                "express": "^4.18.2",
                "husky": "^9.1.7",
                "lint-staged": "^15.3.0",
                "nodemon": "3.1.9",
                "prettier": "^3.0.0",
                "ts-node": "^10.9.0",
                "typescript": "^5.0.0",
                "vitest": "^1.0.0"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use a Node.js image\nFROM node:18-alpine AS builder\n\n# Install pnpm\nRUN npm install -g pnpm\n\n# Set the working directory\nWORKDIR /app\n\n# Copy package.json and pnpm-lock.yaml to leverage Docker cache for dependencies\nCOPY package.json pnpm-lock.yaml ./\n\n# Install dependencies\nRUN pnpm install\n\n# Copy the source code\nCOPY src ./src\nCOPY tsconfig.json ./\n\n# Build the project\nRUN pnpm build\n\n# Use a smaller Node.js image for running the application\nFROM node:18-alpine\n\n# Set the working directory\nWORKDIR /app\n\n# Copy the built files and package.json\nCOPY --from=builder /app/build ./build\nCOPY --from=builder /app/package.json ./\n\n# Install only production dependencies\nRUN pnpm install --prod\n\n# Set the entry point for the application\nENTRYPOINT [\"node\", \"build/index.js\"]\n",
        "base_docker_image": "node:18-alpine",
        "forks": 3,
        "stars": 33,
        "watchers": 1,
        "last_commit": "2025-03-25T00:26:47Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": true,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for shannonlal/mcp-postman: 403; ClosedIssuesError: API error (closed issues) for shannonlal/mcp-postman: 403"
    },
    "Productboard": {
        "name": "Productboard",
        "repo_url": "https://github.com/kenjihikmatullah/productboard-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.6.0"
            },
            "devDependencies": {
                "@types/node": "^22.13.5",
                "typescript": "^5.7.3"
            }
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 3,
        "watchers": 1,
        "last_commit": "2025-02-26T06:00:29Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for kenjihikmatullah/productboard-mcp: 403; ClosedIssuesError: API error (closed issues) for kenjihikmatullah/productboard-mcp: 403"
    },
    "Prometheus": {
        "name": "Prometheus",
        "repo_url": "https://github.com/pab1it0/prometheus-mcp-server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp[cli]",
                "prometheus-api-client",
                "python-dotenv",
                "pyproject-toml>=0.1.0",
                "requests"
            ],
            "devDependencies": [
                "pytest>=7.0.0",
                "pytest-cov>=4.0.0",
                "pytest-asyncio>=0.21.0",
                "pytest-mock>=3.10.0"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM python:3.10-slim\n\n# Set working directory\nWORKDIR /app\n\n# Set environment variables\nENV PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONUNBUFFERED=1 \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1\n\n# Install system dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    gcc \\\n    python3-dev \\\n    bash \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Copy the project files\nCOPY . /app/\n\n# Install uv\nRUN pip install --upgrade pip && \\\n    pip install uv\n\n# Create a virtual environment, install dependencies\nRUN uv venv /app/.venv && \\\n    . /app/.venv/bin/activate && \\\n    uv pip install -e .\n\n# Make the entrypoint script executable\nRUN chmod +x /app/docker-entrypoint.sh\n\n# Set the entrypoint\nENTRYPOINT [\"/app/docker-entrypoint.sh\"]\n\n# Label the image\nLABEL maintainer=\"pab1it0\" \\\n      description=\"Prometheus MCP Server\" \\\n      version=\"1.0.0\"\n\n# Expose port if needed (but this is optional as the MCP server typically runs on stdio)\n# EXPOSE 8000",
        "base_docker_image": "python:3.10-slim",
        "forks": 1,
        "stars": 11,
        "watchers": 1,
        "last_commit": "2025-03-19T18:06:48Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for pab1it0/prometheus-mcp-server: 403; ClosedIssuesError: API error (closed issues) for pab1it0/prometheus-mcp-server: 403"
    },
    "PulseMCP": {
        "name": "PulseMCP",
        "repo_url": "https://www.pulsemcp.com",
        "type": "resource",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "error": "Could not parse GitHub URL"
    },
    "Pulumi": {
        "name": "Pulumi",
        "repo_url": "https://github.com/dogukanakkaya/pulumi-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.7.0",
                "dotenv": "^16.4.7",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@types/node": "^22.13.10",
                "typescript": "^5.8.2"
            }
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 1,
        "watchers": 1,
        "last_commit": "2025-03-20T00:58:23Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for dogukanakkaya/pulumi-mcp-server: 403; ClosedIssuesError: API error (closed issues) for dogukanakkaya/pulumi-mcp-server: 403"
    },
    "Puppeteer": {
        "name": "Puppeteer",
        "repo_url": "https://github.com/modelcontextprotocol/servers/tree/main/src/puppeteer",
        "type": "reference",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.0.1",
                "puppeteer": "^23.4.0"
            },
            "devDependencies": {
                "shx": "^0.3.4",
                "typescript": "^5.6.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22-bookworm-slim\n\nENV DEBIAN_FRONTEND noninteractive\n\n# for arm64 support we need to install chromium provided by debian\n# npm ERR! The chromium binary is not available for arm64.\n# https://github.com/puppeteer/puppeteer/issues/7740\n\nENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true\nENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium\n\nRUN apt-get update && \\\n    apt-get install -y wget gnupg && \\\n    apt-get install -y fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf libxss1 \\\n        libgtk2.0-0 libnss3 libatk-bridge2.0-0 libdrm2 libxkbcommon0 libgbm1 libasound2 && \\\n    apt-get install -y chromium && \\\n    apt-get clean\n\nCOPY src/puppeteer /project\nCOPY tsconfig.json /tsconfig.json\n\nWORKDIR /project\n\nRUN npm install\n\nENTRYPOINT [\"node\", \"dist/index.js\"]",
        "base_docker_image": "node:22-bookworm-slim",
        "forks": 2985,
        "stars": 28753,
        "watchers": 208,
        "last_commit": "2025-03-31T15:41:32Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Pushover": {
        "name": "Pushover",
        "repo_url": "https://github.com/ashiknesin/pushover-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.6.1",
                "commander": "^13.1.0",
                "zod": "^3.22.4"
            },
            "devDependencies": {
                "@types/node": "^20.11.24",
                "tsx": "^4.7.1",
                "typescript": "^5.3.3",
                "vitest": "^1.3.1"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\nFROM node:lts-alpine\n\n# Install global dependencies\nRUN npm install -g pnpm\n\n# Set working directory\nWORKDIR /app\n\n# Copy package files\nCOPY package.json pnpm-lock.yaml ./\n\n# Install dependencies without running scripts\nRUN pnpm install --ignore-scripts\n\n# Copy source code\nCOPY . .\n\n# Build the project\nRUN pnpm build\n\n# Define the startup command\nCMD [\"node\", \"dist/cli.js\", \"start\"]\n",
        "base_docker_image": "node:lts-alpine",
        "forks": 0,
        "stars": 7,
        "watchers": 1,
        "last_commit": "2025-03-16T19:56:30Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for ashiknesin/pushover-mcp: 403; ClosedIssuesError: API error (closed issues) for ashiknesin/pushover-mcp: 403"
    },
    "QGIS": {
        "name": "QGIS",
        "repo_url": "https://github.com/jjsantos01/qgis_mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp[cli]>=1.3.0"
            ],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 40,
        "stars": 367,
        "watchers": 8,
        "last_commit": "2025-03-16T01:52:12Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for jjsantos01/qgis_mcp: 403; ClosedIssuesError: API error (closed issues) for jjsantos01/qgis_mcp: 403"
    },
    "Qdrant": {
        "name": "Qdrant",
        "repo_url": "https://github.com/qdrant/mcp-server-qdrant/",
        "type": "official",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 43,
        "stars": 348,
        "watchers": 8,
        "last_commit": "2025-03-12T10:20:21Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for qdrant/mcp-server-qdrant: 403; ClosedIssuesError: API error (closed issues) for qdrant/mcp-server-qdrant: 403; FileListAnalysisError: Empty file list"
    },
    "Quarkus MCP Server SDK": {
        "name": "Quarkus MCP Server SDK",
        "repo_url": "https://github.com/quarkiverse/quarkus-mcp-server",
        "type": "framework",
        "language_stack": [
            "Java"
        ],
        "package_manager": [
            "maven"
        ],
        "dependencies_file": "pom.xml",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 13,
        "stars": 59,
        "watchers": 3,
        "last_commit": "2025-03-28T10:15:47Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": true,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for quarkiverse/quarkus-mcp-server: 403; ClosedIssuesError: API error (closed issues) for quarkiverse/quarkus-mcp-server: 403"
    },
    "QuickChart": {
        "name": "QuickChart",
        "repo_url": "https://github.com/GongRzhe/Quickchart-MCP-Server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^0.6.0",
                "axios": "^1.7.9"
            },
            "devDependencies": {
                "@types/node": "^20.11.24",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\nFROM node:lts-alpine\n\n# Create app directory\nWORKDIR /app\n\n# Install app dependencies\nCOPY package*.json ./\nRUN npm install --ignore-scripts\n\n# Bundle app source\nCOPY . .\n\n# Build the TypeScript source\nRUN npm run build\n\n# Expose port if needed (not strictly needed for stdio services)\n\n# Run the MCP server\nCMD [ \"node\", \"./build/index.js\" ]\n",
        "base_docker_image": "node:lts-alpine",
        "forks": 1,
        "stars": 6,
        "watchers": 1,
        "last_commit": "2025-03-17T06:46:45Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for GongRzhe/Quickchart-MCP-Server: 403; ClosedIssuesError: API error (closed issues) for GongRzhe/Quickchart-MCP-Server: 403"
    },
    "Qwen_Max": {
        "name": "Qwen_Max",
        "repo_url": "https://github.com/66julienmartin/MCP-server-Qwen_Max",
        "type": "community",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 2,
        "stars": 9,
        "watchers": 1,
        "last_commit": "2025-02-05T14:15:06Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for 66julienmartin/MCP-server-Qwen_Max: 403; ClosedIssuesError: API error (closed issues) for 66julienmartin/MCP-server-Qwen_Max: 403; FileListAnalysisError: Empty file list"
    },
    "RAG Web Browser": {
        "name": "RAG Web Browser",
        "repo_url": "https://github.com/apify/mcp-server-rag-web-browser",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.0.4",
                "express": "^4.21.2",
                "node-fetch": "^3.3.2",
                "zod": "^3.24.1",
                "zod-to-json-schema": "^3.24.1"
            },
            "devDependencies": {
                "@apify/eslint-config": "^0.5.0-beta.7",
                "@apify/eslint-config-ts": "^0.4.1",
                "@apify/tsconfig": "^0.1.0",
                "@types/express": "^5.0.0",
                "@types/node": "^20.11.24",
                "dotenv": "^16.4.7",
                "eslint": "^9.22.0",
                "tsx": "^4.6.2",
                "typescript": "^5.3.3",
                "typescript-eslint": "^8.18.2"
            }
        },
        "has_dockerfile": false,
        "forks": 7,
        "stars": 92,
        "watchers": 3,
        "last_commit": "2025-03-17T10:16:31Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for apify/mcp-server-rag-web-browser: 403; ClosedIssuesError: API error (closed issues) for apify/mcp-server-rag-web-browser: 403"
    },
    "RabbitMQ": {
        "name": "RabbitMQ",
        "repo_url": "https://github.com/kenliao94/mcp-server-rabbitmq",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "markdownify>=0.13.1",
                "mcp>=1.1.2",
                "pika>=1.3.2",
                "protego>=0.3.1",
                "pydantic>=2.0.0",
                "readabilipy>=0.2.0",
                "requests>=2.32.3"
            ],
            "devDependencies": [
                "pyright>=1.1.389",
                "ruff>=0.7.3"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Use a Python image with uv pre-installed\nFROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv\n\n# Install the project into `/app`\nWORKDIR /app\n\n# Enable bytecode compilation\nENV UV_COMPILE_BYTECODE=1\n\n# Copy from the cache instead of linking since it's a mounted volume\nENV UV_LINK_MODE=copy\n\n# Install the project's dependencies using the lockfile and settings\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    --mount=type=bind,source=uv.lock,target=uv.lock \\\n    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \\\n    uv sync --frozen --no-install-project --no-dev --no-editable\n\n# Then, add the rest of the project source code and install it\n# Installing separately from its dependencies allows optimal layer caching\nADD . /app\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    uv sync --frozen --no-dev --no-editable\n\nFROM python:3.12-slim-bookworm\n\nWORKDIR /app\n \nCOPY --from=uv /root/.local /root/.local\nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\n\n# Place executables in the environment at the front of the path\nENV PATH=\"/app/.venv/bin:$PATH\"\n\n# when running the container, add --db-path and a bind mount to the host's db file\nENTRYPOINT [\"mcp-server-rabbitmq\"]\n",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
        "forks": 1,
        "stars": 6,
        "watchers": 2,
        "last_commit": "2025-03-28T06:03:31Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for kenliao94/mcp-server-rabbitmq: 403; ClosedIssuesError: API error (closed issues) for kenliao94/mcp-server-rabbitmq: 403"
    },
    "Ramp": {
        "name": "Ramp",
        "repo_url": "https://github.com/ramp-public/ramp-mcp",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "httpx>=0.28.1",
                "mcp[cli]>=1.3.0",
                "uuid>=1.30.0",
                "iso4217>=1.12.20240625",
                "flatten-json>=0.1.14"
            ],
            "devDependencies": [
                "ruff>=0.8.0"
            ]
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 9,
        "watchers": 0,
        "last_commit": "2025-03-20T15:30:58Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for ramp-public/ramp-mcp: 403; ClosedIssuesError: API error (closed issues) for ramp-public/ramp-mcp: 403"
    },
    "Raygun": {
        "name": "Raygun",
        "repo_url": "https://github.com/MindscapeHQ/mcp-server-raygun",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.6.0",
                "zod-to-json-schema": "^3.23.5"
            },
            "devDependencies": {
                "@types/node": "^20.11.24",
                "shx": "^0.3.4",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 4,
        "stars": 6,
        "watchers": 3,
        "last_commit": "2024-11-28T20:07:09Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for MindscapeHQ/mcp-server-raygun: 403; ClosedIssuesError: API error (closed issues) for MindscapeHQ/mcp-server-raygun: 403"
    },
    "Reaper": {
        "name": "Reaper",
        "repo_url": "https://github.com/dschuler36/reaper-mcp-server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.2.0",
                "asyncio>=3.4.3"
            ],
            "devDependencies": [
                "pytest>=8.3.4"
            ]
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 17,
        "watchers": 1,
        "last_commit": "2025-03-19T23:58:45Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for dschuler36/reaper-mcp-server: 403; ClosedIssuesError: API error (closed issues) for dschuler36/reaper-mcp-server: 403"
    },
    "Redis": {
        "name": "Redis",
        "repo_url": "https://github.com/prajwalnayak7/mcp-server-redis",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp[cli]>=1.2.1",
                "python-dotenv>=1.0.1",
                "redis>=5.2.1"
            ],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use a Python image with uv pre-installed\nFROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv\n\n# Set the working directory\nWORKDIR /app\n\n# Enable bytecode compilation\nENV UV_COMPILE_BYTECODE=1\n\n# Copy from the cache instead of linking since it's a mounted volume\nENV UV_LINK_MODE=copy\n\n# Install the project's dependencies using the lockfile and settings\nRUN --mount=type=cache,target=/root/.cache/uv     --mount=type=bind,source=uv.lock,target=uv.lock     --mount=type=bind,source=pyproject.toml,target=pyproject.toml     uv sync --frozen --no-install-project --no-dev --no-editable\n\n# Add the rest of the project source code and install it\nADD . /app\nRUN --mount=type=cache,target=/root/.cache/uv     uv sync --frozen --no-dev --no-editable\n\nFROM python:3.12-slim-bookworm\n\nWORKDIR /app\n \nCOPY --from=uv /root/.local /root/.local\nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\n\n# Place executables in the environment at the front of the path\nENV PATH=\"/app/.venv/bin:$PATH\"\n\n# Run the server\nENTRYPOINT [\"python\", \"src/main.py\"]\n",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
        "forks": 0,
        "stars": 11,
        "watchers": 1,
        "last_commit": "2025-02-11T21:46:40Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for prajwalnayak7/mcp-server-redis: 403; ClosedIssuesError: API error (closed issues) for prajwalnayak7/mcp-server-redis: 403"
    },
    "Rember": {
        "name": "Rember",
        "repo_url": "https://github.com/rember/rember-mcp",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@effect/ai": "^0.12.1",
                "@effect/cli": "^0.58.1",
                "@effect/platform-node": "^0.75.1",
                "@effect/platform": "^0.79.1",
                "@modelcontextprotocol/sdk": "^1.7.0",
                "effect": "^3.13.10",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@effect/ai-anthropic": "^0.2.1",
                "@effect/eslint-plugin": "^0.2.0",
                "@effect/language-service": "^0.4.0",
                "@effect/vitest": "^0.19.8",
                "@eslint/compat": "1.1.1",
                "@eslint/eslintrc": "3.1.0",
                "@eslint/js": "9.10.0",
                "@modelcontextprotocol/inspector": "^0.6.0",
                "@types/node": "^22.13.10",
                "@typescript-eslint/eslint-plugin": "^8.26.1",
                "@typescript-eslint/parser": "^8.26.1",
                "eslint-import-resolver-typescript": "^3.8.6",
                "eslint-plugin-codegen": "0.28.0",
                "eslint-plugin-deprecation": "^3.0.0",
                "eslint-plugin-import": "^2.31.0",
                "eslint-plugin-simple-import-sort": "^12.1.1",
                "eslint-plugin-sort-destructure-keys": "^2.0.0",
                "eslint": "^9.22.0",
                "tailwindcss": "^4.0.13",
                "tsup": "^8.4.0",
                "tsx": "^4.19.3",
                "typescript": "^5.8.2",
                "vitest": "^3.0.8"
            }
        },
        "has_dockerfile": false,
        "forks": 2,
        "stars": 21,
        "watchers": 2,
        "last_commit": "2025-03-28T09:29:27Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for rember/rember-mcp: 403; ClosedIssuesError: API error (closed issues) for rember/rember-mcp: 403"
    },
    "Rememberizer AI": {
        "name": "Rememberizer AI",
        "repo_url": "https://github.com/skydeckai/mcp-server-rememberizer",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "httpx>=0.27.2",
                "mcp>=1.0.0",
                "python-dotenv>=1.0.1"
            ],
            "devDependencies": [
                "pyright>=1.1.389"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Start with the base Python image\nFROM python:3.11-slim-bookworm\n\n# Set the working directory in the container\nWORKDIR /app\n\n# Copy the project files into the container\nCOPY . .\n\n# Install the necessary dependencies\nRUN pip install --no-cache-dir --upgrade pip \\\n    && pip install --no-cache-dir .\n\n# Set the environment variable for the Rememberizer API token\n# It is recommended to set this as a secret in production environments\nENV REMEMBERIZER_API_TOKEN=your_rememberizer_api_token\n\n# The command to run your application\nENTRYPOINT [\"python\", \"-m\", \"mcp_server_rememberizer.server\"]\n",
        "base_docker_image": "python:3.11-slim-bookworm",
        "forks": 0,
        "stars": 18,
        "watchers": 2,
        "last_commit": "2025-04-01T07:20:13Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for skydeckai/mcp-server-rememberizer: 403; ClosedIssuesError: API error (closed issues) for skydeckai/mcp-server-rememberizer: 403"
    },
    "Replicate": {
        "name": "Replicate",
        "repo_url": "https://github.com/deepfates/mcp-replicate",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^0.6.0",
                "replicate": "^1.0.1"
            },
            "devDependencies": {
                "@biomejs/biome": "^1.5.3",
                "@types/node": "^20.11.5",
                "typescript": "^5.3.3",
                "vitest": "^1.2.1"
            }
        },
        "has_dockerfile": false,
        "forks": 8,
        "stars": 40,
        "watchers": 2,
        "last_commit": "2025-03-06T19:08:06Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for deepfates/mcp-replicate: 403; ClosedIssuesError: API error (closed issues) for deepfates/mcp-replicate: 403"
    },
    "Rijksmuseum": {
        "name": "Rijksmuseum",
        "repo_url": "https://github.com/r-huijts/rijksmuseum-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.0.4",
                "axios": "^1.7.9",
                "dotenv": "^16.4.7"
            },
            "devDependencies": {
                "@types/node": "^18.0.0",
                "typescript": "^5.0.0"
            }
        },
        "has_dockerfile": false,
        "forks": 6,
        "stars": 33,
        "watchers": 4,
        "last_commit": "2025-02-07T09:28:40Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for r-huijts/rijksmuseum-mcp: 403; ClosedIssuesError: API error (closed issues) for r-huijts/rijksmuseum-mcp: 403"
    },
    "Riza": {
        "name": "Riza",
        "repo_url": "https://github.com/riza-io/riza-mcp",
        "type": "official",
        "language_stack": [
            "TypeScript"
        ],
        "package_manager": [
            "npm",
            "yarn"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 6,
        "watchers": 1,
        "last_commit": "2024-12-17T20:22:09Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for riza-io/riza-mcp: 403; ClosedIssuesError: API error (closed issues) for riza-io/riza-mcp: 403"
    },
    "Rquest": {
        "name": "Rquest",
        "repo_url": "https://github.com/xxxbrian/mcp-rquest",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "markdownify>=0.13.1,<0.14.0",
                "mcp[cli]>=1.4.1",
                "rnet>=2.0.0",
                "tiktoken>=0.5.0",
                "marker-pdf>=1.6.1"
            ],
            "devDependencies": [
                "ruff>=0.0.292",
                "pytest>=7.0.0",
                "pytest-asyncio>=0.21.1",
                "black>=23.9.1",
                "build>=1.0.3",
                "twine>=6.1.0"
            ]
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 8,
        "watchers": 1,
        "last_commit": "2025-03-22T17:36:06Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for xxxbrian/mcp-rquest: 403; ClosedIssuesError: API error (closed issues) for xxxbrian/mcp-rquest: 403"
    },
    "Salesforce MCP": {
        "name": "Salesforce MCP",
        "repo_url": "https://github.com/smn2gnt/MCP-Salesforce",
        "type": "community",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 8,
        "stars": 37,
        "watchers": 1,
        "last_commit": "2024-12-21T05:06:16Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for smn2gnt/MCP-Salesforce: 403; ClosedIssuesError: API error (closed issues) for smn2gnt/MCP-Salesforce: 403; FileListAnalysisError: Empty file list"
    },
    "Scholarly": {
        "name": "Scholarly",
        "repo_url": "https://github.com/adityak74/mcp-scholarly",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "arxiv>=2.1.3",
                "free-proxy>=1.1.3",
                "mcp>=1.1.2",
                "scholarly>=1.7.11"
            ],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Use a Python image with uv pre-installed\nFROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv\n\n# Install the project into `/app`\nWORKDIR /app\n\n# Enable bytecode compilation\nENV UV_COMPILE_BYTECODE=1\n\n# Copy from the cache instead of linking since it's a mounted volume\nENV UV_LINK_MODE=copy\n\n# Install the project's dependencies using the lockfile and settings\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    --mount=type=bind,source=uv.lock,target=uv.lock \\\n    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \\\n    uv sync --frozen --no-install-project --no-dev --no-editable\n\n# Then, add the rest of the project source code and install it\n# Installing separately from its dependencies allows optimal layer caching\nADD . /app\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    uv sync --frozen --no-dev --no-editable\n\nFROM python:3.12-slim-bookworm\n\nWORKDIR /app\n \nCOPY --from=uv /root/.local /root/.local\nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\n\n# Place executables in the environment at the front of the path\nENV PATH=\"/app/.venv/bin:$PATH\"\n\n# when running the container, add --db-path and a bind mount to the host's db file\nENTRYPOINT [\"mcp-scholarly\"]\n",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
        "forks": 6,
        "stars": 48,
        "watchers": 2,
        "last_commit": "2025-03-24T03:09:04Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": true,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for adityak74/mcp-scholarly: 403; ClosedIssuesError: API error (closed issues) for adityak74/mcp-scholarly: 403"
    },
    "ScreenshotOne": {
        "name": "ScreenshotOne",
        "repo_url": "https://github.com/screenshotone/mcp/",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.5.0",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@types/node": "^22.13.4",
                "typescript": "^5.7.3"
            }
        },
        "has_dockerfile": false,
        "forks": 3,
        "stars": 11,
        "watchers": 1,
        "last_commit": "2025-03-29T15:29:16Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for screenshotone/mcp: 403; ClosedIssuesError: API error (closed issues) for screenshotone/mcp: 403"
    },
    "SearXNG": {
        "name": "SearXNG",
        "repo_url": "https://github.com/ihor-sokoliuk/mcp-searxng",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.0.1",
                "node-html-markdown": "^1.3.0"
            },
            "devDependencies": {
                "@types/node": "^22.10.2",
                "shx": "^0.3.4",
                "typescript": "^5.7.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.12-alpine AS builder\n\n# Must be entire project because `prepare` script is run during `npm install` and requires all files.\nCOPY ./ /app\nCOPY tsconfig.json /tsconfig.json\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nFROM node:22-alpine AS release\n\nWORKDIR /app\n\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\nENV NODE_ENV=production\n\nRUN npm ci --ignore-scripts --omit-dev\n\nENTRYPOINT [\"node\", \"dist/index.js\"]",
        "base_docker_image": "node:22.12-alpine",
        "forks": 8,
        "stars": 38,
        "watchers": 1,
        "last_commit": "2025-02-17T18:52:11Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for ihor-sokoliuk/mcp-searxng: 403; ClosedIssuesError: API error (closed issues) for ihor-sokoliuk/mcp-searxng: 403"
    },
    "Search1API": {
        "name": "Search1API",
        "repo_url": "https://github.com/fatwang2/search1api-mcp",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.7.0",
                "axios": "^1.7.8",
                "dotenv": "^16.4.5"
            },
            "devDependencies": {
                "@types/node": "^20.11.24",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 21,
        "stars": 105,
        "watchers": 2,
        "last_commit": "2025-03-28T13:48:36Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for fatwang2/search1api-mcp: 403; ClosedIssuesError: API error (closed issues) for fatwang2/search1api-mcp: 403"
    },
    "Semgrep": {
        "name": "Semgrep",
        "repo_url": "https://github.com/semgrep/mcp",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp[cli]>=1.3.0",
                "semgrep>=1.10.0",
                "fastapi>=0.115.11"
            ],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Base image with Python and uv\nFROM ghcr.io/astral-sh/uv:python3.13-bookworm-slim AS base\n\n# Create a non-root user and set proper permissions\nRUN groupadd -r app && useradd --no-log-init -r -g app app \\\n    && mkdir -p /home/app/.cache/uv /app \\\n    && chown -R app:app /home/app /app\n\n# Switch to non-root user before doing anything\nUSER app\n\n# Set working directory\nWORKDIR /app\n\n# Enable bytecode compilation and optimize caching\nENV UV_COMPILE_BYTECODE=1 UV_LINK_MODE=copy PATH=\"/app/.venv/bin:$PATH\"\n\n# Copy the entire application source code\nCOPY --chown=app:app . .\n\n# Create a virtual environment and install dependencies **as non-root**\nRUN python -m venv /app/.venv \\\n    && uv pip install --no-cache .\n\n# Default command to run the application\nCMD [\"uv\", \"run\", \"--with\", \"fastmcp\", \"fastmcp\", \"run\", \"server.py\", \"-t\", \"sse\"]",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.13-bookworm-slim",
        "forks": 4,
        "stars": 28,
        "watchers": 4,
        "last_commit": "2025-03-28T23:08:52Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for semgrep/mcp: 403; ClosedIssuesError: API error (closed issues) for semgrep/mcp: 403"
    },
    "Sentry": {
        "name": "Sentry",
        "repo_url": "https://github.com/modelcontextprotocol/servers/tree/main/src/sentry",
        "type": "reference",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.0.0"
            ],
            "devDependencies": [
                "pyright>=1.1.389",
                "pytest>=8.3.3",
                "ruff>=0.8.0"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Use a Python image with uv pre-installed\nFROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv\n\n# Install the project into `/app`\nWORKDIR /app\n\n# Enable bytecode compilation\nENV UV_COMPILE_BYTECODE=1\n\n# Copy from the cache instead of linking since it's a mounted volume\nENV UV_LINK_MODE=copy\n\n# Install the project's dependencies using the lockfile and settings\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    --mount=type=bind,source=uv.lock,target=uv.lock \\\n    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \\\n    uv sync --frozen --no-install-project --no-dev --no-editable\n\n# Then, add the rest of the project source code and install it\n# Installing separately from its dependencies allows optimal layer caching\nADD . /app\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    uv sync --frozen --no-dev --no-editable\n\nFROM python:3.12-slim-bookworm\n\nWORKDIR /app\n \nCOPY --from=uv /root/.local /root/.local\nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\n\n# Place executables in the environment at the front of the path\nENV PATH=\"/app/.venv/bin:$PATH\"\n\n# when running the container, add --db-path and a bind mount to the host's db file\nENTRYPOINT [\"mcp-server-sentry\"]\n\n",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
        "forks": 2985,
        "stars": 28753,
        "watchers": 208,
        "last_commit": "2025-03-31T15:41:32Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for modelcontextprotocol/servers: 403; ClosedIssuesError: API error (closed issues) for modelcontextprotocol/servers: 403"
    },
    "Sequential Thinking": {
        "name": "Sequential Thinking",
        "repo_url": "https://github.com/modelcontextprotocol/servers/tree/main/src/sequentialthinking",
        "type": "reference",
        "language_stack": [
            "TypeScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.5.0",
                "chalk": "^5.3.0",
                "yargs": "^17.7.2"
            },
            "devDependencies": {
                "@types/node": "^22",
                "@types/yargs": "^17.0.32",
                "shx": "^0.3.4",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.12-alpine AS builder\n\nCOPY src/sequentialthinking /app\nCOPY tsconfig.json /tsconfig.json\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nRUN --mount=type=cache,target=/root/.npm-production npm ci --ignore-scripts --omit-dev\n\nFROM node:22-alpine AS release\n\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\nENV NODE_ENV=production\n\nWORKDIR /app\n\nRUN npm ci --ignore-scripts --omit-dev\n\nENTRYPOINT [\"node\", \"dist/index.js\"]\n",
        "base_docker_image": "node:22.12-alpine",
        "forks": 2985,
        "stars": 28753,
        "watchers": 208,
        "last_commit": "2025-03-31T15:41:32Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for modelcontextprotocol/servers: 403; ClosedIssuesError: API error (closed issues) for modelcontextprotocol/servers: 403"
    },
    "ServiceNow": {
        "name": "ServiceNow",
        "repo_url": "https://github.com/osomai/servicenow-mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp[cli]==1.3.0",
                "requests>=2.28.0",
                "pydantic>=2.0.0",
                "python-dotenv>=1.0.0",
                "starlette>=0.27.0",
                "uvicorn>=0.22.0",
                "httpx>=0.24.0"
            ],
            "devDependencies": [
                "pytest>=7.0.0",
                "pytest-cov>=4.0.0",
                "black>=23.0.0",
                "isort>=5.12.0",
                "mypy>=1.0.0",
                "ruff>=0.0.1"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM python:3.11-slim\n\nWORKDIR /app\n\n# Copy project files\nCOPY pyproject.toml README.md LICENSE ./\nCOPY src/ ./src/\n\n# Install the package in development mode\nRUN pip install -e .\n\n# Expose the port the app runs on\nEXPOSE 8080\n\n# Command to run the application using the provided CLI\nCMD [\"servicenow-mcp-sse\", \"--host=0.0.0.0\", \"--port=8080\"] ",
        "base_docker_image": "python:3.11-slim",
        "forks": 15,
        "stars": 28,
        "watchers": 0,
        "last_commit": "2025-03-27T19:47:04Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": true,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for osomai/servicenow-mcp: 403; ClosedIssuesError: API error (closed issues) for osomai/servicenow-mcp: 403"
    },
    "SingleStore": {
        "name": "SingleStore",
        "repo_url": "https://github.com/singlestore-labs/mcp-server-singlestore",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.3.0",
                "singlestoredb>=1.12.0"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\nFROM python:3.11-alpine\n\n# Set working directory\nWORKDIR /app\n\n# Install build dependencies\nRUN apk add --no-cache gcc musl-dev linux-headers\n\n# Copy requirements and project files\nCOPY pyproject.toml ./\nCOPY requirements.txt ./\nCOPY README.md ./\nCOPY src/ ./src/\nCOPY uv.lock ./\n\n# Install pipenv system dependencies\n# Install project dependencies using pip\nRUN pip install --upgrade pip \\\n    && pip install --ignore-installed -r requirements.txt || true\n\n# Install project using Hatchling build\nRUN pip install hatchling \\\n    && pip install .\n\n# Expose any port if needed (not strictly needed for stdio based server)\n\nCMD [\"python\", \"src/server/server.py\"]\n",
        "base_docker_image": "python:3.11-alpine",
        "forks": 0,
        "stars": 5,
        "watchers": 1,
        "last_commit": "2025-03-31T08:21:11Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for singlestore-labs/mcp-server-singlestore: 403; ClosedIssuesError: API error (closed issues) for singlestore-labs/mcp-server-singlestore: 403"
    },
    "Siri Shortcuts": {
        "name": "Siri Shortcuts",
        "repo_url": "https://github.com/dvcrn/mcp-server-siri-shortcuts",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.0.1",
                "express": "^4.21.1",
                "zod": "^3.23.8",
                "zod-to-json-schema": "^3.23.5"
            },
            "devDependencies": {
                "@types/express": "^5.0.0",
                "shx": "^0.3.4",
                "typescript": "^5.6.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.12-alpine AS builder\n\nCOPY src/everything /app\nCOPY tsconfig.json /tsconfig.json\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nFROM node:22-alpine AS release\n\nWORKDIR /app\n\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\nENV NODE_ENV=production\n\nRUN npm ci --ignore-scripts --omit-dev\n\nCMD [\"node\", \"dist/index.js\"]",
        "base_docker_image": "node:22.12-alpine",
        "forks": 6,
        "stars": 98,
        "watchers": 3,
        "last_commit": "2025-02-25T09:41:19Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for dvcrn/mcp-server-siri-shortcuts: 403; ClosedIssuesError: API error (closed issues) for dvcrn/mcp-server-siri-shortcuts: 403"
    },
    "Slack": {
        "name": "Slack",
        "repo_url": "https://github.com/modelcontextprotocol/servers/tree/main/src/slack",
        "type": "reference",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.0.1"
            },
            "devDependencies": {
                "@types/node": "^22",
                "shx": "^0.3.4",
                "typescript": "^5.6.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.12-alpine AS builder\n\n# Must be entire project because `prepare` script is run during `npm install` and requires all files.\nCOPY src/slack /app\nCOPY tsconfig.json /tsconfig.json\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nRUN --mount=type=cache,target=/root/.npm-production npm ci --ignore-scripts --omit-dev\n\nFROM node:22-alpine AS release\n\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\nENV NODE_ENV=production\n\nWORKDIR /app\n\nRUN npm ci --ignore-scripts --omit-dev\n\nENTRYPOINT [\"node\", \"dist/index.js\"]\n",
        "base_docker_image": "node:22.12-alpine",
        "forks": 2985,
        "stars": 28753,
        "watchers": 208,
        "last_commit": "2025-03-31T15:41:32Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for modelcontextprotocol/servers: 403; ClosedIssuesError: API error (closed issues) for modelcontextprotocol/servers: 403"
    },
    "Smithery": {
        "name": "Smithery",
        "repo_url": "https://smithery.ai/",
        "type": "resource",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "error": "Could not parse GitHub URL"
    },
    "Snowflake": {
        "name": "Snowflake",
        "repo_url": "https://github.com/isaacwasserman/mcp-snowflake-server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.0.0",
                "snowflake-connector-python[pandas]>=3.13.2",
                "pandas>=2.2.3",
                "python-dotenv>=1.0.1",
                "sqlparse>=0.5.3",
                "snowflake-snowpark-python>=1.26.0"
            ],
            "devDependencies": [
                "pyright>=1.1.389"
            ]
        },
        "has_dockerfile": false,
        "forks": 6,
        "stars": 26,
        "watchers": 1,
        "last_commit": "2025-02-12T02:38:15Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for isaacwasserman/mcp-snowflake-server: 403; ClosedIssuesError: API error (closed issues) for isaacwasserman/mcp-snowflake-server: 403"
    },
    "Solana Agent Kit": {
        "name": "Solana Agent Kit",
        "repo_url": "https://github.com/sendaifun/solana-agent-kit/tree/main/examples/agent-kit-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.5.0",
                "dotenv": "^16.4.7",
                "solana-agent-kit": "1.4.8",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@types/node": "^22.13.4",
                "typescript": "^5.7.3"
            }
        },
        "has_dockerfile": false,
        "forks": 627,
        "stars": 1168,
        "watchers": 15,
        "last_commit": "2025-04-01T08:08:04Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for sendaifun/solana-agent-kit: 403; ClosedIssuesError: API error (closed issues) for sendaifun/solana-agent-kit: 403"
    },
    "Spotify": {
        "name": "Spotify",
        "repo_url": "https://github.com/varunneal/spotify-mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp==1.3.0",
                "python-dotenv>=1.0.1",
                "spotipy==2.24.0"
            ],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 25,
        "stars": 140,
        "watchers": 3,
        "last_commit": "2025-03-20T00:44:17Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for varunneal/spotify-mcp: 403; ClosedIssuesError: API error (closed issues) for varunneal/spotify-mcp: 403"
    },
    "Sqlite": {
        "name": "Sqlite",
        "repo_url": "https://github.com/modelcontextprotocol/servers/tree/main/src/sqlite",
        "type": "reference",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.0.0"
            ],
            "devDependencies": [
                "pyright>=1.1.389"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Use a Python image with uv pre-installed\nFROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv\n\n# Install the project into `/app`\nWORKDIR /app\n\n# Enable bytecode compilation\nENV UV_COMPILE_BYTECODE=1\n\n# Copy from the cache instead of linking since it's a mounted volume\nENV UV_LINK_MODE=copy\n\n# Install the project's dependencies using the lockfile and settings\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    --mount=type=bind,source=uv.lock,target=uv.lock \\\n    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \\\n    uv sync --frozen --no-install-project --no-dev --no-editable\n\n# Then, add the rest of the project source code and install it\n# Installing separately from its dependencies allows optimal layer caching\nADD . /app\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    uv sync --frozen --no-dev --no-editable\n\nFROM python:3.12-slim-bookworm\n\nWORKDIR /app\n \nCOPY --from=uv /root/.local /root/.local\nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\n\n# Place executables in the environment at the front of the path\nENV PATH=\"/app/.venv/bin:$PATH\"\n\n# when running the container, add --db-path and a bind mount to the host's db file\nENTRYPOINT [\"mcp-server-sqlite\"]\n\n",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
        "forks": 2985,
        "stars": 28753,
        "watchers": 208,
        "last_commit": "2025-03-31T15:41:32Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for modelcontextprotocol/servers: 403; ClosedIssuesError: API error (closed issues) for modelcontextprotocol/servers: 403"
    },
    "StarRocks": {
        "name": "StarRocks",
        "repo_url": "https://github.com/StarRocks/mcp-server-starrocks",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.0.0",
                "mysql-connector-python>=9.2.0"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": false,
        "forks": 5,
        "stars": 10,
        "watchers": 3,
        "last_commit": "2025-03-11T13:14:26Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for StarRocks/mcp-server-starrocks: 403; ClosedIssuesError: API error (closed issues) for StarRocks/mcp-server-starrocks: 403"
    },
    "Starwind UI": {
        "name": "Starwind UI",
        "repo_url": "https://github.com/Boston343/starwind-ui-mcp/",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.5.0",
                "dotenv": "^16.4.1",
                "express": "^4.18.2"
            },
            "devDependencies": {
                "@types/express": "^4.17.21",
                "@types/node": "^20.11.0",
                "@vitest/coverage-v8": "^3.0.8",
                "eslint": "^8.56.0",
                "nodemon": "^3.0.3",
                "prettier": "^3.5.3",
                "typescript": "^5.8.2",
                "vitest": "^3.0.8"
            }
        },
        "has_dockerfile": false,
        "forks": 6,
        "stars": 8,
        "watchers": 1,
        "last_commit": "2025-03-14T10:12:50Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for Boston343/starwind-ui-mcp: 403; ClosedIssuesError: API error (closed issues) for Boston343/starwind-ui-mcp: 403"
    },
    "Stripe": {
        "name": "Stripe",
        "repo_url": "https://github.com/atharvagupta2003/mcp-stripe",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "httpx>=0.28.1",
                "mcp[cli]>=1.2.1"
            ],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use the Python base image\nFROM python:3.12-slim\n\n# Set the working directory\nWORKDIR /app\n\n# Copy the pyproject.toml and uv.lock files\nCOPY pyproject.toml uv.lock /app/\n\n# Install the dependencies\nRUN pip install --no-cache-dir uv\n\n# Copy the application code\nCOPY src /app/src\n\n# Set environment variables\nENV UV_COMPILE_BYTECODE=1\nENV UV_LINK_MODE=copy\n\n# Ensure that .venv/bin is in the PATH to access installed packages\nENV PATH=\"/app/.venv/bin:$PATH\"\n\n# Copy .env.example to .env (to be configured with actual values in practice)\nCOPY .env.example .env\n\n# Run the MCP server\nENTRYPOINT [\"uv\", \"run\", \"src/server.py\"]\n",
        "base_docker_image": "python:3.12-slim",
        "forks": 1,
        "stars": 18,
        "watchers": 1,
        "last_commit": "2025-02-13T09:03:39Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for atharvagupta2003/mcp-stripe: 403; ClosedIssuesError: API error (closed issues) for atharvagupta2003/mcp-stripe: 403"
    },
    "TMDB": {
        "name": "TMDB",
        "repo_url": "https://github.com/Laksh-star/mcp-server-tmdb",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.0.3",
                "node-fetch": "^3.3.2"
            },
            "devDependencies": {
                "@types/node": "^22.10.1",
                "@types/node-fetch": "^2.6.12",
                "shx": "^0.3.4",
                "typescript": "^5.7.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\nFROM node:lts-alpine\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json and package-lock.json are copied\nCOPY package*.json ./\n\n# Install dependencies (ignoring prepare scripts to avoid auto-build if necessary)\nRUN npm install --ignore-scripts\n\n# Build the project explicitly\nCOPY tsconfig.json ./\nCOPY src ./src\nRUN npm run build\n\n# Bundle app source\n# Expose a volume if necessary, but here we assume a command line tool\n\n# Default command\nCMD [\"node\", \"dist/index.js\"]\n",
        "base_docker_image": "node:lts-alpine",
        "forks": 2,
        "stars": 15,
        "watchers": 1,
        "last_commit": "2025-02-27T05:48:08Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for Laksh-star/mcp-server-tmdb: 403; ClosedIssuesError: API error (closed issues) for Laksh-star/mcp-server-tmdb: 403"
    },
    "Tavily": {
        "name": "Tavily",
        "repo_url": "https://github.com/tavily-ai/tavily-mcp",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.6.0",
                "dotenv": "^16.4.5",
                "axios": "^1.6.7"
            },
            "devDependencies": {
                "@types/node": "^20.11.24",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.12-alpine AS builder\n\nCOPY . /app\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nFROM node:22-alpine AS release\n\nWORKDIR /app\n\nCOPY --from=builder /app/build /app/build\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\nENV NODE_ENV=production\nENV TAVILY_API_KEY=your-api-key-here\n\nRUN npm ci --ignore-scripts --omit-dev\n\nENTRYPOINT [\"node\", \"build/index.js\"]\n",
        "base_docker_image": "node:22.12-alpine",
        "forks": 25,
        "stars": 199,
        "watchers": 1,
        "last_commit": "2025-03-23T18:04:16Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for tavily-ai/tavily-mcp: 403; ClosedIssuesError: API error (closed issues) for tavily-ai/tavily-mcp: 403"
    },
    "Tavily search": {
        "name": "Tavily search",
        "repo_url": "https://github.com/RamXX/mcp-tavily",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.0.0",
                "pydantic>=2.10.2",
                "python-dotenv>=1.0.1",
                "tavily-python>=0.5.0"
            ],
            "devDependencies": [
                "pytest>=8.3.5",
                "pytest-asyncio>=0.25.3",
                "pytest-cov>=6.0.0",
                "pytest-mock>=3.14.0"
            ]
        },
        "has_dockerfile": false,
        "forks": 7,
        "stars": 41,
        "watchers": 2,
        "last_commit": "2025-03-15T20:23:39Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for RamXX/mcp-tavily: 403; ClosedIssuesError: API error (closed issues) for RamXX/mcp-tavily: 403"
    },
    "Telegram": {
        "name": "Telegram",
        "repo_url": "https://github.com/chigwell/telegram-mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "dotenv>=0.9.9",
                "httpx>=0.28.1",
                "mcp[cli]>=1.4.1",
                "nest-asyncio>=1.6.0",
                "telethon>=1.39.0"
            ],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 10,
        "stars": 15,
        "watchers": 1,
        "last_commit": "2025-03-20T15:49:32Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for chigwell/telegram-mcp: 403; ClosedIssuesError: API error (closed issues) for chigwell/telegram-mcp: 403"
    },
    "Template MCP Server": {
        "name": "Template MCP Server",
        "repo_url": "https://github.com/mcpdotdirect/template-mcp-server",
        "type": "framework",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.7.0",
                "cors": "^2.8.5",
                "express": "^4.21.2",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@types/bun": "latest",
                "@types/cors": "^2.8.17",
                "@types/express": "^5.0.0",
                "@types/node": "^20.17.24",
                "conventional-changelog-cli": "^5.0.0"
            }
        },
        "has_dockerfile": false,
        "forks": 6,
        "stars": 6,
        "watchers": 0,
        "last_commit": "2025-03-31T22:23:30Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for mcpdotdirect/template-mcp-server: 403; ClosedIssuesError: API error (closed issues) for mcpdotdirect/template-mcp-server: 403"
    },
    "Terminal-Control": {
        "name": "Terminal-Control",
        "repo_url": "https://github.com/GongRzhe/terminal-controller-mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "requirements.txt",
        "packages": {
            "dependencies": [
                "mcp>=1.2.0",
                "httpx>=0.25.0"
            ],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 3,
        "stars": 12,
        "watchers": 1,
        "last_commit": "2025-03-19T14:42:18Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for GongRzhe/terminal-controller-mcp: 403; ClosedIssuesError: API error (closed issues) for GongRzhe/terminal-controller-mcp: 403"
    },
    "Thirdweb": {
        "name": "Thirdweb",
        "repo_url": "https://github.com/thirdweb-dev/ai/tree/main/python/thirdweb-mcp",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.3.0,<2",
                "click>=8.1.8,<9",
                "thirdweb-ai[mcp]==0.1.7"
            ],
            "devDependencies": [
                "ruff>=0.9.10,<0.10",
                "pyright>=1.1.396,<2"
            ]
        },
        "has_dockerfile": false,
        "forks": 3,
        "stars": 7,
        "watchers": 3,
        "last_commit": "2025-03-31T14:09:50Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for thirdweb-dev/ai: 403; ClosedIssuesError: API error (closed issues) for thirdweb-dev/ai: 403"
    },
    "Ticketmaster": {
        "name": "Ticketmaster",
        "repo_url": "https://github.com/delorenj/mcp-server-ticketmaster",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.6.0",
                "@playwright/test": "^1.49.1",
                "axios": "^1.6.5",
                "dotenv": "^16.3.1"
            },
            "devDependencies": {
                "@types/node": "^20.11.5",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 3,
        "stars": 6,
        "watchers": 1,
        "last_commit": "2025-01-18T10:19:58Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for delorenj/mcp-server-ticketmaster: 403; ClosedIssuesError: API error (closed issues) for delorenj/mcp-server-ticketmaster: 403"
    },
    "Time": {
        "name": "Time",
        "repo_url": "https://github.com/modelcontextprotocol/servers/tree/main/src/time",
        "type": "reference",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.0.0",
                "pydantic>=2.0.0",
                "tzdata>=2024.2"
            ],
            "devDependencies": [
                "freezegun>=1.5.1",
                "pyright>=1.1.389",
                "pytest>=8.3.3",
                "ruff>=0.8.1"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Use a Python image with uv pre-installed\nFROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv\n\n# Install the project into `/app`\nWORKDIR /app\n\n# Enable bytecode compilation\nENV UV_COMPILE_BYTECODE=1\n\n# Copy from the cache instead of linking since it's a mounted volume\nENV UV_LINK_MODE=copy\n\n# Install the project's dependencies using the lockfile and settings\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    --mount=type=bind,source=uv.lock,target=uv.lock \\\n    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \\\n    uv sync --frozen --no-install-project --no-dev --no-editable\n\n# Then, add the rest of the project source code and install it\n# Installing separately from its dependencies allows optimal layer caching\nADD . /app\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    uv sync --frozen --no-dev --no-editable\n\nFROM python:3.12-slim-bookworm\n\nWORKDIR /app\n \nCOPY --from=uv /root/.local /root/.local\nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\n\n# Place executables in the environment at the front of the path\nENV PATH=\"/app/.venv/bin:$PATH\"\n\n# when running the container, add --db-path and a bind mount to the host's db file\nENTRYPOINT [\"mcp-server-time\"]\n",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
        "forks": 2985,
        "stars": 28753,
        "watchers": 208,
        "last_commit": "2025-03-31T15:41:32Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for modelcontextprotocol/servers: 403; ClosedIssuesError: API error (closed issues) for modelcontextprotocol/servers: 403"
    },
    "Tinybird": {
        "name": "Tinybird",
        "repo_url": "https://github.com/tinybirdco/mcp-tinybird",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "httpx>=0.27.2",
                "mcp>=1.0.0",
                "python-dotenv>=1.0.1",
                "tinybird-python-sdk>=0.1.6",
                "uvicorn>=0.27.0",
                "starlette>=0.36.0"
            ],
            "devDependencies": [
                "black>=23.12.1",
                "pyproject-toml>=0.0.10"
            ]
        },
        "has_dockerfile": false,
        "forks": 8,
        "stars": 54,
        "watchers": 2,
        "last_commit": "2025-03-24T22:28:06Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": true,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for tinybirdco/mcp-tinybird: 403; ClosedIssuesError: API error (closed issues) for tinybirdco/mcp-tinybird: 403"
    },
    "Todoist": {
        "name": "Todoist",
        "repo_url": "https://github.com/abhiz123/todoist-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@doist/todoist-api-typescript": "^3.0.3",
                "@modelcontextprotocol/sdk": "0.5.0"
            },
            "devDependencies": {
                "@types/node": "^22.10.1",
                "shx": "^0.3.4",
                "typescript": "^5.7.2"
            }
        },
        "has_dockerfile": false,
        "forks": 21,
        "stars": 105,
        "watchers": 4,
        "last_commit": "2025-03-14T08:13:28Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for abhiz123/todoist-mcp-server: 403; ClosedIssuesError: API error (closed issues) for abhiz123/todoist-mcp-server: 403"
    },
    "Toolbase": {
        "name": "Toolbase",
        "repo_url": "https://gettoolbase.ai",
        "type": "resource",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "error": "Could not parse GitHub URL"
    },
    "Travel Planner": {
        "name": "Travel Planner",
        "repo_url": "https://github.com/GongRzhe/TRAVEL-PLANNER-MCP-Server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.5.0",
                "@googlemaps/google-maps-services-js": "^3.3.41",
                "node-fetch": "^3.3.2",
                "zod": "^3.22.4",
                "zod-to-json-schema": "^3.22.4"
            },
            "devDependencies": {
                "@types/node": "^22",
                "@types/google.maps": "^3.54.10",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.12-alpine as builder\n\nCOPY src/travel-planner /app\nCOPY tsconfig.json /tsconfig.json\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=/root/.npm npm install\n\nFROM node:22-alpine AS release\n\nWORKDIR /app\n\nCOPY --from=builder /app/dist /app/dist\nCOPY --from=builder /app/package.json /app/package.json\nCOPY --from=builder /app/package-lock.json /app/package-lock.json\n\nENV NODE_ENV=production\n\nRUN npm ci --ignore-scripts --omit-dev\n\nENTRYPOINT [\"node\", \"dist/index.js\"] ",
        "base_docker_image": "node:22.12-alpine",
        "forks": 4,
        "stars": 21,
        "watchers": 2,
        "last_commit": "2025-03-12T10:55:44Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for GongRzhe/TRAVEL-PLANNER-MCP-Server: 403; ClosedIssuesError: API error (closed issues) for GongRzhe/TRAVEL-PLANNER-MCP-Server: 403"
    },
    "Typesense": {
        "name": "Typesense",
        "repo_url": "https://github.com/suhail-ak-s/mcp-typesense-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.6.0",
                "typesense": "^2.0.3"
            },
            "devDependencies": {
                "@types/node": "^22.13.5",
                "ts-node": "^10.9.2",
                "tsx": "^4.19.3",
                "typescript": "^5.7.3"
            }
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 3,
        "watchers": 1,
        "last_commit": "2025-03-18T08:49:00Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for suhail-ak-s/mcp-typesense-server: 403; ClosedIssuesError: API error (closed issues) for suhail-ak-s/mcp-typesense-server: 403"
    },
    "UnifAI": {
        "name": "UnifAI",
        "repo_url": "https://github.com/unifai-network/unifai-mcp-server",
        "type": "official",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 1,
        "watchers": 1,
        "last_commit": "2025-03-11T15:02:44Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for unifai-network/unifai-mcp-server: 403; ClosedIssuesError: API error (closed issues) for unifai-network/unifai-mcp-server: 403"
    },
    "Unity Catalog": {
        "name": "Unity Catalog",
        "repo_url": "https://github.com/ognis1205/mcp-server-unitycatalog",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.2.1",
                "pydantic>=2.10.6",
                "pydantic-settings>=2.7.1",
                "unitycatalog-ai>=0.1.0"
            ],
            "devDependencies": [
                "pyright>=1.1.393",
                "ruff>=0.9.4",
                "pytest>=8.3.4"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Use a Python image with uv pre-installed\nFROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv\n\n# Install the project into `/app`\nWORKDIR /app\n\n# Enable bytecode compilation\nENV UV_COMPILE_BYTECODE=1\n\n# Copy from the cache instead of linking since it's a mounted volume\nENV UV_LINK_MODE=copy\n\n# Install the project's dependencies using the lockfile and settings\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    --mount=type=bind,source=uv.lock,target=uv.lock \\\n    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \\\n    uv sync --frozen --no-install-project --no-dev --no-editable\n\n# Then, add the rest of the project source code and install it\n# Installing separately from its dependencies allows optimal layer caching\nADD . /app\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    uv sync --frozen --no-dev --no-editable\n\n# Production environment\nFROM python:3.12-slim-bookworm\n\n# Install the project into `/app`\nWORKDIR /app\n\n# Copy installed packages from the uv stage (if any exist in /root/.local)\n# This is typically where user-installed Python packages go when using pip with --user\n#COPY --from=uv /root/.loca[l] /root/.local\n\n# Copy the virtual environment from the uv stage\n# This ensures the application runs with the pre-installed dependencies\nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\n\n# Place executables in the environment at the front of the path\nENV PATH=\"/app/.venv/bin:$PATH\"\n\n# when running the container, add --db-path and a bind mount to the host's db file\nENTRYPOINT [\"mcp-server-unitycatalog\"]",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
        "forks": 4,
        "stars": 9,
        "watchers": 2,
        "last_commit": "2025-03-28T19:41:05Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for ognis1205/mcp-server-unitycatalog: 403; ClosedIssuesError: API error (closed issues) for ognis1205/mcp-server-unitycatalog: 403"
    },
    "Unity Integration (Advanced)": {
        "name": "Unity Integration (Advanced)",
        "repo_url": "https://github.com/quazaai/UnityMCPIntegration",
        "type": "community",
        "language_stack": [
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "com.unity.nuget.newtonsoft-json": "3.2.1"
            },
            "devDependencies": {}
        },
        "has_dockerfile": false,
        "forks": 3,
        "stars": 28,
        "watchers": 2,
        "last_commit": "2025-03-22T12:12:09Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for quazaai/UnityMCPIntegration: 403; ClosedIssuesError: API error (closed issues) for quazaai/UnityMCPIntegration: 403"
    },
    "Unity3d Game Engine": {
        "name": "Unity3d Game Engine",
        "repo_url": "https://github.com/CoderGamester/mcp-unity",
        "type": "community",
        "language_stack": [
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "com.unity.nuget.newtonsoft-json": "3.2.1"
            },
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 26,
        "stars": 210,
        "watchers": 7,
        "last_commit": "2025-03-30T23:09:20Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for CoderGamester/mcp-unity: 403; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Unstructured": {
        "name": "Unstructured",
        "repo_url": "https://github.com/Unstructured-IO/UNS-MCP",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "anthropic>=0.49.0",
                "boto3>=1.37.14",
                "firecrawl-py>=1.14.1",
                "mcp[cli]>=1.3.0",
                "pytest>=8.3.5",
                "pytest-asyncio>=0.25.3",
                "notebook>=7.3.3",
                "python-dotenv>=1.0.1",
                "unstructured-client>=0.32.0",
                "pip"
            ],
            "devDependencies": [
                "pre-commit"
            ]
        },
        "has_dockerfile": false,
        "forks": 2,
        "stars": 15,
        "watchers": 12,
        "last_commit": "2025-03-31T21:00:57Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": true,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for Unstructured-IO/UNS-MCP: 403; ClosedIssuesError: API error (closed issues) for Unstructured-IO/UNS-MCP: 403"
    },
    "Vectorize": {
        "name": "Vectorize",
        "repo_url": "https://github.com/vectorize-io/vectorize-mcp-server/",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.4.1",
                "@vectorize-io/vectorize-client": "^0.1.3",
                "dotenv": "^16.4.7",
                "p-queue": "^8.0.1",
                "shx": "^0.3.4"
            },
            "devDependencies": {
                "@types/jest": "^29.5.14",
                "@types/node": "^20.10.5",
                "@typescript-eslint/eslint-plugin": "^7.0.0",
                "@typescript-eslint/parser": "^7.0.0",
                "eslint": "^8.56.0",
                "eslint-config-prettier": "^9.1.0",
                "prettier": "^3.1.1",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 2,
        "stars": 24,
        "watchers": 3,
        "last_commit": "2025-03-28T16:27:38Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for vectorize-io/vectorize-mcp-server: 403; ClosedIssuesError: API error (closed issues) for vectorize-io/vectorize-mcp-server: 403"
    },
    "Vega-Lite": {
        "name": "Vega-Lite",
        "repo_url": "https://github.com/isaacwasserman/mcp-vegalite-server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.0.0",
                "vl-convert-python"
            ],
            "devDependencies": [
                "pyright>=1.1.389"
            ]
        },
        "has_dockerfile": false,
        "forks": 8,
        "stars": 45,
        "watchers": 1,
        "last_commit": "2024-12-12T18:48:35Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Verodat": {
        "name": "Verodat",
        "repo_url": "https://github.com/Verodat/verodat-mcp-server",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.0.3"
            },
            "devDependencies": {
                "@types/chai": "^5.0.1",
                "@types/mocha": "^10.0.10",
                "@types/node": "^22.10.5",
                "@types/sinon": "^17.0.3",
                "chai": "^5.1.2",
                "mocha": "^11.0.1",
                "sinon": "^19.0.2",
                "ts-node": "^10.9.2",
                "typescript": "^5.7.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use a Node.js image for building the project\nFROM node:18-alpine AS builder\n\n# Set the working directory in the container\nWORKDIR /app\n\n# Copy the package.json and package-lock.json to the working directory\nCOPY package.json package-lock.json ./\n\n# Install the dependencies\nRUN npm install\n\n# Copy the rest of the source files to the container\nCOPY . .\n\n# Build the TypeScript project\nRUN npm run build\n\n# Use a minimal Node.js runtime image for running the application\nFROM node:18-alpine\n\n# Set the working directory in the container\nWORKDIR /app\n\n# Copy only the build output and node_modules from the builder stage\nCOPY --from=builder /app/build ./build\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY package.json ./\n\n# Set environment variables\nENV VERODAT_AI_API_KEY=your-verodat-ai-api-key\n\n# Expose any ports if necessary (this depends on how the MCP server operates, e.g., if it needs to listen on a network port)\n# EXPOSE 3000\n\n# Define the command to run the application\nCMD [\"node\", \"build/src/index.js\"]\n",
        "base_docker_image": "node:18-alpine",
        "forks": 0,
        "stars": 1,
        "watchers": 1,
        "last_commit": "2025-03-27T07:14:44Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for Verodat/verodat-mcp-server: 403; ClosedIssuesError: API error (closed issues) for Verodat/verodat-mcp-server: 403"
    },
    "VeyraX": {
        "name": "VeyraX",
        "repo_url": "https://github.com/VeyraX/veyrax-mcp",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.5.0",
                "@types/axios": "^0.9.36",
                "axios": "^1.7.9",
                "dotenv": "^16.4.7",
                "typescript": "^5.7.3",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@types/node": "^22.13.4"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:22.14.0-alpine\n\nWORKDIR /app\n\nCOPY package.json package-lock.json ./\n\nRUN npm install\n\nCOPY . .\n\nRUN npm run build\n\nCMD [\"node\", \"dist/index.js\"] ",
        "base_docker_image": "node:22.14.0-alpine",
        "forks": 2,
        "stars": 16,
        "watchers": 0,
        "last_commit": "2025-04-01T07:16:13Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for VeyraX/veyrax-mcp: 403; ClosedIssuesError: API error (closed issues) for VeyraX/veyrax-mcp: 403"
    },
    "Video Editor": {
        "name": "Video Editor",
        "repo_url": "https://github.com/burningion/video-editing-mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "einops>=0.8.0",
                "manim>=0.18.1",
                "mcp>=1.0.0",
                "numpy>=2.2.2",
                "opentimelineio>=0.17.0",
                "osxphotos>=0.69.2",
                "pillow>=11.0.0",
                "requests>=2.32.3",
                "thefuzz>=0.22.1",
                "timm>=1.0.12",
                "torch>=2.5.1",
                "transformers>=4.47.1",
                "videojungle>=0.1.45"
            ],
            "devDependencies": [
                "ipykernel>=6.29.5",
                "manim>=0.18.1",
                "mcp[cli]===1.2.0rc1",
                "pre-commit>=4.0.1",
                "ruff>=0.8.4"
            ]
        },
        "has_dockerfile": false,
        "forks": 11,
        "stars": 71,
        "watchers": 1,
        "last_commit": "2025-03-30T14:05:50Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Virtual location (Google Street View,etc.)": {
        "name": "Virtual location (Google Street View,etc.)",
        "repo_url": "https://github.com/mfukushim/map-traveler-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@anthropic-ai/sdk": "^0.33.1",
                "@atproto/api": "^0.13.27",
                "@effect/platform": "^0.73.1",
                "@effect/platform-node": "^0.69.1",
                "@effect/sql": "^0.26.1",
                "@effect/sql-sqlite-node": "^0.27.1",
                "@libsql/client": "^0.14.0",
                "@modelcontextprotocol/sdk": "^1.1.1",
                "@pixai-art/client": "^0.4.0",
                "dayjs": "^1.11.13",
                "dotenv": "^16.4.7",
                "drizzle-orm": "^0.38.3",
                "effect": "^3.12.4",
                "form-data": "^4.0.1",
                "geolib": "^3.3.4",
                "jimp": "^1.6.0",
                "sharp": "^0.33.5",
                "ws": "^8.18.0",
                "zod": "^3.24.1"
            },
            "devDependencies": {
                "@babel/cli": "^7.26.4",
                "@babel/core": "^7.26.0",
                "@babel/plugin-transform-export-namespace-from": "^7.25.9",
                "@babel/plugin-transform-modules-commonjs": "^7.26.3",
                "@effect/build-utils": "^0.7.8",
                "@effect/language-service": "^0.2.0",
                "@effect/vitest": "^0.17.0",
                "@types/node": "^22.10.7",
                "@types/ws": "^8.5.13",
                "babel-plugin-annotate-pure-calls": "^0.5.0",
                "drizzle-kit": "^0.30.1",
                "tsx": "^4.19.2",
                "typescript": "^5.7.3",
                "vitest": "^2.1.8"
            }
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 8,
        "watchers": 1,
        "last_commit": "2025-03-31T11:33:22Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "VolcEngine TOS": {
        "name": "VolcEngine TOS",
        "repo_url": "https://github.com/dinghuazhou/sample-mcp-server-tos",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "tos>=2.8.0",
                "mcp>=1.0.0",
                "python-dotenv>=1.0.1"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 2,
        "watchers": 1,
        "last_commit": "2025-03-12T14:20:59Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Wanaku MCP Router": {
        "name": "Wanaku MCP Router",
        "repo_url": "https://github.com/wanaku-ai/wanaku/",
        "type": "community",
        "language_stack": [
            "Java"
        ],
        "package_manager": [
            "maven"
        ],
        "dependencies_file": "pom.xml",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 14,
        "stars": 55,
        "watchers": 0,
        "last_commit": "2025-04-01T08:15:48Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": true,
        "has_tests": true,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Webflow": {
        "name": "Webflow",
        "repo_url": "https://github.com/kapilduraphe/webflow-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.0.4",
                "webflow-api": "^3.0.0",
                "dotenv": "^16.4.1",
                "zod": "^3.22.4"
            },
            "devDependencies": {
                "@types/node": "^20.11.5",
                "prettier": "^3.2.4",
                "ts-node": "^10.9.2",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Stage 1: Build\nFROM node:16-alpine AS builder\n\n# Set working directory\nWORKDIR /app\n\n# Copy package.json and package-lock.json\nCOPY package.json ./\n\n# Install dependencies\nRUN npm install --ignore-scripts\n\n# Copy the source code\nCOPY . .\n\n# Build the project\nRUN npm run build\n\n# Stage 2: Run\nFROM node:16-alpine\n\n# Set working directory\nWORKDIR /app\n\n# Copy only the necessary files\nCOPY --from=builder /app/dist /app/dist\nCOPY package.json ./\n\n# Set environment variables (you should set this in your environment or secrets)\nENV WEBFLOW_API_TOKEN=your-api-token\n\n# Install production dependencies\nRUN npm install --production\n\n# Start the server\nENTRYPOINT [\"node\", \"dist/index.js\"]\n",
        "base_docker_image": "node:16-alpine",
        "forks": 5,
        "stars": 7,
        "watchers": 2,
        "last_commit": "2025-03-21T19:59:06Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Whois MCP": {
        "name": "Whois MCP",
        "repo_url": "https://github.com/bharathvaj-ganesan/whois-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript",
            "Node.js"
        ],
        "package_manager": [
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.6.1",
                "whoiser": "2.0.0-beta.3",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@types/node": "^20.11.24",
                "shx": "^0.3.4",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 3,
        "stars": 2,
        "watchers": 1,
        "last_commit": "2025-03-15T10:21:52Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "WildFly MCP": {
        "name": "WildFly MCP",
        "repo_url": "https://github.com/wildfly-extras/wildfly-mcp",
        "type": "community",
        "language_stack": [
            "Java"
        ],
        "package_manager": [
            "maven"
        ],
        "dependencies_file": "pom.xml",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 4,
        "stars": 3,
        "watchers": 8,
        "last_commit": "2025-03-21T15:04:59Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "Windows CLI": {
        "name": "Windows CLI",
        "repo_url": "https://github.com/SimonB97/win-cli-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "1.0.1",
                "@types/ssh2": "^1.15.1",
                "ssh2": "^1.16.0",
                "yargs": "^17.7.2",
                "zod": "^3.22.4"
            },
            "devDependencies": {
                "@jest/globals": "^29.7.0",
                "@types/jest": "^29.5.11",
                "@types/node": "^20.11.0",
                "@types/yargs": "^17.0.33",
                "jest": "^29.7.0",
                "shx": "^0.3.4",
                "ts-jest": "^29.1.1",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use an official Node.js runtime as a parent image\nFROM node:18-alpine AS build\n\n# Set the working directory in the container\nWORKDIR /app\n\n# Copy the package files and install the dependencies\nCOPY package.json package-lock.json ./\nRUN npm install --ignore-scripts\n\n# Copy the rest of the application\nCOPY . .\n\n# Build the TypeScript code\nRUN npm run build\n\n# Use a lighter image for the runtime\nFROM node:18-alpine AS runtime\n\nWORKDIR /app\n\n# Copy the built application from the build stage\nCOPY --from=build /app/dist ./dist\nCOPY --from=build /app/package.json ./package.json\nCOPY --from=build /app/package-lock.json ./package-lock.json\n\n# Install only production dependencies\nRUN npm ci --omit=dev\n\n# Command to run the application\nENTRYPOINT [\"node\", \"dist/index.js\"]\n",
        "base_docker_image": "node:18-alpine",
        "forks": 20,
        "stars": 106,
        "watchers": 4,
        "last_commit": "2025-03-03T09:18:07Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "World Bank data API": {
        "name": "World Bank data API",
        "repo_url": "https://github.com/anshumax/world_bank_mcp_server",
        "type": "community",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 3,
        "stars": 10,
        "watchers": 1,
        "last_commit": "2025-02-14T11:36:35Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search; FileListAnalysisError: Empty file list"
    },
    "X (Twitter)": {
        "name": "X (Twitter)",
        "repo_url": "https://github.com/vidhupv/x-mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "httpx>=0.28.0",
                "mcp>=1.1.0",
                "python-dotenv>=1.0.1",
                "tweepy>=4.14.0"
            ],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use a Python image with uv pre-installed\nFROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv\n\n# Set the working directory in the container\nWORKDIR /app\n\n# Copy the pyproject.toml and uv.lock to install dependencies\nCOPY pyproject.toml uv.lock ./\n\n# Install the project's dependencies using uv\nRUN --mount=type=cache,target=/root/.cache/uv uv sync --frozen --no-install-project --no-dev --no-editable\n\n# Add the rest of the project source code\nADD src /app/src\n\n# Install the project itself\nRUN --mount=type=cache,target=/root/.cache/uv uv sync --frozen --no-dev --no-editable\n\n# Create a new stage for the final release\nFROM python:3.12-slim-bookworm\n\n# Set the working directory\nWORKDIR /app\n\n# Copy the installed dependencies from the uv stage\nCOPY --from=uv /root/.local /root/.local\nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\n\n# Add the source code to the container\nADD src /app/src\n\n# Place executables in the environment at the front of the path\nENV PATH=\"/app/.venv/bin:$PATH\"\n\n# Set environment variables for Twitter API keys\n# These should be set during runtime or via a secrets manager\nENV TWITTER_API_KEY=your_api_key\nENV TWITTER_API_SECRET=your_api_secret\nENV TWITTER_ACCESS_TOKEN=your_access_token\nENV TWITTER_ACCESS_TOKEN_SECRET=your_access_token_secret\n\n# Run the MCP server using uv\nENTRYPOINT [\"uv\", \"run\", \"x-mcp\"]\n",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
        "forks": 12,
        "stars": 39,
        "watchers": 2,
        "last_commit": "2025-03-12T08:44:10Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "XMind": {
        "name": "XMind",
        "repo_url": "https://github.com/apeyroux/mcp-xmind",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^0.5.0",
                "adm-zip": "^0.5.16",
                "diff": "^5.1.0",
                "glob": "^10.3.10",
                "minimatch": "^10.0.1",
                "zod": "^3.24.1",
                "zod-to-json-schema": "^3.24.1"
            },
            "devDependencies": {
                "@types/adm-zip": "^0.5.7",
                "@types/diff": "^5.0.9",
                "@types/minimatch": "^5.1.2",
                "@types/node": "^20.17.10",
                "shx": "^0.3.4",
                "typescript": "^5.7.2"
            }
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 17,
        "watchers": 2,
        "last_commit": "2024-12-27T20:24:06Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for apeyroux/mcp-xmind: 403; ClosedIssuesError: API error (closed issues) for apeyroux/mcp-xmind: 403"
    },
    "Xero": {
        "name": "Xero",
        "repo_url": "https://github.com/XeroAPI/xero-mcp-server",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "JavaScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.6.0",
                "dotenv": "^16.4.7",
                "openid-client": "^6.3.4",
                "xero-node": "^10.0.0",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@eslint/js": "^9.22.0",
                "@types/node": "^22.13.10",
                "eslint": "^9.22.0",
                "eslint-config-prettier": "^10.1.1",
                "globals": "^16.0.0",
                "prettier": "3.5.3",
                "shx": "^0.3.4",
                "typescript": "^5.8.2",
                "typescript-eslint": "^8.26.1"
            }
        },
        "has_dockerfile": false,
        "forks": 3,
        "stars": 21,
        "watchers": 9,
        "last_commit": "2025-03-31T00:43:07Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": true,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for XeroAPI/xero-mcp-server: 403; ClosedIssuesError: API error (closed issues) for XeroAPI/xero-mcp-server: 403"
    },
    "Xero-mcp-server": {
        "name": "Xero-mcp-server",
        "repo_url": "https://github.com/john-zhang-dev/xero-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.7.0",
                "dotenv": "^16.4.7",
                "open": "^10.1.0",
                "xero-node": "^10.0.0",
                "zod": "^3.24.2"
            },
            "devDependencies": {
                "@types/jest": "^29.5.14",
                "@types/node": "^22.13.10",
                "jest": "^29.7.0",
                "ts-jest": "^29.3.0",
                "ts-node": "^10.9.2",
                "tsx": "^4.19.3",
                "typescript": "^5.8.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\nFROM node:lts-alpine\n\nWORKDIR /app\n\n# Copy package files and install dependencies\nCOPY package*.json ./\nRUN npm install --ignore-scripts\n\n# Copy all source files\nCOPY . .\n\n# Build the project\nRUN npm run build\n\nEXPOSE 5000\n\nCMD [ \"node\", \"build/index.js\" ]\n",
        "base_docker_image": "node:lts-alpine",
        "forks": 4,
        "stars": 8,
        "watchers": 2,
        "last_commit": "2025-03-31T07:12:25Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API error (closed issues) for john-zhang-dev/xero-mcp: 403"
    },
    "XiYan": {
        "name": "XiYan",
        "repo_url": "https://github.com/XGenerationLab/xiyan_mcp_server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "requirements.txt",
        "packages": {
            "dependencies": [
                "mcp",
                "mysql-connector-python>=9.1.0",
                "sqlalchemy",
                "llama_index",
                "yaml",
                "pandas",
                "pymysql"
            ],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "# 使用Python 3.11作为基础镜像\nFROM python:3.11-slim\n\n# 设置工作目录\nWORKDIR /app\n\n#COPY requirements.txt .\nRUN pip install xiyan-mcp-server\n\n\n# 运行应用\nCMD [\"python\", \"-m\", \"xiyan_mcp_server\"]",
        "base_docker_image": "python:3.11-slim",
        "forks": 5,
        "stars": 39,
        "watchers": 1,
        "last_commit": "2025-03-28T08:27:54Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for XGenerationLab/xiyan_mcp_server: 403; ClosedIssuesError: API error (closed issues) for XGenerationLab/xiyan_mcp_server: 403"
    },
    "YouTube": {
        "name": "YouTube",
        "repo_url": "https://github.com/ZubeidHendricks/youtube-mcp-server",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.1.1",
                "googleapis": "^129.0.0",
                "ytdl-core": "^4.11.5",
                "youtube-transcript": "^1.0.6"
            },
            "devDependencies": {
                "@types/node": "^18.0.0",
                "typescript": "^5.0.0",
                "ts-node": "^10.9.1",
                "nodemon": "^3.0.0"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use an official Node runtime as the base image\nFROM node:16-alpine AS builder\n\n# Set the working directory\nWORKDIR /app\n\n# Copy package.json and package-lock.json\nCOPY package.json /app/\nCOPY tsconfig.json /app/\n\n# Install dependencies\nRUN npm install\n\n# Copy the rest of the application's source code\nCOPY . /app\n\n# Build the application\nRUN npm run build\n\n# Use a lightweight Node runtime as the release image\nFROM node:16-alpine AS release\n\n# Set the working directory\nWORKDIR /app\n\n# Copy the built application from the builder stage\nCOPY --from=builder /app/dist /app/dist\n\n# Copy package.json and package-lock.json\nCOPY --from=builder /app/package.json /app/package-lock.json /app/\n\n# Install only production dependencies\nRUN npm ci --only=production\n\n# Set environment variables (You need to set these while running the Docker container)\n# ENV YOUTUBE_API_KEY=<Your-YouTube-API-Key>\n# ENV YOUTUBE_TRANSCRIPT_LANG=en\n\n# Define the command to run the application\nCMD [\"node\", \"dist/index.js\"]\n",
        "base_docker_image": "node:16-alpine",
        "forks": 8,
        "stars": 69,
        "watchers": 2,
        "last_commit": "2025-01-31T10:02:02Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for ZubeidHendricks/youtube-mcp-server: 403; ClosedIssuesError: API error (closed issues) for ZubeidHendricks/youtube-mcp-server: 403"
    },
    "Zapier": {
        "name": "Zapier",
        "repo_url": "https://zapier.com/mcp",
        "type": "official",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "error": "Could not parse GitHub URL"
    },
    "ZenML": {
        "name": "ZenML",
        "repo_url": "https://github.com/zenml-io/mcp-zenml",
        "type": "official",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "requirements.txt",
        "packages": {
            "dependencies": [
                "httpx",
                "mcp",
                "zenml"
            ],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 3,
        "stars": 15,
        "watchers": 3,
        "last_commit": "2025-03-24T14:54:58Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for zenml-io/mcp-zenml: 403; ClosedIssuesError: API error (closed issues) for zenml-io/mcp-zenml: 403"
    },
    "code-assistant": {
        "name": "code-assistant",
        "repo_url": "https://github.com/stippi/code-assistant",
        "type": "community",
        "language_stack": [
            "Rust"
        ],
        "package_manager": [
            "cargo"
        ],
        "dependencies_file": "Cargo.toml",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 2,
        "stars": 13,
        "watchers": 2,
        "last_commit": "2025-03-31T10:54:35Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "code-executor": {
        "name": "code-executor",
        "repo_url": "https://github.com/bazinga012/mcp_code_executor",
        "type": "community",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 9,
        "stars": 43,
        "watchers": 1,
        "last_commit": "2025-03-20T04:07:12Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search; FileListAnalysisError: Empty file list"
    },
    "code-sandbox-mcp": {
        "name": "code-sandbox-mcp",
        "repo_url": "https://github.com/Automata-Labs-team/code-sandbox-mcp",
        "type": "community",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use the official Go image as a build environment\nFROM golang:1.23.4-alpine3.21 AS builder\n\n# Install necessary packages\nRUN apk add --no-cache bash git make\n\n# Set the working directory\nWORKDIR /app\n\n# Copy the source code into the container\nCOPY . .\n\n# Build the application using the build script\nRUN ./build.sh --release\n\n# Use a Docker in Docker image for running the application\nFROM docker:24-dind\n\n# Set the working directory\nWORKDIR /app\n\n# Copy the built binary from the builder stage\nCOPY --from=builder /app/bin/code-sandbox-mcp /usr/local/bin/\n\n# Expose any ports the application needs\nEXPOSE 9520\n\n# Run the application\nENTRYPOINT [\"/bin/bash\", \"code-sandbox-mcp\"]\n",
        "base_docker_image": "golang:1.23.4-alpine3.21",
        "forks": 13,
        "stars": 88,
        "watchers": 1,
        "last_commit": "2025-03-23T12:15:50Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "codemirror-mcp": {
        "name": "codemirror-mcp",
        "repo_url": "https://github.com/marimo-team/codemirror-mcp",
        "type": "framework",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@codemirror/autocomplete": "^6",
                "@codemirror/state": "^6",
                "@codemirror/view": "^6",
                "@modelcontextprotocol/sdk": "^1"
            },
            "devDependencies": {
                "@biomejs/biome": "^1.9.4",
                "@codemirror/lang-javascript": "^6.2.2",
                "@codemirror/lang-markdown": "^6.3.1",
                "@codemirror/view": "^6.36.1",
                "@modelcontextprotocol/sdk": "^1.1.0",
                "@types/node": "^22.10.5",
                "@uiw/codemirror-extensions-mentions": "^4.23.7",
                "@vitest/coverage-v8": "2.1.8",
                "codemirror": "^6.0.1",
                "jsdom": "^25.0.1",
                "typescript": "^5.7.3",
                "vite": "^6.0.7",
                "vitest": "^2.1.8",
                "husky": "^9.0.5",
                "lint-staged": "^15.2.0"
            }
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 52,
        "watchers": 1,
        "last_commit": "2025-01-09T19:21:10Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": true,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for marimo-team/codemirror-mcp: 403; ClosedIssuesError: API error (closed issues) for marimo-team/codemirror-mcp: 403"
    },
    "cognee-mcp": {
        "name": "cognee-mcp",
        "repo_url": "https://github.com/topoteretes/cognee/tree/main/cognee-mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "cognee[postgres,codegraph,gemini,huggingface]",
                "mcp==1.5.0",
                "uv>=0.6.3"
            ],
            "devDependencies": [
                "debugpy>=1.8.12"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Use a Python image with uv pre-installed\nFROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv\n\n# Install the project into `/app`\nWORKDIR /app\n\n# Enable bytecode compilation\n# ENV UV_COMPILE_BYTECODE=1\n\n# Copy from the cache instead of linking since it's a mounted volume\nENV UV_LINK_MODE=copy\n\n# Set build argument\nARG DEBUG\n\n# Set environment variable based on the build argument\nENV DEBUG=${DEBUG}\n\n# Install system dependencies\nRUN apt-get update && apt-get install -y \\\n    gcc \\\n    libpq-dev\n\n# Copy pyproject.toml and lockfile first for better caching\nCOPY pyproject.toml uv.lock ./\n\n# Install the project's dependencies using the lockfile and settings\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    uv sync --frozen --no-install-project --no-dev --no-editable\n\n# Copy .env file first if it exists (for environment variables)\nCOPY .env* /app/\n\n# Then, add the rest of the project source code and install it\n# Installing separately from its dependencies allows optimal layer caching\nCOPY . /app\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    uv sync --frozen --no-dev --no-editable\n\nFROM python:3.12-slim-bookworm\n\nWORKDIR /app\n \nCOPY --from=uv /root/.local /root/.local\nCOPY --from=uv /app /app\n\n# Place executables in the environment at the front of the path\nENV PATH=\"/app/.venv/bin:$PATH\"\n\n# Set environment variables for MCP server\nENV PYTHONUNBUFFERED=1\nENV MCP_LOG_LEVEL=DEBUG\nENV PYTHONPATH=/app\n\n# Use the application name from pyproject.toml for normal operation\n# For testing, we'll override this with a direct command\nENTRYPOINT [\"cognee\"]\n",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
        "forks": 142,
        "stars": 1770,
        "watchers": 12,
        "last_commit": "2025-03-31T18:12:33Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "coin_api_mcp": {
        "name": "coin_api_mcp",
        "repo_url": "https://github.com/longmans/coin_api_mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "httpx>=0.28.1",
                "mcp>=1.1.2"
            ],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use a Python image with uv pre-installed\nFROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS uv\n\n# Install the project into /app\nWORKDIR /app\n\n# Enable bytecode compilation\nENV UV_COMPILE_BYTECODE=1\n\n# Copy from the cache instead of linking since it's a mounted volume\nENV UV_LINK_MODE=copy\n\n# Install the project's dependencies using the lockfile and settings\nRUN --mount=type=cache,target=/root/.cache/uv     --mount=type=bind,source=uv.lock,target=uv.lock     --mount=type=bind,source=pyproject.toml,target=pyproject.toml     uv sync --frozen --no-install-project --no-dev --no-editable\n\n# Then, add the rest of the project source code and install it\n# Installing separately from its dependencies allows optimal layer caching\nADD . /app\nRUN --mount=type=cache,target=/root/.cache/uv     uv sync --frozen --no-dev --no-editable\n\nFROM python:3.12-slim-bookworm\n\nWORKDIR /app\n \nCOPY --from=uv /root/.local /root/.local\nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\n\n# Place executables in the environment at the front of the path\nENV PATH=\"/app/.venv/bin:$PATH\"\n\n# Environment variable for the CoinMarketCap API Key\nENV COINMARKETCAP_API_KEY=your_api_key_here\n\nENTRYPOINT [\"python\", \"-m\", \"coin_api_mcp\"]\n",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-bookworm-slim",
        "forks": 1,
        "stars": 14,
        "watchers": 1,
        "last_commit": "2025-02-14T15:00:05Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for longmans/coin_api_mcp: 403; ClosedIssuesError: API error (closed issues) for longmans/coin_api_mcp: 403"
    },
    "crypto-feargreed-mcp": {
        "name": "crypto-feargreed-mcp",
        "repo_url": "https://github.com/kukapay/crypto-feargreed-mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "httpx>=0.28.1",
                "mcp[cli]>=1.4.1"
            ],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 8,
        "watchers": 1,
        "last_commit": "2025-03-27T23:21:49Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for kukapay/crypto-feargreed-mcp: 403; ClosedIssuesError: API error (closed issues) for kukapay/crypto-feargreed-mcp: 403"
    },
    "cryptopanic-mcp-server": {
        "name": "cryptopanic-mcp-server",
        "repo_url": "https://github.com/kukapay/cryptopanic-mcp-server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "dotenv>=0.9.9",
                "mcp[cli]>=1.3.0",
                "requests>=2.32.3"
            ],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 3,
        "stars": 13,
        "watchers": 1,
        "last_commit": "2025-03-15T10:19:40Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for kukapay/cryptopanic-mcp-server: 403; ClosedIssuesError: API error (closed issues) for kukapay/cryptopanic-mcp-server: 403"
    },
    "deepseek-thinker-mcp": {
        "name": "deepseek-thinker-mcp",
        "repo_url": "https://github.com/ruixingshi/deepseek-thinker-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.0.4",
                "ollama": "^0.5.12",
                "openai": "^4.83.0",
                "os": "^0.1.2",
                "path": "^0.12.7",
                "zod": "^3.24.1",
                "zod-to-json-schema": "^3.24.1"
            },
            "devDependencies": {
                "@types/node": "^22.10.2",
                "typescript": "^5.7.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Use a Node.js image for building the application\nFROM node:20-alpine AS builder\n\n# Set the working directory\nWORKDIR /app\n\n# Copy package files and install dependencies\nCOPY package.json package-lock.json ./\nRUN npm install\n\n# Copy the source code and build the application\nCOPY src ./src\nCOPY tsconfig.json ./\nRUN npm run build\n\n# Use a lighter Node.js image for running the application\nFROM node:20-alpine AS release\n\n# Set the working directory\nWORKDIR /app\n\n# Copy the built application and node_modules from the builder stage\nCOPY --from=builder /app/build ./build\nCOPY --from=builder /app/node_modules ./node_modules\n\n# Set environment variables\nENV NODE_ENV=production\n\n# Command to run the application\nENTRYPOINT [\"node\", \"build/index.js\"]\n",
        "base_docker_image": "node:20-alpine",
        "forks": 7,
        "stars": 31,
        "watchers": 1,
        "last_commit": "2025-03-25T13:55:34Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for ruixingshi/deepseek-thinker-mcp: 403; ClosedIssuesError: API error (closed issues) for ruixingshi/deepseek-thinker-mcp: 403"
    },
    "dune-analytics-mcp": {
        "name": "dune-analytics-mcp",
        "repo_url": "https://github.com/kukapay/dune-analytics-mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp[cli]>=1.4.1",
                "pandas>=2.2.3"
            ],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 10,
        "watchers": 1,
        "last_commit": "2025-03-27T23:20:20Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for kukapay/dune-analytics-mcp: 403; ClosedIssuesError: API error (closed issues) for kukapay/dune-analytics-mcp: 403"
    },
    "eSignatures": {
        "name": "eSignatures",
        "repo_url": "https://github.com/esignaturescom/mcp-server-esignatures",
        "type": "official",
        "language_stack": [
            "Unknown"
        ],
        "package_manager": [
            "Unknown"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 4,
        "stars": 10,
        "watchers": 1,
        "last_commit": "2025-04-01T00:55:53Z",
        "has_docs": false,
        "has_readme": false,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for esignaturescom/mcp-server-esignatures: 403; ClosedIssuesError: API error (closed issues) for esignaturescom/mcp-server-esignatures: 403; FileListAnalysisError: Empty file list"
    },
    "fastn.ai – Unified API MCP Server": {
        "name": "fastn.ai – Unified API MCP Server",
        "repo_url": "https://github.com/fastnai/mcp-fastn",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "httpx>=0.28.1",
                "mcp[cli]>=1.2.0"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 6,
        "watchers": 0,
        "last_commit": "2025-03-18T18:34:06Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for fastnai/mcp-fastn: 403; ClosedIssuesError: API error (closed issues) for fastnai/mcp-fastn: 403"
    },
    "gotoHuman": {
        "name": "gotoHuman",
        "repo_url": "https://github.com/gotohuman/gotohuman-mcp-server",
        "type": "official",
        "language_stack": [
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm",
            "yarn"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.7.0",
                "gotohuman": "^0.2.8"
            },
            "devDependencies": {
                "@types/node": "^22.13.4",
                "typescript": "^5.8.2"
            }
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 9,
        "watchers": 3,
        "last_commit": "2025-03-24T23:31:53Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for gotohuman/gotohuman-mcp-server: 403; ClosedIssuesError: API error (closed issues) for gotohuman/gotohuman-mcp-server: 403"
    },
    "iFlytek Workflow": {
        "name": "iFlytek Workflow",
        "repo_url": "https://github.com/iflytek/ifly-workflow-mcp-server",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "poetry"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "httpx==0.28.1",
                "mcp==1.5.0",
                "pip==25.0.1",
                "pytest==8.3.5",
                "python-dotenv==1.0.1",
                "requests==2.32.3",
                "pyyaml==6.0.2"
            ],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 14,
        "watchers": 4,
        "last_commit": "2025-03-28T02:09:46Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "iTerm MCP": {
        "name": "iTerm MCP",
        "repo_url": "https://github.com/ferrislucas/iterm-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm",
            "yarn"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "0.6.0"
            },
            "devDependencies": {
                "@types/node": "^20.11.24",
                "ts-node": "^10.9.2",
                "typescript": "^5.3.3"
            }
        },
        "has_dockerfile": false,
        "forks": 12,
        "stars": 209,
        "watchers": 3,
        "last_commit": "2025-03-29T04:31:12Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for ferrislucas/iterm-mcp: 403; ClosedIssuesError: API error (closed issues) for ferrislucas/iterm-mcp: 403"
    },
    "kintone": {
        "name": "kintone",
        "repo_url": "https://github.com/macrat/mcp-server-kintone",
        "type": "community",
        "language_stack": [
            "Go"
        ],
        "package_manager": [
            "Go modules"
        ],
        "dependencies_file": "go.mod",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM golang:latest AS builder\n\nWORKDIR /app\n\nCOPY go.mod ./\n\nRUN go mod download\n\nCOPY . .\n\nRUN CGO_ENABLED=0 go build -o mcp-server-kintone\n\n\nFROM scratch\n\nCOPY --from=builder /app/mcp-server-kintone /\n\nENTRYPOINT [\"/mcp-server-kintone\"]\n",
        "base_docker_image": "golang:latest",
        "forks": 0,
        "stars": 6,
        "watchers": 1,
        "last_commit": "2025-03-02T13:45:09Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for macrat/mcp-server-kintone: 403; ClosedIssuesError: API error (closed issues) for macrat/mcp-server-kintone: 403"
    },
    "llm-context": {
        "name": "llm-context",
        "repo_url": "https://github.com/cyberchitta/llm-context.py",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "jinja2>=3.1.6, <4.0",
                "mcp>=1.3.0",
                "packaging>=24.1, <25.0",
                "pathspec>=0.12.1, <0.13.0",
                "pyperclip>=1.9.0, <2.0.0",
                "pyyaml>=6.0.2",
                "tree-sitter-language-pack>=0.6.0",
                "tree-sitter>=0.24"
            ],
            "devDependencies": [
                "git-cliff>=2.6.1, <3.0",
                "isort>=6.0.1, <7.0",
                "mypy>=1.11.2, <2.0",
                "pytest>=8.3.5, <9.0",
                "types-pyyaml>=6.0.12.20241230",
                "ruff>=0.9.10, <1.0",
                "taplo>=0.9.3, <1.0"
            ]
        },
        "has_dockerfile": false,
        "forks": 13,
        "stars": 165,
        "watchers": 5,
        "last_commit": "2025-03-31T15:36:31Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for cyberchitta/llm-context.py: 403; ClosedIssuesError: API error (closed issues) for cyberchitta/llm-context.py: 403"
    },
    "mac-messages-mcp": {
        "name": "mac-messages-mcp",
        "repo_url": "https://github.com/carterlasalle/mac_messages_mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp[cli]"
            ],
            "devDependencies": [
                "pytest>=7.0.0",
                "black>=23.0.0",
                "isort>=5.10.0",
                "mypy>=1.0.0"
            ]
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 31,
        "watchers": 1,
        "last_commit": "2025-03-16T22:35:09Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for carterlasalle/mac_messages_mcp: 403; ClosedIssuesError: API error (closed issues) for carterlasalle/mac_messages_mcp: 403"
    },
    "mcp-cli": {
        "name": "mcp-cli",
        "repo_url": "https://github.com/wong2/mcp-cli",
        "type": "resource",
        "language_stack": [
            "JavaScript",
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "pnpm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@json-schema-tools/traverse": "^1.10.4",
                "@modelcontextprotocol/sdk": "^1.6.1",
                "eventsource": "^3.0.5",
                "lodash-es": "^4.17.21",
                "meow": "^13.2.0",
                "prompts": "^2.4.2",
                "yocto-spinner": "^0.2.1",
                "yoctocolors": "^2.1.1"
            },
            "devDependencies": {}
        },
        "has_dockerfile": false,
        "forks": 17,
        "stars": 193,
        "watchers": 3,
        "last_commit": "2025-03-12T07:04:56Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for wong2/mcp-cli: 403; ClosedIssuesError: API error (closed issues) for wong2/mcp-cli: 403"
    },
    "mcp-dockmaster": {
        "name": "mcp-dockmaster",
        "repo_url": "https://mcp-dockmaster.com",
        "type": "resource",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "error": "Could not parse GitHub URL"
    },
    "mcp-get": {
        "name": "mcp-get",
        "repo_url": "https://mcp-get.com",
        "type": "resource",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "error": "Could not parse GitHub URL"
    },
    "mcp-guardian": {
        "name": "mcp-guardian",
        "repo_url": "https://github.com/eqtylab/mcp-guardian",
        "type": "resource",
        "language_stack": [
            "Rust"
        ],
        "package_manager": [
            "cargo"
        ],
        "dependencies_file": "Cargo.toml",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 3,
        "stars": 30,
        "watchers": 4,
        "last_commit": "2025-03-06T20:25:14Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for eqtylab/mcp-guardian: 403; ClosedIssuesError: API error (closed issues) for eqtylab/mcp-guardian: 403"
    },
    "mcp-k8s-go": {
        "name": "mcp-k8s-go",
        "repo_url": "https://github.com/strowk/mcp-k8s-go",
        "type": "community",
        "language_stack": [
            "Go"
        ],
        "package_manager": [
            "go modules"
        ],
        "dependencies_file": "go.mod",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile\n# Start with the official Golang image to use Go tools\nFROM golang:1.20-alpine AS builder\n\n# Set the working directory\nWORKDIR /app\n\n# Copy the Go mod and sum files for dependency installation\nCOPY go.mod go.sum ./\n\n# Download the dependencies\nRUN go mod download\n\n# Copy the entire source code\nCOPY . .\n\n# Build the Go application\nRUN go build -o mcp-k8s-go main.go\n\n# Use a minimal base image for the final binary\nFROM alpine:latest\n\n# Set the working directory\nWORKDIR /app\n\n# Copy the compiled binary from the builder\nCOPY --from=builder /app/mcp-k8s-go .\n\n# Set the KUBECONFIG environment variable to the default path (can be overridden)\nENV KUBECONFIG=/root/.kube/config\n\n# Command to run the binary\nENTRYPOINT [\"/app/mcp-k8s-go\"]\n",
        "base_docker_image": "golang:1.20-alpine",
        "forks": 22,
        "stars": 180,
        "watchers": 2,
        "last_commit": "2025-03-31T23:11:02Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for strowk/mcp-k8s-go: 403; ClosedIssuesError: API error (closed issues) for strowk/mcp-k8s-go: 403"
    },
    "mcp-local-rag": {
        "name": "mcp-local-rag",
        "repo_url": "https://github.com/nkapila6/mcp-local-rag",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "aiohttp>=3.11.13",
                "beautifulsoup4>=4.13.3",
                "duckduckgo-search>=7.5.2",
                "mcp[cli]>=1.3.0",
                "mediapipe>=0.10.21",
                "requests>=2.32.3"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": false,
        "forks": 2,
        "stars": 7,
        "watchers": 1,
        "last_commit": "2025-03-14T05:36:07Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for nkapila6/mcp-local-rag: 403; ClosedIssuesError: API error (closed issues) for nkapila6/mcp-local-rag: 403"
    },
    "mcp-manager": {
        "name": "mcp-manager",
        "repo_url": "https://github.com/zueai/mcp-manager",
        "type": "resource",
        "language_stack": [
            "TypeScript",
            "JavaScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "lucide-react": "^0.468.0",
                "react": "^18.3.1",
                "react-dom": "^18.3.1"
            },
            "devDependencies": {
                "@biomejs/biome": "^1.9.4",
                "@eslint/js": "^9.15.0",
                "@types/node": "^22.10.1",
                "@types/react": "^18.3.12",
                "@types/react-dom": "^18.3.1",
                "@vitejs/plugin-react": "^4.3.4",
                "autoprefixer": "^10.4.20",
                "concurrently": "^8.2.2",
                "daisyui": "^4.12.14",
                "electron": "^29.1.4",
                "electron-builder": "^25.1.8",
                "eslint": "^9.15.0",
                "eslint-plugin-react-hooks": "^5.0.0",
                "eslint-plugin-react-refresh": "^0.4.14",
                "globals": "^15.12.0",
                "postcss": "^8.4.49",
                "tailwindcss": "^3.4.16",
                "typescript": "~5.6.2",
                "typescript-eslint": "^8.15.0",
                "vite": "^6.0.1",
                "vite-plugin-electron": "^0.28.3",
                "vite-plugin-electron-renderer": "^0.14.5",
                "wait-on": "^7.2.0"
            }
        },
        "has_dockerfile": false,
        "forks": 22,
        "stars": 152,
        "watchers": 3,
        "last_commit": "2024-12-21T17:55:18Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for zueai/mcp-manager: 403; ClosedIssuesError: API error (closed issues) for zueai/mcp-manager: 403"
    },
    "mcp-proxy": {
        "name": "mcp-proxy",
        "repo_url": "https://github.com/sparfenyuk/mcp-proxy",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "mcp>=1.5.0,<2",
                "uvicorn>=0.34.0"
            ],
            "devDependencies": [
                "pytest>=8.3.3",
                "pytest-asyncio>=0.25.0",
                "coverage>=7.6.0",
                "mypy>=1.0.0"
            ]
        },
        "has_dockerfile": true,
        "dockerfile_content": "# Build stage with explicit platform specification\nFROM ghcr.io/astral-sh/uv:python3.12-alpine AS uv\n\n# Install the project into /app\nWORKDIR /app\n\n# Enable bytecode compilation\nENV UV_COMPILE_BYTECODE=1\n\n# Copy from the cache instead of linking since it's a mounted volume\nENV UV_LINK_MODE=copy\n\n# Install the project's dependencies using the lockfile and settings\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    --mount=type=bind,source=uv.lock,target=uv.lock \\\n    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \\\n    uv sync --frozen --no-install-project --no-dev --no-editable\n\n# Then, add the rest of the project source code and install it\n# Installing separately from its dependencies allows optimal layer caching\nADD . /app\nRUN --mount=type=cache,target=/root/.cache/uv \\\n    uv sync --frozen --no-dev --no-editable\n\n# Final stage with explicit platform specification\nFROM python:3.12-alpine\n\nCOPY --from=uv --chown=app:app /app/.venv /app/.venv\n\n# Place executables in the environment at the front of the path\nENV PATH=\"/app/.venv/bin:$PATH\"\n\nENTRYPOINT [\"mcp-proxy\"]\n",
        "base_docker_image": "ghcr.io/astral-sh/uv:python3.12-alpine",
        "forks": 43,
        "stars": 280,
        "watchers": 4,
        "last_commit": "2025-03-25T08:39:32Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for sparfenyuk/mcp-proxy: 403; ClosedIssuesError: API error (closed issues) for sparfenyuk/mcp-proxy: 403"
    },
    "mcp.run": {
        "name": "mcp.run",
        "repo_url": "https://mcp.run",
        "type": "resource",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "error": "Could not parse GitHub URL"
    },
    "mem0-mcp": {
        "name": "mem0-mcp",
        "repo_url": "https://github.com/mem0ai/mem0-mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "httpx>=0.28.1",
                "mcp[cli]>=1.3.0",
                "mem0ai>=0.1.55"
            ],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 9,
        "stars": 49,
        "watchers": 3,
        "last_commit": "2025-03-28T16:44:11Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for mem0ai/mem0-mcp: 403; ClosedIssuesError: API error (closed issues) for mem0ai/mem0-mcp: 403"
    },
    "mkinf": {
        "name": "mkinf",
        "repo_url": "https://mkinf.io",
        "type": "resource",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "error": "Could not parse GitHub URL"
    },
    "n8n": {
        "name": "n8n",
        "repo_url": "https://github.com/leonardsellem/n8n-mcp-server",
        "type": "community",
        "language_stack": [
            "JavaScript",
            "TypeScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^0.7.0",
                "axios": "^1.6.2",
                "dotenv": "^16.3.1"
            },
            "devDependencies": {
                "@babel/core": "^7.26.10",
                "@babel/plugin-transform-modules-commonjs": "^7.26.3",
                "@babel/preset-env": "^7.26.9",
                "@babel/preset-typescript": "^7.26.0",
                "@types/jest": "^29.5.14",
                "@types/node": "^20.10.0",
                "@typescript-eslint/eslint-plugin": "^6.13.1",
                "@typescript-eslint/parser": "^6.13.1",
                "babel-jest": "^29.7.0",
                "eslint": "^8.54.0",
                "jest": "^29.7.0",
                "ts-jest": "^29.1.1",
                "typescript": "^5.3.2"
            }
        },
        "has_dockerfile": false,
        "forks": 14,
        "stars": 76,
        "watchers": 1,
        "last_commit": "2025-03-31T09:31:22Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API error (open issues) for leonardsellem/n8n-mcp-server: 403; ClosedIssuesError: API error (closed issues) for leonardsellem/n8n-mcp-server: 403"
    },
    "ntfy-mcp": {
        "name": "ntfy-mcp",
        "repo_url": "https://github.com/teddyzxcv/ntfy-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript",
            "JavaScript",
            "Node.js"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "@modelcontextprotocol/sdk": "^1.7.0",
                "node-fetch": "^3.3.2",
                "dotenv": "^16.4.7",
                "zod": "^3.22.4"
            },
            "devDependencies": {
                "@types/node": "^22.13.10",
                "@types/node-fetch": "^2.6.12",
                "typescript": "^5.8.2"
            }
        },
        "has_dockerfile": true,
        "dockerfile_content": "FROM node:23\n\nWORKDIR /app\n\nCOPY package*.json ./\nCOPY package-lock.json ./\n\nRUN npm install\n\nCOPY build ./build\nCOPY src ./src\n\nCMD [\"node\", \"build/index.js\"]\n",
        "base_docker_image": "node:23",
        "forks": 0,
        "stars": 6,
        "watchers": 1,
        "last_commit": "2025-03-25T01:28:13Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "oatpp-mcp": {
        "name": "oatpp-mcp",
        "repo_url": "https://github.com/oatpp/oatpp-mcp",
        "type": "community",
        "language_stack": [
            "C++"
        ],
        "package_manager": [
            "cmake"
        ],
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 27,
        "watchers": 3,
        "last_commit": "2024-12-13T03:57:00Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": true,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "obsidian-mcp": {
        "name": "obsidian-mcp",
        "repo_url": "https://github.com/StevenStavrakis/obsidian-mcp",
        "type": "community",
        "language_stack": [
            "TypeScript"
        ],
        "package_manager": [
            "npm"
        ],
        "dependencies_file": "package.json",
        "packages": {
            "dependencies": {
                "yaml": "^2.6.1",
                "zod": "^3.22.4",
                "zod-to-json-schema": "^3.24.1"
            },
            "devDependencies": {
                "@modelcontextprotocol/sdk": "^1.0.4",
                "@types/node": "^20.0.0",
                "typescript": "^5.0.0",
                "@types/bun": "latest"
            }
        },
        "has_dockerfile": false,
        "forks": 14,
        "stars": 158,
        "watchers": 2,
        "last_commit": "2025-01-19T15:49:18Z",
        "has_docs": true,
        "has_readme": true,
        "has_examples": true,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "r/mcp": {
        "name": "r/mcp",
        "repo_url": "https://www.reddit.com/r/mcp",
        "type": "resource",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "error": "Could not parse GitHub URL"
    },
    "r/modelcontextprotocol": {
        "name": "r/modelcontextprotocol",
        "repo_url": "https://www.reddit.com/r/modelcontextprotocol",
        "type": "resource",
        "packages": {
            "dependencies": [],
            "devDependencies": []
        },
        "error": "Could not parse GitHub URL"
    },
    "scrapling-fetch": {
        "name": "scrapling-fetch",
        "repo_url": "https://github.com/cyberchitta/scrapling-fetch-mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "beautifulsoup4>=4.13.3",
                "lxml>=5.3.1",
                "markdownify>=1.1.0",
                "mcp>=1.4.0",
                "packaging>=24.1, <25.0",
                "scrapling>=0.2.98"
            ],
            "devDependencies": [
                "hatchling"
            ]
        },
        "has_dockerfile": false,
        "forks": 0,
        "stars": 6,
        "watchers": 2,
        "last_commit": "2025-03-20T13:44:47Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API error (open issues) for cyberchitta/scrapling-fetch-mcp: 403; ClosedIssuesError: API error (closed issues) for cyberchitta/scrapling-fetch-mcp: 403"
    },
    "whale-tracker-mcp": {
        "name": "whale-tracker-mcp",
        "repo_url": "https://github.com/kukapay/whale-tracker-mcp",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "httpx>=0.28.1",
                "mcp[cli]>=1.4.0"
            ],
            "devDependencies": []
        },
        "has_dockerfile": false,
        "forks": 2,
        "stars": 6,
        "watchers": 1,
        "last_commit": "2025-03-13T16:21:03Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    },
    "xcodebuild": {
        "name": "xcodebuild",
        "repo_url": "https://github.com/ShenghaiWang/xcodebuild",
        "type": "community",
        "language_stack": [
            "Python"
        ],
        "package_manager": [
            "pip"
        ],
        "dependencies_file": "pyproject.toml",
        "packages": {
            "dependencies": [
                "httpx>=0.28.1",
                "mcp[cli]>=1.3.0"
            ],
            "devDependencies": [
                "pyright>=1.1.389",
                "ruff>=0.7.3"
            ]
        },
        "has_dockerfile": false,
        "forks": 1,
        "stars": 31,
        "watchers": 1,
        "last_commit": "2025-03-12T08:57:03Z",
        "has_docs": false,
        "has_readme": true,
        "has_examples": false,
        "has_tests": false,
        "error": "OpenIssuesError: API returned 422 for open issue search; ClosedIssuesError: API returned 422 for closed issue search"
    }
}